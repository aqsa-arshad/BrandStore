// --------------------------------------------------------------------------------
// Copyright AspDotNetStorefront.com. All Rights Reserved.
// http://www.aspdotnetstorefront.com
// For details on this license please visit the product homepage at the URL above.
// THE ABOVE NOTICE MUST REMAIN INTACT. 
// --------------------------------------------------------------------------------
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.225.
// 
#pragma warning disable 1591

namespace GatewaySagePayments.SagePaymentsAPI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TRANSACTION_PROCESSINGSoap", Namespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
        "")]
    public partial class TRANSACTION_PROCESSING : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback BANKCARD_SALEOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_CREDIT_OR_REFUNDOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_AUTHONLYOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_CREDITOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_FORCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_VOIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_PRIOR_AUTH_SALEOperationCompleted;
        
        private System.Threading.SendOrPostCallback VIRTUAL_CHECK_PPD_SALEOperationCompleted;
        
        private System.Threading.SendOrPostCallback VIRTUAL_CHECK_PPD_CREDITOperationCompleted;
        
        private System.Threading.SendOrPostCallback VIRTUAL_CHECK_CCD_SALEOperationCompleted;
        
        private System.Threading.SendOrPostCallback VIRTUAL_CHECK_CREDIT_BY_REFERENCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback VIRTUAL_CHECK_CCD_CREDITOperationCompleted;
        
        private System.Threading.SendOrPostCallback VIRTUAL_CHECK_WEB_SALEOperationCompleted;
        
        private System.Threading.SendOrPostCallback VIRTUAL_CHECK_VOIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback VIRTUAL_CHECK_RCK_SALEOperationCompleted;
        
        private System.Threading.SendOrPostCallback VIRTUAL_CHECK_ARC_SALEOperationCompleted;
        
        private System.Threading.SendOrPostCallback VIRTUAL_CHECK_TEL_SALEOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_RETAIL_SWIPED_SALEOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_RETAIL_SWIPED_AUTHONLYOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_RETAIL_SWIPED_CREDITOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_RETAIL_KEYED_SALEOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_RETAIL_KEYED_SALE_WITH_AVSOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_RETAIL_KEYED_AUTHONLYOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_RETAIL_KEYED_FORCEOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_RETAIL_KEYED_CREDITOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_RECURRING_SALEOperationCompleted;
        
        private System.Threading.SendOrPostCallback BANKCARD_RECURRING_AUTHONLYOperationCompleted;
        
        private System.Threading.SendOrPostCallback VERIFY_BANKCARD_SERVICEOperationCompleted;
        
        private System.Threading.SendOrPostCallback VERIFY_EFT_SERVICEOperationCompleted;
        
        private System.Threading.SendOrPostCallback VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TRANSACTION_PROCESSING() {
            this.Url = global::GatewaySagePayments.Properties.Settings.Default.GatewaySagePayments_SagePaymentsAPI_TRANSACTION_PROCESSING;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event BANKCARD_SALECompletedEventHandler BANKCARD_SALECompleted;
        
        /// <remarks/>
        public event BANKCARD_CREDIT_OR_REFUNDCompletedEventHandler BANKCARD_CREDIT_OR_REFUNDCompleted;
        
        /// <remarks/>
        public event BANKCARD_AUTHONLYCompletedEventHandler BANKCARD_AUTHONLYCompleted;
        
        /// <remarks/>
        public event BANKCARD_CREDITCompletedEventHandler BANKCARD_CREDITCompleted;
        
        /// <remarks/>
        public event BANKCARD_FORCECompletedEventHandler BANKCARD_FORCECompleted;
        
        /// <remarks/>
        public event BANKCARD_VOIDCompletedEventHandler BANKCARD_VOIDCompleted;
        
        /// <remarks/>
        public event BANKCARD_PRIOR_AUTH_SALECompletedEventHandler BANKCARD_PRIOR_AUTH_SALECompleted;
        
        /// <remarks/>
        public event VIRTUAL_CHECK_PPD_SALECompletedEventHandler VIRTUAL_CHECK_PPD_SALECompleted;
        
        /// <remarks/>
        public event VIRTUAL_CHECK_PPD_CREDITCompletedEventHandler VIRTUAL_CHECK_PPD_CREDITCompleted;
        
        /// <remarks/>
        public event VIRTUAL_CHECK_CCD_SALECompletedEventHandler VIRTUAL_CHECK_CCD_SALECompleted;
        
        /// <remarks/>
        public event VIRTUAL_CHECK_CREDIT_BY_REFERENCECompletedEventHandler VIRTUAL_CHECK_CREDIT_BY_REFERENCECompleted;
        
        /// <remarks/>
        public event VIRTUAL_CHECK_CCD_CREDITCompletedEventHandler VIRTUAL_CHECK_CCD_CREDITCompleted;
        
        /// <remarks/>
        public event VIRTUAL_CHECK_WEB_SALECompletedEventHandler VIRTUAL_CHECK_WEB_SALECompleted;
        
        /// <remarks/>
        public event VIRTUAL_CHECK_VOIDCompletedEventHandler VIRTUAL_CHECK_VOIDCompleted;
        
        /// <remarks/>
        public event VIRTUAL_CHECK_RCK_SALECompletedEventHandler VIRTUAL_CHECK_RCK_SALECompleted;
        
        /// <remarks/>
        public event VIRTUAL_CHECK_ARC_SALECompletedEventHandler VIRTUAL_CHECK_ARC_SALECompleted;
        
        /// <remarks/>
        public event VIRTUAL_CHECK_TEL_SALECompletedEventHandler VIRTUAL_CHECK_TEL_SALECompleted;
        
        /// <remarks/>
        public event BANKCARD_RETAIL_SWIPED_SALECompletedEventHandler BANKCARD_RETAIL_SWIPED_SALECompleted;
        
        /// <remarks/>
        public event BANKCARD_RETAIL_SWIPED_AUTHONLYCompletedEventHandler BANKCARD_RETAIL_SWIPED_AUTHONLYCompleted;
        
        /// <remarks/>
        public event BANKCARD_RETAIL_SWIPED_CREDITCompletedEventHandler BANKCARD_RETAIL_SWIPED_CREDITCompleted;
        
        /// <remarks/>
        public event BANKCARD_RETAIL_KEYED_SALECompletedEventHandler BANKCARD_RETAIL_KEYED_SALECompleted;
        
        /// <remarks/>
        public event BANKCARD_RETAIL_KEYED_SALE_WITH_AVSCompletedEventHandler BANKCARD_RETAIL_KEYED_SALE_WITH_AVSCompleted;
        
        /// <remarks/>
        public event BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSCompletedEventHandler BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSCompleted;
        
        /// <remarks/>
        public event BANKCARD_RETAIL_KEYED_AUTHONLYCompletedEventHandler BANKCARD_RETAIL_KEYED_AUTHONLYCompleted;
        
        /// <remarks/>
        public event BANKCARD_RETAIL_KEYED_FORCECompletedEventHandler BANKCARD_RETAIL_KEYED_FORCECompleted;
        
        /// <remarks/>
        public event BANKCARD_RETAIL_KEYED_CREDITCompletedEventHandler BANKCARD_RETAIL_KEYED_CREDITCompleted;
        
        /// <remarks/>
        public event BANKCARD_RECURRING_SALECompletedEventHandler BANKCARD_RECURRING_SALECompleted;
        
        /// <remarks/>
        public event BANKCARD_RECURRING_AUTHONLYCompletedEventHandler BANKCARD_RECURRING_AUTHONLYCompleted;
        
        /// <remarks/>
        public event VERIFY_BANKCARD_SERVICECompletedEventHandler VERIFY_BANKCARD_SERVICECompleted;
        
        /// <remarks/>
        public event VERIFY_EFT_SERVICECompletedEventHandler VERIFY_EFT_SERVICECompleted;
        
        /// <remarks/>
        public event VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONCompletedEventHandler VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_SALE", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_SALE(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            object[] results = this.Invoke("BANKCARD_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        C_NAME,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_CARDNUMBER,
                        C_EXP,
                        C_CVV,
                        T_CUSTOMER_NUMBER,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_SALEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            this.BANKCARD_SALEAsync(M_ID, M_KEY, C_NAME, C_ADDRESS, C_CITY, C_STATE, C_ZIP, C_COUNTRY, C_EMAIL, C_CARDNUMBER, C_EXP, C_CVV, T_CUSTOMER_NUMBER, T_AMT, T_SHIPPING, T_TAX, T_ORDERNUM, C_TELEPHONE, C_FAX, C_SHIP_NAME, C_SHIP_ADDRESS, C_SHIP_CITY, C_SHIP_STATE, C_SHIP_ZIP, C_SHIP_COUNTRY, null);
        }
        
        /// <remarks/>
        public void BANKCARD_SALEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    object userState) {
            if ((this.BANKCARD_SALEOperationCompleted == null)) {
                this.BANKCARD_SALEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_SALEOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        C_NAME,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_CARDNUMBER,
                        C_EXP,
                        C_CVV,
                        T_CUSTOMER_NUMBER,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY}, this.BANKCARD_SALEOperationCompleted, userState);
        }
        
        private void OnBANKCARD_SALEOperationCompleted(object arg) {
            if ((this.BANKCARD_SALECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_SALECompleted(this, new BANKCARD_SALECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_CREDIT_OR_REFUND", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_CREDIT_OR_REFUND(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            object[] results = this.Invoke("BANKCARD_CREDIT_OR_REFUND", new object[] {
                        M_ID,
                        M_KEY,
                        C_NAME,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_CARDNUMBER,
                        C_EXP,
                        C_CVV,
                        T_CUSTOMER_NUMBER,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_CREDIT_OR_REFUNDAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            this.BANKCARD_CREDIT_OR_REFUNDAsync(M_ID, M_KEY, C_NAME, C_ADDRESS, C_CITY, C_STATE, C_ZIP, C_COUNTRY, C_EMAIL, C_CARDNUMBER, C_EXP, C_CVV, T_CUSTOMER_NUMBER, T_AMT, T_SHIPPING, T_TAX, T_ORDERNUM, C_TELEPHONE, C_FAX, C_SHIP_NAME, C_SHIP_ADDRESS, C_SHIP_CITY, C_SHIP_STATE, C_SHIP_ZIP, C_SHIP_COUNTRY, null);
        }
        
        /// <remarks/>
        public void BANKCARD_CREDIT_OR_REFUNDAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    object userState) {
            if ((this.BANKCARD_CREDIT_OR_REFUNDOperationCompleted == null)) {
                this.BANKCARD_CREDIT_OR_REFUNDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_CREDIT_OR_REFUNDOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_CREDIT_OR_REFUND", new object[] {
                        M_ID,
                        M_KEY,
                        C_NAME,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_CARDNUMBER,
                        C_EXP,
                        C_CVV,
                        T_CUSTOMER_NUMBER,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY}, this.BANKCARD_CREDIT_OR_REFUNDOperationCompleted, userState);
        }
        
        private void OnBANKCARD_CREDIT_OR_REFUNDOperationCompleted(object arg) {
            if ((this.BANKCARD_CREDIT_OR_REFUNDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_CREDIT_OR_REFUNDCompleted(this, new BANKCARD_CREDIT_OR_REFUNDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_AUTHONLY", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_AUTHONLY(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            object[] results = this.Invoke("BANKCARD_AUTHONLY", new object[] {
                        M_ID,
                        M_KEY,
                        C_NAME,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_CARDNUMBER,
                        C_EXP,
                        C_CVV,
                        T_CUSTOMER_NUMBER,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_AUTHONLYAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            this.BANKCARD_AUTHONLYAsync(M_ID, M_KEY, C_NAME, C_ADDRESS, C_CITY, C_STATE, C_ZIP, C_COUNTRY, C_EMAIL, C_CARDNUMBER, C_EXP, C_CVV, T_CUSTOMER_NUMBER, T_AMT, T_SHIPPING, T_TAX, T_ORDERNUM, C_TELEPHONE, C_FAX, C_SHIP_NAME, C_SHIP_ADDRESS, C_SHIP_CITY, C_SHIP_STATE, C_SHIP_ZIP, C_SHIP_COUNTRY, null);
        }
        
        /// <remarks/>
        public void BANKCARD_AUTHONLYAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    object userState) {
            if ((this.BANKCARD_AUTHONLYOperationCompleted == null)) {
                this.BANKCARD_AUTHONLYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_AUTHONLYOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_AUTHONLY", new object[] {
                        M_ID,
                        M_KEY,
                        C_NAME,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_CARDNUMBER,
                        C_EXP,
                        C_CVV,
                        T_CUSTOMER_NUMBER,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY}, this.BANKCARD_AUTHONLYOperationCompleted, userState);
        }
        
        private void OnBANKCARD_AUTHONLYOperationCompleted(object arg) {
            if ((this.BANKCARD_AUTHONLYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_AUTHONLYCompleted(this, new BANKCARD_AUTHONLYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_CREDIT", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_CREDIT(string M_ID, string M_KEY, string T_AMT, string T_REFERENCE) {
            object[] results = this.Invoke("BANKCARD_CREDIT", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        T_REFERENCE});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_CREDITAsync(string M_ID, string M_KEY, string T_AMT, string T_REFERENCE) {
            this.BANKCARD_CREDITAsync(M_ID, M_KEY, T_AMT, T_REFERENCE, null);
        }
        
        /// <remarks/>
        public void BANKCARD_CREDITAsync(string M_ID, string M_KEY, string T_AMT, string T_REFERENCE, object userState) {
            if ((this.BANKCARD_CREDITOperationCompleted == null)) {
                this.BANKCARD_CREDITOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_CREDITOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_CREDIT", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        T_REFERENCE}, this.BANKCARD_CREDITOperationCompleted, userState);
        }
        
        private void OnBANKCARD_CREDITOperationCompleted(object arg) {
            if ((this.BANKCARD_CREDITCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_CREDITCompleted(this, new BANKCARD_CREDITCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_FORCE", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_FORCE(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_AUTH, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            object[] results = this.Invoke("BANKCARD_FORCE", new object[] {
                        M_ID,
                        M_KEY,
                        C_NAME,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_CARDNUMBER,
                        C_EXP,
                        C_CVV,
                        T_CUSTOMER_NUMBER,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_AUTH,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_FORCEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_AUTH, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            this.BANKCARD_FORCEAsync(M_ID, M_KEY, C_NAME, C_ADDRESS, C_CITY, C_STATE, C_ZIP, C_COUNTRY, C_EMAIL, C_CARDNUMBER, C_EXP, C_CVV, T_CUSTOMER_NUMBER, T_AMT, T_SHIPPING, T_TAX, T_AUTH, T_ORDERNUM, C_TELEPHONE, C_FAX, C_SHIP_NAME, C_SHIP_ADDRESS, C_SHIP_CITY, C_SHIP_STATE, C_SHIP_ZIP, C_SHIP_COUNTRY, null);
        }
        
        /// <remarks/>
        public void BANKCARD_FORCEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_AUTH, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    object userState) {
            if ((this.BANKCARD_FORCEOperationCompleted == null)) {
                this.BANKCARD_FORCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_FORCEOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_FORCE", new object[] {
                        M_ID,
                        M_KEY,
                        C_NAME,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_CARDNUMBER,
                        C_EXP,
                        C_CVV,
                        T_CUSTOMER_NUMBER,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_AUTH,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY}, this.BANKCARD_FORCEOperationCompleted, userState);
        }
        
        private void OnBANKCARD_FORCEOperationCompleted(object arg) {
            if ((this.BANKCARD_FORCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_FORCECompleted(this, new BANKCARD_FORCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_VOID", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_VOID(string M_ID, string M_KEY, string T_REFERENCE) {
            object[] results = this.Invoke("BANKCARD_VOID", new object[] {
                        M_ID,
                        M_KEY,
                        T_REFERENCE});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_VOIDAsync(string M_ID, string M_KEY, string T_REFERENCE) {
            this.BANKCARD_VOIDAsync(M_ID, M_KEY, T_REFERENCE, null);
        }
        
        /// <remarks/>
        public void BANKCARD_VOIDAsync(string M_ID, string M_KEY, string T_REFERENCE, object userState) {
            if ((this.BANKCARD_VOIDOperationCompleted == null)) {
                this.BANKCARD_VOIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_VOIDOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_VOID", new object[] {
                        M_ID,
                        M_KEY,
                        T_REFERENCE}, this.BANKCARD_VOIDOperationCompleted, userState);
        }
        
        private void OnBANKCARD_VOIDOperationCompleted(object arg) {
            if ((this.BANKCARD_VOIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_VOIDCompleted(this, new BANKCARD_VOIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_PRIOR_AUTH_SALE", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_PRIOR_AUTH_SALE(string M_ID, string M_KEY, string T_AMT, string T_SHIPPING, string T_TAX, string T_AUTH, string T_REFERENCE) {
            object[] results = this.Invoke("BANKCARD_PRIOR_AUTH_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_AUTH,
                        T_REFERENCE});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_PRIOR_AUTH_SALEAsync(string M_ID, string M_KEY, string T_AMT, string T_SHIPPING, string T_TAX, string T_AUTH, string T_REFERENCE) {
            this.BANKCARD_PRIOR_AUTH_SALEAsync(M_ID, M_KEY, T_AMT, T_SHIPPING, T_TAX, T_AUTH, T_REFERENCE, null);
        }
        
        /// <remarks/>
        public void BANKCARD_PRIOR_AUTH_SALEAsync(string M_ID, string M_KEY, string T_AMT, string T_SHIPPING, string T_TAX, string T_AUTH, string T_REFERENCE, object userState) {
            if ((this.BANKCARD_PRIOR_AUTH_SALEOperationCompleted == null)) {
                this.BANKCARD_PRIOR_AUTH_SALEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_PRIOR_AUTH_SALEOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_PRIOR_AUTH_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_AUTH,
                        T_REFERENCE}, this.BANKCARD_PRIOR_AUTH_SALEOperationCompleted, userState);
        }
        
        private void OnBANKCARD_PRIOR_AUTH_SALEOperationCompleted(object arg) {
            if ((this.BANKCARD_PRIOR_AUTH_SALECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_PRIOR_AUTH_SALECompleted(this, new BANKCARD_PRIOR_AUTH_SALECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/VIRTUAL_CHECK_PPD_SALE", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VIRTUAL_CHECK_PPD_SALE(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            object[] results = this.Invoke("VIRTUAL_CHECK_PPD_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_PPD_SALEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            this.VIRTUAL_CHECK_PPD_SALEAsync(M_ID, M_KEY, C_ORIGINATOR_ID, C_FIRST_NAME, C_MIDDLE_INITIAL, C_LAST_NAME, C_SUFFIX, C_ADDRESS, C_CITY, C_STATE, C_ZIP, C_COUNTRY, C_EMAIL, C_RTE, C_ACCT, C_ACCT_TYPE, T_AMT, T_SHIPPING, T_TAX, T_ORDERNUM, C_TELEPHONE, C_FAX, C_SHIP_NAME, C_SHIP_ADDRESS, C_SHIP_CITY, C_SHIP_STATE, C_SHIP_ZIP, C_SHIP_COUNTRY, null);
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_PPD_SALEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    object userState) {
            if ((this.VIRTUAL_CHECK_PPD_SALEOperationCompleted == null)) {
                this.VIRTUAL_CHECK_PPD_SALEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVIRTUAL_CHECK_PPD_SALEOperationCompleted);
            }
            this.InvokeAsync("VIRTUAL_CHECK_PPD_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY}, this.VIRTUAL_CHECK_PPD_SALEOperationCompleted, userState);
        }
        
        private void OnVIRTUAL_CHECK_PPD_SALEOperationCompleted(object arg) {
            if ((this.VIRTUAL_CHECK_PPD_SALECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VIRTUAL_CHECK_PPD_SALECompleted(this, new VIRTUAL_CHECK_PPD_SALECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/VIRTUAL_CHECK_PPD_CREDIT", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VIRTUAL_CHECK_PPD_CREDIT(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            object[] results = this.Invoke("VIRTUAL_CHECK_PPD_CREDIT", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_PPD_CREDITAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            this.VIRTUAL_CHECK_PPD_CREDITAsync(M_ID, M_KEY, C_ORIGINATOR_ID, C_FIRST_NAME, C_MIDDLE_INITIAL, C_LAST_NAME, C_SUFFIX, C_ADDRESS, C_CITY, C_STATE, C_ZIP, C_COUNTRY, C_EMAIL, C_RTE, C_ACCT, C_ACCT_TYPE, T_AMT, T_SHIPPING, T_TAX, T_ORDERNUM, C_TELEPHONE, C_FAX, C_SHIP_NAME, C_SHIP_ADDRESS, C_SHIP_CITY, C_SHIP_STATE, C_SHIP_ZIP, C_SHIP_COUNTRY, null);
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_PPD_CREDITAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    object userState) {
            if ((this.VIRTUAL_CHECK_PPD_CREDITOperationCompleted == null)) {
                this.VIRTUAL_CHECK_PPD_CREDITOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVIRTUAL_CHECK_PPD_CREDITOperationCompleted);
            }
            this.InvokeAsync("VIRTUAL_CHECK_PPD_CREDIT", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY}, this.VIRTUAL_CHECK_PPD_CREDITOperationCompleted, userState);
        }
        
        private void OnVIRTUAL_CHECK_PPD_CREDITOperationCompleted(object arg) {
            if ((this.VIRTUAL_CHECK_PPD_CREDITCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VIRTUAL_CHECK_PPD_CREDITCompleted(this, new VIRTUAL_CHECK_PPD_CREDITCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/VIRTUAL_CHECK_CCD_SALE", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VIRTUAL_CHECK_CCD_SALE(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_EIN, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            object[] results = this.Invoke("VIRTUAL_CHECK_CCD_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_EIN,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_CCD_SALEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_EIN, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            this.VIRTUAL_CHECK_CCD_SALEAsync(M_ID, M_KEY, C_ORIGINATOR_ID, C_EIN, C_FIRST_NAME, C_MIDDLE_INITIAL, C_LAST_NAME, C_SUFFIX, C_ADDRESS, C_CITY, C_STATE, C_ZIP, C_COUNTRY, C_EMAIL, C_RTE, C_ACCT, C_ACCT_TYPE, T_AMT, T_SHIPPING, T_TAX, T_ORDERNUM, C_TELEPHONE, C_FAX, C_SHIP_NAME, C_SHIP_ADDRESS, C_SHIP_CITY, C_SHIP_STATE, C_SHIP_ZIP, C_SHIP_COUNTRY, null);
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_CCD_SALEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_EIN, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    object userState) {
            if ((this.VIRTUAL_CHECK_CCD_SALEOperationCompleted == null)) {
                this.VIRTUAL_CHECK_CCD_SALEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVIRTUAL_CHECK_CCD_SALEOperationCompleted);
            }
            this.InvokeAsync("VIRTUAL_CHECK_CCD_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_EIN,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY}, this.VIRTUAL_CHECK_CCD_SALEOperationCompleted, userState);
        }
        
        private void OnVIRTUAL_CHECK_CCD_SALEOperationCompleted(object arg) {
            if ((this.VIRTUAL_CHECK_CCD_SALECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VIRTUAL_CHECK_CCD_SALECompleted(this, new VIRTUAL_CHECK_CCD_SALECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/VIRTUAL_CHECK_CREDIT_BY_REFERENCE", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VIRTUAL_CHECK_CREDIT_BY_REFERENCE(string M_ID, string M_KEY, string T_AMT, string T_REFERENCE) {
            object[] results = this.Invoke("VIRTUAL_CHECK_CREDIT_BY_REFERENCE", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        T_REFERENCE});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_CREDIT_BY_REFERENCEAsync(string M_ID, string M_KEY, string T_AMT, string T_REFERENCE) {
            this.VIRTUAL_CHECK_CREDIT_BY_REFERENCEAsync(M_ID, M_KEY, T_AMT, T_REFERENCE, null);
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_CREDIT_BY_REFERENCEAsync(string M_ID, string M_KEY, string T_AMT, string T_REFERENCE, object userState) {
            if ((this.VIRTUAL_CHECK_CREDIT_BY_REFERENCEOperationCompleted == null)) {
                this.VIRTUAL_CHECK_CREDIT_BY_REFERENCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVIRTUAL_CHECK_CREDIT_BY_REFERENCEOperationCompleted);
            }
            this.InvokeAsync("VIRTUAL_CHECK_CREDIT_BY_REFERENCE", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        T_REFERENCE}, this.VIRTUAL_CHECK_CREDIT_BY_REFERENCEOperationCompleted, userState);
        }
        
        private void OnVIRTUAL_CHECK_CREDIT_BY_REFERENCEOperationCompleted(object arg) {
            if ((this.VIRTUAL_CHECK_CREDIT_BY_REFERENCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VIRTUAL_CHECK_CREDIT_BY_REFERENCECompleted(this, new VIRTUAL_CHECK_CREDIT_BY_REFERENCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/VIRTUAL_CHECK_CCD_CREDIT", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VIRTUAL_CHECK_CCD_CREDIT(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_EIN, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            object[] results = this.Invoke("VIRTUAL_CHECK_CCD_CREDIT", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_EIN,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_CCD_CREDITAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_EIN, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            this.VIRTUAL_CHECK_CCD_CREDITAsync(M_ID, M_KEY, C_ORIGINATOR_ID, C_EIN, C_FIRST_NAME, C_MIDDLE_INITIAL, C_LAST_NAME, C_SUFFIX, C_ADDRESS, C_CITY, C_STATE, C_ZIP, C_COUNTRY, C_EMAIL, C_RTE, C_ACCT, C_ACCT_TYPE, T_AMT, T_SHIPPING, T_TAX, T_ORDERNUM, C_TELEPHONE, C_FAX, C_SHIP_NAME, C_SHIP_ADDRESS, C_SHIP_CITY, C_SHIP_STATE, C_SHIP_ZIP, C_SHIP_COUNTRY, null);
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_CCD_CREDITAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_EIN, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    object userState) {
            if ((this.VIRTUAL_CHECK_CCD_CREDITOperationCompleted == null)) {
                this.VIRTUAL_CHECK_CCD_CREDITOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVIRTUAL_CHECK_CCD_CREDITOperationCompleted);
            }
            this.InvokeAsync("VIRTUAL_CHECK_CCD_CREDIT", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_EIN,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY}, this.VIRTUAL_CHECK_CCD_CREDITOperationCompleted, userState);
        }
        
        private void OnVIRTUAL_CHECK_CCD_CREDITOperationCompleted(object arg) {
            if ((this.VIRTUAL_CHECK_CCD_CREDITCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VIRTUAL_CHECK_CCD_CREDITCompleted(this, new VIRTUAL_CHECK_CCD_CREDITCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/VIRTUAL_CHECK_WEB_SALE", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VIRTUAL_CHECK_WEB_SALE(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    string C_SSN, 
                    string C_DL_STATE_CODE, 
                    string C_DL_NUMBER, 
                    string C_DOB) {
            object[] results = this.Invoke("VIRTUAL_CHECK_WEB_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY,
                        C_SSN,
                        C_DL_STATE_CODE,
                        C_DL_NUMBER,
                        C_DOB});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_WEB_SALEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    string C_SSN, 
                    string C_DL_STATE_CODE, 
                    string C_DL_NUMBER, 
                    string C_DOB) {
            this.VIRTUAL_CHECK_WEB_SALEAsync(M_ID, M_KEY, C_ORIGINATOR_ID, C_FIRST_NAME, C_MIDDLE_INITIAL, C_LAST_NAME, C_SUFFIX, C_ADDRESS, C_CITY, C_STATE, C_ZIP, C_COUNTRY, C_EMAIL, C_RTE, C_ACCT, C_ACCT_TYPE, T_AMT, T_SHIPPING, T_TAX, T_ORDERNUM, C_TELEPHONE, C_FAX, C_SHIP_NAME, C_SHIP_ADDRESS, C_SHIP_CITY, C_SHIP_STATE, C_SHIP_ZIP, C_SHIP_COUNTRY, C_SSN, C_DL_STATE_CODE, C_DL_NUMBER, C_DOB, null);
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_WEB_SALEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    string C_SSN, 
                    string C_DL_STATE_CODE, 
                    string C_DL_NUMBER, 
                    string C_DOB, 
                    object userState) {
            if ((this.VIRTUAL_CHECK_WEB_SALEOperationCompleted == null)) {
                this.VIRTUAL_CHECK_WEB_SALEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVIRTUAL_CHECK_WEB_SALEOperationCompleted);
            }
            this.InvokeAsync("VIRTUAL_CHECK_WEB_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY,
                        C_SSN,
                        C_DL_STATE_CODE,
                        C_DL_NUMBER,
                        C_DOB}, this.VIRTUAL_CHECK_WEB_SALEOperationCompleted, userState);
        }
        
        private void OnVIRTUAL_CHECK_WEB_SALEOperationCompleted(object arg) {
            if ((this.VIRTUAL_CHECK_WEB_SALECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VIRTUAL_CHECK_WEB_SALECompleted(this, new VIRTUAL_CHECK_WEB_SALECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/VIRTUAL_CHECK_VOID", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VIRTUAL_CHECK_VOID(string M_ID, string M_KEY, string T_REFERENCE) {
            object[] results = this.Invoke("VIRTUAL_CHECK_VOID", new object[] {
                        M_ID,
                        M_KEY,
                        T_REFERENCE});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_VOIDAsync(string M_ID, string M_KEY, string T_REFERENCE) {
            this.VIRTUAL_CHECK_VOIDAsync(M_ID, M_KEY, T_REFERENCE, null);
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_VOIDAsync(string M_ID, string M_KEY, string T_REFERENCE, object userState) {
            if ((this.VIRTUAL_CHECK_VOIDOperationCompleted == null)) {
                this.VIRTUAL_CHECK_VOIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVIRTUAL_CHECK_VOIDOperationCompleted);
            }
            this.InvokeAsync("VIRTUAL_CHECK_VOID", new object[] {
                        M_ID,
                        M_KEY,
                        T_REFERENCE}, this.VIRTUAL_CHECK_VOIDOperationCompleted, userState);
        }
        
        private void OnVIRTUAL_CHECK_VOIDOperationCompleted(object arg) {
            if ((this.VIRTUAL_CHECK_VOIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VIRTUAL_CHECK_VOIDCompleted(this, new VIRTUAL_CHECK_VOIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/VIRTUAL_CHECK_RCK_SALE", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VIRTUAL_CHECK_RCK_SALE(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            object[] results = this.Invoke("VIRTUAL_CHECK_RCK_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_RCK_SALEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            this.VIRTUAL_CHECK_RCK_SALEAsync(M_ID, M_KEY, C_ORIGINATOR_ID, C_FIRST_NAME, C_MIDDLE_INITIAL, C_LAST_NAME, C_SUFFIX, C_ADDRESS, C_CITY, C_STATE, C_ZIP, C_COUNTRY, C_EMAIL, C_RTE, C_ACCT, C_ACCT_TYPE, T_AMT, T_SHIPPING, T_TAX, T_ORDERNUM, C_TELEPHONE, C_FAX, C_SHIP_NAME, C_SHIP_ADDRESS, C_SHIP_CITY, C_SHIP_STATE, C_SHIP_ZIP, C_SHIP_COUNTRY, null);
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_RCK_SALEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    object userState) {
            if ((this.VIRTUAL_CHECK_RCK_SALEOperationCompleted == null)) {
                this.VIRTUAL_CHECK_RCK_SALEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVIRTUAL_CHECK_RCK_SALEOperationCompleted);
            }
            this.InvokeAsync("VIRTUAL_CHECK_RCK_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY}, this.VIRTUAL_CHECK_RCK_SALEOperationCompleted, userState);
        }
        
        private void OnVIRTUAL_CHECK_RCK_SALEOperationCompleted(object arg) {
            if ((this.VIRTUAL_CHECK_RCK_SALECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VIRTUAL_CHECK_RCK_SALECompleted(this, new VIRTUAL_CHECK_RCK_SALECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/VIRTUAL_CHECK_ARC_SALE", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VIRTUAL_CHECK_ARC_SALE(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string C_CHECK_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            object[] results = this.Invoke("VIRTUAL_CHECK_ARC_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        C_CHECK_NUMBER,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_ARC_SALEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string C_CHECK_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            this.VIRTUAL_CHECK_ARC_SALEAsync(M_ID, M_KEY, C_ORIGINATOR_ID, C_FIRST_NAME, C_MIDDLE_INITIAL, C_LAST_NAME, C_SUFFIX, C_ADDRESS, C_CITY, C_STATE, C_ZIP, C_COUNTRY, C_EMAIL, C_RTE, C_ACCT, C_ACCT_TYPE, C_CHECK_NUMBER, T_AMT, T_SHIPPING, T_TAX, T_ORDERNUM, C_TELEPHONE, C_FAX, C_SHIP_NAME, C_SHIP_ADDRESS, C_SHIP_CITY, C_SHIP_STATE, C_SHIP_ZIP, C_SHIP_COUNTRY, null);
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_ARC_SALEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string C_CHECK_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    object userState) {
            if ((this.VIRTUAL_CHECK_ARC_SALEOperationCompleted == null)) {
                this.VIRTUAL_CHECK_ARC_SALEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVIRTUAL_CHECK_ARC_SALEOperationCompleted);
            }
            this.InvokeAsync("VIRTUAL_CHECK_ARC_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        C_CHECK_NUMBER,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY}, this.VIRTUAL_CHECK_ARC_SALEOperationCompleted, userState);
        }
        
        private void OnVIRTUAL_CHECK_ARC_SALEOperationCompleted(object arg) {
            if ((this.VIRTUAL_CHECK_ARC_SALECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VIRTUAL_CHECK_ARC_SALECompleted(this, new VIRTUAL_CHECK_ARC_SALECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/VIRTUAL_CHECK_TEL_SALE", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VIRTUAL_CHECK_TEL_SALE(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            object[] results = this.Invoke("VIRTUAL_CHECK_TEL_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_TEL_SALEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            this.VIRTUAL_CHECK_TEL_SALEAsync(M_ID, M_KEY, C_ORIGINATOR_ID, C_FIRST_NAME, C_MIDDLE_INITIAL, C_LAST_NAME, C_SUFFIX, C_ADDRESS, C_CITY, C_STATE, C_ZIP, C_COUNTRY, C_EMAIL, C_RTE, C_ACCT, C_ACCT_TYPE, T_AMT, T_SHIPPING, T_TAX, T_ORDERNUM, C_TELEPHONE, C_FAX, C_SHIP_NAME, C_SHIP_ADDRESS, C_SHIP_CITY, C_SHIP_STATE, C_SHIP_ZIP, C_SHIP_COUNTRY, null);
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_TEL_SALEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    object userState) {
            if ((this.VIRTUAL_CHECK_TEL_SALEOperationCompleted == null)) {
                this.VIRTUAL_CHECK_TEL_SALEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVIRTUAL_CHECK_TEL_SALEOperationCompleted);
            }
            this.InvokeAsync("VIRTUAL_CHECK_TEL_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY}, this.VIRTUAL_CHECK_TEL_SALEOperationCompleted, userState);
        }
        
        private void OnVIRTUAL_CHECK_TEL_SALEOperationCompleted(object arg) {
            if ((this.VIRTUAL_CHECK_TEL_SALECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VIRTUAL_CHECK_TEL_SALECompleted(this, new VIRTUAL_CHECK_TEL_SALECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_RETAIL_SWIPED_SALE", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_RETAIL_SWIPED_SALE(string M_ID, string M_KEY, string T_AMT, string T_TRACKDATA) {
            object[] results = this.Invoke("BANKCARD_RETAIL_SWIPED_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        T_TRACKDATA});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_SWIPED_SALEAsync(string M_ID, string M_KEY, string T_AMT, string T_TRACKDATA) {
            this.BANKCARD_RETAIL_SWIPED_SALEAsync(M_ID, M_KEY, T_AMT, T_TRACKDATA, null);
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_SWIPED_SALEAsync(string M_ID, string M_KEY, string T_AMT, string T_TRACKDATA, object userState) {
            if ((this.BANKCARD_RETAIL_SWIPED_SALEOperationCompleted == null)) {
                this.BANKCARD_RETAIL_SWIPED_SALEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_RETAIL_SWIPED_SALEOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_RETAIL_SWIPED_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        T_TRACKDATA}, this.BANKCARD_RETAIL_SWIPED_SALEOperationCompleted, userState);
        }
        
        private void OnBANKCARD_RETAIL_SWIPED_SALEOperationCompleted(object arg) {
            if ((this.BANKCARD_RETAIL_SWIPED_SALECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_RETAIL_SWIPED_SALECompleted(this, new BANKCARD_RETAIL_SWIPED_SALECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_RETAIL_SWIPED_AUTHONLY", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_RETAIL_SWIPED_AUTHONLY(string M_ID, string M_KEY, string T_AMT, string T_TRACKDATA) {
            object[] results = this.Invoke("BANKCARD_RETAIL_SWIPED_AUTHONLY", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        T_TRACKDATA});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_SWIPED_AUTHONLYAsync(string M_ID, string M_KEY, string T_AMT, string T_TRACKDATA) {
            this.BANKCARD_RETAIL_SWIPED_AUTHONLYAsync(M_ID, M_KEY, T_AMT, T_TRACKDATA, null);
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_SWIPED_AUTHONLYAsync(string M_ID, string M_KEY, string T_AMT, string T_TRACKDATA, object userState) {
            if ((this.BANKCARD_RETAIL_SWIPED_AUTHONLYOperationCompleted == null)) {
                this.BANKCARD_RETAIL_SWIPED_AUTHONLYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_RETAIL_SWIPED_AUTHONLYOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_RETAIL_SWIPED_AUTHONLY", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        T_TRACKDATA}, this.BANKCARD_RETAIL_SWIPED_AUTHONLYOperationCompleted, userState);
        }
        
        private void OnBANKCARD_RETAIL_SWIPED_AUTHONLYOperationCompleted(object arg) {
            if ((this.BANKCARD_RETAIL_SWIPED_AUTHONLYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_RETAIL_SWIPED_AUTHONLYCompleted(this, new BANKCARD_RETAIL_SWIPED_AUTHONLYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_RETAIL_SWIPED_CREDIT", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_RETAIL_SWIPED_CREDIT(string M_ID, string M_KEY, string T_AMT, string T_TRACKDATA) {
            object[] results = this.Invoke("BANKCARD_RETAIL_SWIPED_CREDIT", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        T_TRACKDATA});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_SWIPED_CREDITAsync(string M_ID, string M_KEY, string T_AMT, string T_TRACKDATA) {
            this.BANKCARD_RETAIL_SWIPED_CREDITAsync(M_ID, M_KEY, T_AMT, T_TRACKDATA, null);
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_SWIPED_CREDITAsync(string M_ID, string M_KEY, string T_AMT, string T_TRACKDATA, object userState) {
            if ((this.BANKCARD_RETAIL_SWIPED_CREDITOperationCompleted == null)) {
                this.BANKCARD_RETAIL_SWIPED_CREDITOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_RETAIL_SWIPED_CREDITOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_RETAIL_SWIPED_CREDIT", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        T_TRACKDATA}, this.BANKCARD_RETAIL_SWIPED_CREDITOperationCompleted, userState);
        }
        
        private void OnBANKCARD_RETAIL_SWIPED_CREDITOperationCompleted(object arg) {
            if ((this.BANKCARD_RETAIL_SWIPED_CREDITCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_RETAIL_SWIPED_CREDITCompleted(this, new BANKCARD_RETAIL_SWIPED_CREDITCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_RETAIL_KEYED_SALE", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_RETAIL_KEYED_SALE(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP) {
            object[] results = this.Invoke("BANKCARD_RETAIL_KEYED_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        C_CARDNUMBER,
                        C_EXP});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_KEYED_SALEAsync(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP) {
            this.BANKCARD_RETAIL_KEYED_SALEAsync(M_ID, M_KEY, T_AMT, C_CARDNUMBER, C_EXP, null);
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_KEYED_SALEAsync(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP, object userState) {
            if ((this.BANKCARD_RETAIL_KEYED_SALEOperationCompleted == null)) {
                this.BANKCARD_RETAIL_KEYED_SALEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_RETAIL_KEYED_SALEOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_RETAIL_KEYED_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        C_CARDNUMBER,
                        C_EXP}, this.BANKCARD_RETAIL_KEYED_SALEOperationCompleted, userState);
        }
        
        private void OnBANKCARD_RETAIL_KEYED_SALEOperationCompleted(object arg) {
            if ((this.BANKCARD_RETAIL_KEYED_SALECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_RETAIL_KEYED_SALECompleted(this, new BANKCARD_RETAIL_KEYED_SALECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_RETAIL_KEYED_SALE_WITH_AVS", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_RETAIL_KEYED_SALE_WITH_AVS(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP, string C_ADDRESS, string C_ZIP) {
            object[] results = this.Invoke("BANKCARD_RETAIL_KEYED_SALE_WITH_AVS", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        C_CARDNUMBER,
                        C_EXP,
                        C_ADDRESS,
                        C_ZIP});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_KEYED_SALE_WITH_AVSAsync(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP, string C_ADDRESS, string C_ZIP) {
            this.BANKCARD_RETAIL_KEYED_SALE_WITH_AVSAsync(M_ID, M_KEY, T_AMT, C_CARDNUMBER, C_EXP, C_ADDRESS, C_ZIP, null);
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_KEYED_SALE_WITH_AVSAsync(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP, string C_ADDRESS, string C_ZIP, object userState) {
            if ((this.BANKCARD_RETAIL_KEYED_SALE_WITH_AVSOperationCompleted == null)) {
                this.BANKCARD_RETAIL_KEYED_SALE_WITH_AVSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_RETAIL_KEYED_SALE_WITH_AVSOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_RETAIL_KEYED_SALE_WITH_AVS", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        C_CARDNUMBER,
                        C_EXP,
                        C_ADDRESS,
                        C_ZIP}, this.BANKCARD_RETAIL_KEYED_SALE_WITH_AVSOperationCompleted, userState);
        }
        
        private void OnBANKCARD_RETAIL_KEYED_SALE_WITH_AVSOperationCompleted(object arg) {
            if ((this.BANKCARD_RETAIL_KEYED_SALE_WITH_AVSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_RETAIL_KEYED_SALE_WITH_AVSCompleted(this, new BANKCARD_RETAIL_KEYED_SALE_WITH_AVSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVS", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVS(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP, string C_ADDRESS, string C_ZIP) {
            object[] results = this.Invoke("BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVS", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        C_CARDNUMBER,
                        C_EXP,
                        C_ADDRESS,
                        C_ZIP});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSAsync(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP, string C_ADDRESS, string C_ZIP) {
            this.BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSAsync(M_ID, M_KEY, T_AMT, C_CARDNUMBER, C_EXP, C_ADDRESS, C_ZIP, null);
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSAsync(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP, string C_ADDRESS, string C_ZIP, object userState) {
            if ((this.BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSOperationCompleted == null)) {
                this.BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVS", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        C_CARDNUMBER,
                        C_EXP,
                        C_ADDRESS,
                        C_ZIP}, this.BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSOperationCompleted, userState);
        }
        
        private void OnBANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSOperationCompleted(object arg) {
            if ((this.BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSCompleted(this, new BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_RETAIL_KEYED_AUTHONLY", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_RETAIL_KEYED_AUTHONLY(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP) {
            object[] results = this.Invoke("BANKCARD_RETAIL_KEYED_AUTHONLY", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        C_CARDNUMBER,
                        C_EXP});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_KEYED_AUTHONLYAsync(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP) {
            this.BANKCARD_RETAIL_KEYED_AUTHONLYAsync(M_ID, M_KEY, T_AMT, C_CARDNUMBER, C_EXP, null);
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_KEYED_AUTHONLYAsync(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP, object userState) {
            if ((this.BANKCARD_RETAIL_KEYED_AUTHONLYOperationCompleted == null)) {
                this.BANKCARD_RETAIL_KEYED_AUTHONLYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_RETAIL_KEYED_AUTHONLYOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_RETAIL_KEYED_AUTHONLY", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        C_CARDNUMBER,
                        C_EXP}, this.BANKCARD_RETAIL_KEYED_AUTHONLYOperationCompleted, userState);
        }
        
        private void OnBANKCARD_RETAIL_KEYED_AUTHONLYOperationCompleted(object arg) {
            if ((this.BANKCARD_RETAIL_KEYED_AUTHONLYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_RETAIL_KEYED_AUTHONLYCompleted(this, new BANKCARD_RETAIL_KEYED_AUTHONLYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_RETAIL_KEYED_FORCE", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_RETAIL_KEYED_FORCE(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP, string T_AUTH) {
            object[] results = this.Invoke("BANKCARD_RETAIL_KEYED_FORCE", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        C_CARDNUMBER,
                        C_EXP,
                        T_AUTH});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_KEYED_FORCEAsync(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP, string T_AUTH) {
            this.BANKCARD_RETAIL_KEYED_FORCEAsync(M_ID, M_KEY, T_AMT, C_CARDNUMBER, C_EXP, T_AUTH, null);
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_KEYED_FORCEAsync(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP, string T_AUTH, object userState) {
            if ((this.BANKCARD_RETAIL_KEYED_FORCEOperationCompleted == null)) {
                this.BANKCARD_RETAIL_KEYED_FORCEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_RETAIL_KEYED_FORCEOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_RETAIL_KEYED_FORCE", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        C_CARDNUMBER,
                        C_EXP,
                        T_AUTH}, this.BANKCARD_RETAIL_KEYED_FORCEOperationCompleted, userState);
        }
        
        private void OnBANKCARD_RETAIL_KEYED_FORCEOperationCompleted(object arg) {
            if ((this.BANKCARD_RETAIL_KEYED_FORCECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_RETAIL_KEYED_FORCECompleted(this, new BANKCARD_RETAIL_KEYED_FORCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_RETAIL_KEYED_CREDIT", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_RETAIL_KEYED_CREDIT(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP) {
            object[] results = this.Invoke("BANKCARD_RETAIL_KEYED_CREDIT", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        C_CARDNUMBER,
                        C_EXP});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_KEYED_CREDITAsync(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP) {
            this.BANKCARD_RETAIL_KEYED_CREDITAsync(M_ID, M_KEY, T_AMT, C_CARDNUMBER, C_EXP, null);
        }
        
        /// <remarks/>
        public void BANKCARD_RETAIL_KEYED_CREDITAsync(string M_ID, string M_KEY, string T_AMT, string C_CARDNUMBER, string C_EXP, object userState) {
            if ((this.BANKCARD_RETAIL_KEYED_CREDITOperationCompleted == null)) {
                this.BANKCARD_RETAIL_KEYED_CREDITOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_RETAIL_KEYED_CREDITOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_RETAIL_KEYED_CREDIT", new object[] {
                        M_ID,
                        M_KEY,
                        T_AMT,
                        C_CARDNUMBER,
                        C_EXP}, this.BANKCARD_RETAIL_KEYED_CREDITOperationCompleted, userState);
        }
        
        private void OnBANKCARD_RETAIL_KEYED_CREDITOperationCompleted(object arg) {
            if ((this.BANKCARD_RETAIL_KEYED_CREDITCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_RETAIL_KEYED_CREDITCompleted(this, new BANKCARD_RETAIL_KEYED_CREDITCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_RECURRING_SALE", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_RECURRING_SALE(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            object[] results = this.Invoke("BANKCARD_RECURRING_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        C_NAME,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_CARDNUMBER,
                        C_EXP,
                        C_CVV,
                        T_CUSTOMER_NUMBER,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_RECURRING_SALEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            this.BANKCARD_RECURRING_SALEAsync(M_ID, M_KEY, C_NAME, C_ADDRESS, C_CITY, C_STATE, C_ZIP, C_COUNTRY, C_EMAIL, C_CARDNUMBER, C_EXP, C_CVV, T_CUSTOMER_NUMBER, T_AMT, T_SHIPPING, T_TAX, T_ORDERNUM, C_TELEPHONE, C_FAX, C_SHIP_NAME, C_SHIP_ADDRESS, C_SHIP_CITY, C_SHIP_STATE, C_SHIP_ZIP, C_SHIP_COUNTRY, null);
        }
        
        /// <remarks/>
        public void BANKCARD_RECURRING_SALEAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    object userState) {
            if ((this.BANKCARD_RECURRING_SALEOperationCompleted == null)) {
                this.BANKCARD_RECURRING_SALEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_RECURRING_SALEOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_RECURRING_SALE", new object[] {
                        M_ID,
                        M_KEY,
                        C_NAME,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_CARDNUMBER,
                        C_EXP,
                        C_CVV,
                        T_CUSTOMER_NUMBER,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY}, this.BANKCARD_RECURRING_SALEOperationCompleted, userState);
        }
        
        private void OnBANKCARD_RECURRING_SALEOperationCompleted(object arg) {
            if ((this.BANKCARD_RECURRING_SALECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_RECURRING_SALECompleted(this, new BANKCARD_RECURRING_SALECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/BANKCARD_RECURRING_AUTHONLY", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BANKCARD_RECURRING_AUTHONLY(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            object[] results = this.Invoke("BANKCARD_RECURRING_AUTHONLY", new object[] {
                        M_ID,
                        M_KEY,
                        C_NAME,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_CARDNUMBER,
                        C_EXP,
                        C_CVV,
                        T_CUSTOMER_NUMBER,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BANKCARD_RECURRING_AUTHONLYAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY) {
            this.BANKCARD_RECURRING_AUTHONLYAsync(M_ID, M_KEY, C_NAME, C_ADDRESS, C_CITY, C_STATE, C_ZIP, C_COUNTRY, C_EMAIL, C_CARDNUMBER, C_EXP, C_CVV, T_CUSTOMER_NUMBER, T_AMT, T_SHIPPING, T_TAX, T_ORDERNUM, C_TELEPHONE, C_FAX, C_SHIP_NAME, C_SHIP_ADDRESS, C_SHIP_CITY, C_SHIP_STATE, C_SHIP_ZIP, C_SHIP_COUNTRY, null);
        }
        
        /// <remarks/>
        public void BANKCARD_RECURRING_AUTHONLYAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_NAME, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_CARDNUMBER, 
                    string C_EXP, 
                    string C_CVV, 
                    string T_CUSTOMER_NUMBER, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    object userState) {
            if ((this.BANKCARD_RECURRING_AUTHONLYOperationCompleted == null)) {
                this.BANKCARD_RECURRING_AUTHONLYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBANKCARD_RECURRING_AUTHONLYOperationCompleted);
            }
            this.InvokeAsync("BANKCARD_RECURRING_AUTHONLY", new object[] {
                        M_ID,
                        M_KEY,
                        C_NAME,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_CARDNUMBER,
                        C_EXP,
                        C_CVV,
                        T_CUSTOMER_NUMBER,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY}, this.BANKCARD_RECURRING_AUTHONLYOperationCompleted, userState);
        }
        
        private void OnBANKCARD_RECURRING_AUTHONLYOperationCompleted(object arg) {
            if ((this.BANKCARD_RECURRING_AUTHONLYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BANKCARD_RECURRING_AUTHONLYCompleted(this, new BANKCARD_RECURRING_AUTHONLYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/VERIFY_BANKCARD_SERVICE", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VERIFY_BANKCARD_SERVICE(string M_ID, string M_KEY) {
            object[] results = this.Invoke("VERIFY_BANKCARD_SERVICE", new object[] {
                        M_ID,
                        M_KEY});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VERIFY_BANKCARD_SERVICEAsync(string M_ID, string M_KEY) {
            this.VERIFY_BANKCARD_SERVICEAsync(M_ID, M_KEY, null);
        }
        
        /// <remarks/>
        public void VERIFY_BANKCARD_SERVICEAsync(string M_ID, string M_KEY, object userState) {
            if ((this.VERIFY_BANKCARD_SERVICEOperationCompleted == null)) {
                this.VERIFY_BANKCARD_SERVICEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVERIFY_BANKCARD_SERVICEOperationCompleted);
            }
            this.InvokeAsync("VERIFY_BANKCARD_SERVICE", new object[] {
                        M_ID,
                        M_KEY}, this.VERIFY_BANKCARD_SERVICEOperationCompleted, userState);
        }
        
        private void OnVERIFY_BANKCARD_SERVICEOperationCompleted(object arg) {
            if ((this.VERIFY_BANKCARD_SERVICECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VERIFY_BANKCARD_SERVICECompleted(this, new VERIFY_BANKCARD_SERVICECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/VERIFY_EFT_SERVICE", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VERIFY_EFT_SERVICE(string M_ID, string M_KEY) {
            object[] results = this.Invoke("VERIFY_EFT_SERVICE", new object[] {
                        M_ID,
                        M_KEY});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VERIFY_EFT_SERVICEAsync(string M_ID, string M_KEY) {
            this.VERIFY_EFT_SERVICEAsync(M_ID, M_KEY, null);
        }
        
        /// <remarks/>
        public void VERIFY_EFT_SERVICEAsync(string M_ID, string M_KEY, object userState) {
            if ((this.VERIFY_EFT_SERVICEOperationCompleted == null)) {
                this.VERIFY_EFT_SERVICEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVERIFY_EFT_SERVICEOperationCompleted);
            }
            this.InvokeAsync("VERIFY_EFT_SERVICE", new object[] {
                        M_ID,
                        M_KEY}, this.VERIFY_EFT_SERVICEOperationCompleted, userState);
        }
        
        private void OnVERIFY_EFT_SERVICEOperationCompleted(object arg) {
            if ((this.VERIFY_EFT_SERVICECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VERIFY_EFT_SERVICECompleted(this, new VERIFY_EFT_SERVICECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "/VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATION", RequestNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", ResponseNamespace="https://www.sagepayments.net/web_services/vterm_extensions/TRANSACTION_PROCESSING" +
            "", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATION(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    string C_SSN, 
                    string C_DL_STATE_CODE, 
                    string C_DL_NUMBER, 
                    string C_DOB) {
            object[] results = this.Invoke("VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATION", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY,
                        C_SSN,
                        C_DL_STATE_CODE,
                        C_DL_NUMBER,
                        C_DOB});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    string C_SSN, 
                    string C_DL_STATE_CODE, 
                    string C_DL_NUMBER, 
                    string C_DOB) {
            this.VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONAsync(M_ID, M_KEY, C_ORIGINATOR_ID, C_FIRST_NAME, C_MIDDLE_INITIAL, C_LAST_NAME, C_SUFFIX, C_ADDRESS, C_CITY, C_STATE, C_ZIP, C_COUNTRY, C_EMAIL, C_RTE, C_ACCT, C_ACCT_TYPE, T_AMT, T_SHIPPING, T_TAX, T_ORDERNUM, C_TELEPHONE, C_FAX, C_SHIP_NAME, C_SHIP_ADDRESS, C_SHIP_CITY, C_SHIP_STATE, C_SHIP_ZIP, C_SHIP_COUNTRY, C_SSN, C_DL_STATE_CODE, C_DL_NUMBER, C_DOB, null);
        }
        
        /// <remarks/>
        public void VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONAsync(
                    string M_ID, 
                    string M_KEY, 
                    string C_ORIGINATOR_ID, 
                    string C_FIRST_NAME, 
                    string C_MIDDLE_INITIAL, 
                    string C_LAST_NAME, 
                    string C_SUFFIX, 
                    string C_ADDRESS, 
                    string C_CITY, 
                    string C_STATE, 
                    string C_ZIP, 
                    string C_COUNTRY, 
                    string C_EMAIL, 
                    string C_RTE, 
                    string C_ACCT, 
                    string C_ACCT_TYPE, 
                    string T_AMT, 
                    string T_SHIPPING, 
                    string T_TAX, 
                    string T_ORDERNUM, 
                    string C_TELEPHONE, 
                    string C_FAX, 
                    string C_SHIP_NAME, 
                    string C_SHIP_ADDRESS, 
                    string C_SHIP_CITY, 
                    string C_SHIP_STATE, 
                    string C_SHIP_ZIP, 
                    string C_SHIP_COUNTRY, 
                    string C_SSN, 
                    string C_DL_STATE_CODE, 
                    string C_DL_NUMBER, 
                    string C_DOB, 
                    object userState) {
            if ((this.VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONOperationCompleted == null)) {
                this.VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONOperationCompleted);
            }
            this.InvokeAsync("VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATION", new object[] {
                        M_ID,
                        M_KEY,
                        C_ORIGINATOR_ID,
                        C_FIRST_NAME,
                        C_MIDDLE_INITIAL,
                        C_LAST_NAME,
                        C_SUFFIX,
                        C_ADDRESS,
                        C_CITY,
                        C_STATE,
                        C_ZIP,
                        C_COUNTRY,
                        C_EMAIL,
                        C_RTE,
                        C_ACCT,
                        C_ACCT_TYPE,
                        T_AMT,
                        T_SHIPPING,
                        T_TAX,
                        T_ORDERNUM,
                        C_TELEPHONE,
                        C_FAX,
                        C_SHIP_NAME,
                        C_SHIP_ADDRESS,
                        C_SHIP_CITY,
                        C_SHIP_STATE,
                        C_SHIP_ZIP,
                        C_SHIP_COUNTRY,
                        C_SSN,
                        C_DL_STATE_CODE,
                        C_DL_NUMBER,
                        C_DOB}, this.VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONOperationCompleted, userState);
        }
        
        private void OnVIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONOperationCompleted(object arg) {
            if ((this.VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONCompleted(this, new VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_SALECompletedEventHandler(object sender, BANKCARD_SALECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_SALECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_SALECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_CREDIT_OR_REFUNDCompletedEventHandler(object sender, BANKCARD_CREDIT_OR_REFUNDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_CREDIT_OR_REFUNDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_CREDIT_OR_REFUNDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_AUTHONLYCompletedEventHandler(object sender, BANKCARD_AUTHONLYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_AUTHONLYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_AUTHONLYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_CREDITCompletedEventHandler(object sender, BANKCARD_CREDITCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_CREDITCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_CREDITCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_FORCECompletedEventHandler(object sender, BANKCARD_FORCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_FORCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_FORCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_VOIDCompletedEventHandler(object sender, BANKCARD_VOIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_VOIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_VOIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_PRIOR_AUTH_SALECompletedEventHandler(object sender, BANKCARD_PRIOR_AUTH_SALECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_PRIOR_AUTH_SALECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_PRIOR_AUTH_SALECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VIRTUAL_CHECK_PPD_SALECompletedEventHandler(object sender, VIRTUAL_CHECK_PPD_SALECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VIRTUAL_CHECK_PPD_SALECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VIRTUAL_CHECK_PPD_SALECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VIRTUAL_CHECK_PPD_CREDITCompletedEventHandler(object sender, VIRTUAL_CHECK_PPD_CREDITCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VIRTUAL_CHECK_PPD_CREDITCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VIRTUAL_CHECK_PPD_CREDITCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VIRTUAL_CHECK_CCD_SALECompletedEventHandler(object sender, VIRTUAL_CHECK_CCD_SALECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VIRTUAL_CHECK_CCD_SALECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VIRTUAL_CHECK_CCD_SALECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VIRTUAL_CHECK_CREDIT_BY_REFERENCECompletedEventHandler(object sender, VIRTUAL_CHECK_CREDIT_BY_REFERENCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VIRTUAL_CHECK_CREDIT_BY_REFERENCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VIRTUAL_CHECK_CREDIT_BY_REFERENCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VIRTUAL_CHECK_CCD_CREDITCompletedEventHandler(object sender, VIRTUAL_CHECK_CCD_CREDITCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VIRTUAL_CHECK_CCD_CREDITCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VIRTUAL_CHECK_CCD_CREDITCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VIRTUAL_CHECK_WEB_SALECompletedEventHandler(object sender, VIRTUAL_CHECK_WEB_SALECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VIRTUAL_CHECK_WEB_SALECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VIRTUAL_CHECK_WEB_SALECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VIRTUAL_CHECK_VOIDCompletedEventHandler(object sender, VIRTUAL_CHECK_VOIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VIRTUAL_CHECK_VOIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VIRTUAL_CHECK_VOIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VIRTUAL_CHECK_RCK_SALECompletedEventHandler(object sender, VIRTUAL_CHECK_RCK_SALECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VIRTUAL_CHECK_RCK_SALECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VIRTUAL_CHECK_RCK_SALECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VIRTUAL_CHECK_ARC_SALECompletedEventHandler(object sender, VIRTUAL_CHECK_ARC_SALECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VIRTUAL_CHECK_ARC_SALECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VIRTUAL_CHECK_ARC_SALECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VIRTUAL_CHECK_TEL_SALECompletedEventHandler(object sender, VIRTUAL_CHECK_TEL_SALECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VIRTUAL_CHECK_TEL_SALECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VIRTUAL_CHECK_TEL_SALECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_RETAIL_SWIPED_SALECompletedEventHandler(object sender, BANKCARD_RETAIL_SWIPED_SALECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_RETAIL_SWIPED_SALECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_RETAIL_SWIPED_SALECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_RETAIL_SWIPED_AUTHONLYCompletedEventHandler(object sender, BANKCARD_RETAIL_SWIPED_AUTHONLYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_RETAIL_SWIPED_AUTHONLYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_RETAIL_SWIPED_AUTHONLYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_RETAIL_SWIPED_CREDITCompletedEventHandler(object sender, BANKCARD_RETAIL_SWIPED_CREDITCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_RETAIL_SWIPED_CREDITCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_RETAIL_SWIPED_CREDITCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_RETAIL_KEYED_SALECompletedEventHandler(object sender, BANKCARD_RETAIL_KEYED_SALECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_RETAIL_KEYED_SALECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_RETAIL_KEYED_SALECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_RETAIL_KEYED_SALE_WITH_AVSCompletedEventHandler(object sender, BANKCARD_RETAIL_KEYED_SALE_WITH_AVSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_RETAIL_KEYED_SALE_WITH_AVSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_RETAIL_KEYED_SALE_WITH_AVSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSCompletedEventHandler(object sender, BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_RETAIL_KEYED_AUTHONLY_WITH_AVSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_RETAIL_KEYED_AUTHONLYCompletedEventHandler(object sender, BANKCARD_RETAIL_KEYED_AUTHONLYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_RETAIL_KEYED_AUTHONLYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_RETAIL_KEYED_AUTHONLYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_RETAIL_KEYED_FORCECompletedEventHandler(object sender, BANKCARD_RETAIL_KEYED_FORCECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_RETAIL_KEYED_FORCECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_RETAIL_KEYED_FORCECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_RETAIL_KEYED_CREDITCompletedEventHandler(object sender, BANKCARD_RETAIL_KEYED_CREDITCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_RETAIL_KEYED_CREDITCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_RETAIL_KEYED_CREDITCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_RECURRING_SALECompletedEventHandler(object sender, BANKCARD_RECURRING_SALECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_RECURRING_SALECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_RECURRING_SALECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BANKCARD_RECURRING_AUTHONLYCompletedEventHandler(object sender, BANKCARD_RECURRING_AUTHONLYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BANKCARD_RECURRING_AUTHONLYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BANKCARD_RECURRING_AUTHONLYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VERIFY_BANKCARD_SERVICECompletedEventHandler(object sender, VERIFY_BANKCARD_SERVICECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VERIFY_BANKCARD_SERVICECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VERIFY_BANKCARD_SERVICECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VERIFY_EFT_SERVICECompletedEventHandler(object sender, VERIFY_EFT_SERVICECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VERIFY_EFT_SERVICECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VERIFY_EFT_SERVICECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONCompletedEventHandler(object sender, VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VIRTUAL_CHECK_PPD_SALE_WITH_AUTHENTICATIONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
