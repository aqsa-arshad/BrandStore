<?xml version="1.0" standalone="yes"?>
<!-- ##################################################################################	-->
<!-- Copyright AspDotNetStorefront.com. All Rights Reserved.							-->
<!-- http://www.aspdotnetstorefront.com													-->
<!-- For details on this license please visit the product homepage at the URL above.	-->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.												-->
<!-- ##################################################################################	-->

<package debug="false" allowengine="true">
  <query name="Search" rowElementName="Entity" runif="product">
    <sql>
      <![CDATA[
        declare @searchlength int
        set @searchlength = len(@SearchTerm)
        select top 5 ProductID as ID, Name, Deleted, Published, 0 as InList
        from product
        where 
        (@searchlength > 2 and (@SearchTerm != '' and name like '%' + @SearchTerm + '%' and deleted = 0 and published = 1))
        and not(@CSVList like '%,'+convert(nvarchar(10),ProductID)+',%')
        order by name
            ]]>
    </sql>
    <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="searchterm" sqlDataType="varchar" defvalue=""  validationpattern="" />
    <queryparam paramname="@CSVList" paramtype="request" requestparamname="csvlist" sqlDataType="varchar" defvalue=""  validationpattern="" />
  </query>
  <query name="Selected" rowElementName="Entity" runif="product">
    <sql>
      <![CDATA[
        select top 500 ProductID as ID, Name, Deleted, Published, 1 as InList
        from product
        where
        (@CSVList like '%,'+convert(nvarchar(10),ProductID)+',%')
        and deleted = 0
        order by name
            ]]>
    </sql>
    <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="searchterm" sqlDataType="varchar" defvalue=""  validationpattern="" />
    <queryparam paramname="@CSVList" paramtype="request" requestparamname="csvlist" sqlDataType="varchar" defvalue=""  validationpattern="" />
  </query>


  <query name="Search" rowElementName="Entity" runif="category">
    <sql>
      <![CDATA[
        declare @searchlength int
        set @searchlength = len(@SearchTerm)
        select top 5 CategoryID as ID, Name, Deleted, Published, 0 as InList
        from Category
        where 
        (@searchlength > 2 and (@SearchTerm != '' and name like '%' + @SearchTerm + '%' and deleted = 0 and published = 1))
        and not(@CSVList like '%,'+convert(nvarchar(10),CategoryID)+',%')
        order by name
            ]]>
    </sql>
    <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="searchterm" sqlDataType="varchar" defvalue=""  validationpattern="" />
    <queryparam paramname="@CSVList" paramtype="request" requestparamname="csvlist" sqlDataType="varchar" defvalue=""  validationpattern="" />
  </query>
  <query name="Selected" rowElementName="Entity" runif="category">
    <sql>
      <![CDATA[
        select top 500 CategoryID as ID, Name, Deleted, Published, 1 as InList
        from Category
        where
        (@CSVList like '%,'+convert(nvarchar(10),CategoryID)+',%')
        and deleted = 0
        order by name
            ]]>
    </sql>
    <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="searchterm" sqlDataType="varchar" defvalue=""  validationpattern="" />
    <queryparam paramname="@CSVList" paramtype="request" requestparamname="csvlist" sqlDataType="varchar" defvalue=""  validationpattern="" />
  </query>


  <query name="Search" rowElementName="Entity" runif="section">
    <sql>
      <![CDATA[
        declare @searchlength int
        set @searchlength = len(@SearchTerm)
        select top 5 SectionID as ID, Name, Deleted, Published, 0 as InList
        from Section
        where 
        (@searchlength > 2 and (@SearchTerm != '' and name like '%' + @SearchTerm + '%' and deleted = 0 and published = 1))
        and not(@CSVList like '%,'+convert(nvarchar(10),SectionID)+',%')
        order by name
            ]]>
    </sql>
    <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="searchterm" sqlDataType="varchar" defvalue=""  validationpattern="" />
    <queryparam paramname="@CSVList" paramtype="request" requestparamname="csvlist" sqlDataType="varchar" defvalue=""  validationpattern="" />
  </query>
  <query name="Selected" rowElementName="Entity" runif="section">
    <sql>
      <![CDATA[
        select top 500 SectionID as ID, Name, Deleted, Published, 1 as InList
        from Section
        where
        (@CSVList like '%,'+convert(nvarchar(10),SectionID)+',%')
        and deleted = 0
        order by name
            ]]>
    </sql>
    <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="searchterm" sqlDataType="varchar" defvalue=""  validationpattern="" />
    <queryparam paramname="@CSVList" paramtype="request" requestparamname="csvlist" sqlDataType="varchar" defvalue=""  validationpattern="" />
  </query>


  <query name="Search" rowElementName="Entity" runif="manufacturer">
    <sql>
      <![CDATA[
        declare @searchlength int
        set @searchlength = len(@SearchTerm)
        select top 5 ManufacturerID as ID, Name, Deleted, Published, 0 as InList
        from Manufacturer
        where 
        (@searchlength > 2 and (@SearchTerm != '' and name like '%' + @SearchTerm + '%' and deleted = 0 and published = 1))
        and not(@CSVList like '%,'+convert(nvarchar(10),ManufacturerID)+',%')
        order by name
            ]]>
    </sql>
    <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="searchterm" sqlDataType="varchar" defvalue=""  validationpattern="" />
    <queryparam paramname="@CSVList" paramtype="request" requestparamname="csvlist" sqlDataType="varchar" defvalue=""  validationpattern="" />
  </query>
  <query name="Selected" rowElementName="Entity" runif="manufacturer">
    <sql>
      <![CDATA[
        select top 500 ManufacturerID as ID, Name, Deleted, Published, 1 as InList
        from Manufacturer
        where
        (@CSVList like '%,'+convert(nvarchar(10),ManufacturerID)+',%')
        and deleted = 0
        order by name
            ]]>
    </sql>
    <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="searchterm" sqlDataType="varchar" defvalue=""  validationpattern="" />
    <queryparam paramname="@CSVList" paramtype="request" requestparamname="csvlist" sqlDataType="varchar" defvalue=""  validationpattern="" />
  </query>

  <query name="Search" rowElementName="Entity" runif="customerlevel">
    <sql>
      <![CDATA[
        declare @searchlength int
        set @searchlength = len(@SearchTerm)
        select top 5 CustomerLevelID as ID, Name, Deleted, 1 as Published, 0 as InList
        from CustomerLevel
        where 
        (@searchlength > 2 and (@SearchTerm != '' and name like '%' + @SearchTerm + '%' and deleted = 0))
        and not(@CSVList like '%,'+convert(nvarchar(10),CustomerLevelID)+',%')
        order by name
            ]]>
    </sql>
    <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="searchterm" sqlDataType="varchar" defvalue=""  validationpattern="" />
    <queryparam paramname="@CSVList" paramtype="request" requestparamname="csvlist" sqlDataType="varchar" defvalue=""  validationpattern="" />
  </query>
  <query name="Selected" rowElementName="Entity" runif="customerlevel">
    <sql>
      <![CDATA[
        select top 500 CustomerLevelID as ID, Name, Deleted, 1 as Published, 1 as InList
        from CustomerLevel
        where
        (@CSVList like '%,'+convert(nvarchar(10),CustomerLevelID)+',%')
        and deleted = 0
        order by name
            ]]>
    </sql>
    <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="searchterm" sqlDataType="varchar" defvalue=""  validationpattern="" />
    <queryparam paramname="@CSVList" paramtype="request" requestparamname="csvlist" sqlDataType="varchar" defvalue=""  validationpattern="" />
  </query>

  <query name="Search" rowElementName="Entity" runif="shippingmethod">
    <sql>
      <![CDATA[
        declare @searchlength int
        set @searchlength = len(@SearchTerm)
        select top 5 ShippingMethodID as ID, Name, 0 as Deleted, 1 as Published, 0 as InList
        from ShippingMethod
        where 
        (@searchlength > 2 and (@SearchTerm != '' and name like '%' + @SearchTerm + '%'))
        and not(@CSVList like '%,'+convert(nvarchar(10),ShippingMethodID)+',%')
        order by name
            ]]>
    </sql>
    <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="searchterm" sqlDataType="varchar" defvalue=""  validationpattern="" />
    <queryparam paramname="@CSVList" paramtype="request" requestparamname="csvlist" sqlDataType="varchar" defvalue=""  validationpattern="" />
  </query>
  <query name="Selected" rowElementName="Entity" runif="shippingmethod">
    <sql>
      <![CDATA[
        select top 500 ShippingMethodID as ID, Name, 0 as Deleted, 1 as Published, 1 as InList
        from ShippingMethod
        where
        (@CSVList like '%,'+convert(nvarchar(10),ShippingMethodID)+',%')
        order by name
            ]]>
    </sql>
    <queryparam paramname="@SearchTerm" paramtype="request" requestparamname="searchterm" sqlDataType="varchar" defvalue=""  validationpattern="" />
    <queryparam paramname="@CSVList" paramtype="request" requestparamname="csvlist" sqlDataType="varchar" defvalue=""  validationpattern="" />
  </query>

  <PackageTransform>
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
      <!-- aspdnsf:no-system-required -->
      <xsl:output method="xml" omit-xml-declaration="yes" encoding="utf-8" />

      <xsl:param name="ListEntities" select="/root/Selected/Entity" />
      <xsl:param name="SearchEntities" select="/root/Search/Entity" />
      <xsl:param name="SearchTerm" select="/root/QueryString/searchterm" />

      <xsl:template match="/">
        <xsl:if test="count($ListEntities) + count($SearchEntities) > 0 or string-length($SearchTerm) > 0">
          <table>
            
            <xsl:if test="count($SearchEntities) > 5">
              <tr>
                <td colspan="3">
                  <em>[top five results alphabetically]</em>
                </td>
              </tr>
            </xsl:if>
            <xsl:apply-templates select="$SearchEntities[position() &lt; 6]" />
            <xsl:if test="count($SearchEntities) = 0 and string-length($SearchTerm) > 0">
              <tr>
                <td colspan="3">
                  <em>
                    <xsl:choose>
                      <xsl:when test="string-length($SearchTerm) &lt; 3">
                        [please enter a search term with 3 or more characters]
                      </xsl:when>
                      <xsl:otherwise>
                        [no results found for '<xsl:value-of select="$SearchTerm" />']
                      </xsl:otherwise>
                    </xsl:choose>
                  </em>
                </td>
              </tr>
            </xsl:if>
            <xsl:if test="count($SearchEntities) > 0">
              <tr>
                <td colspan="3">
                  <hr />
                </td>
              </tr>
            </xsl:if>
            <xsl:apply-templates select="$ListEntities" />
          </table>
        </xsl:if>
      </xsl:template>

      <xsl:template match="Entity" >
        <tr>
          <td>
            <input type="checkbox" value="{ID}" >
              <xsl:if test="InList=1">
                <xsl:attribute name="checked">
                  <xsl:text>true</xsl:text>
                </xsl:attribute>
              </xsl:if>
            </input>
          </td>
          <td>
            <xsl:value-of select="ID" />
          </td>
          <td>
            <xsl:value-of select="aspdnsf:GetMLValue(Name)" disable-output-escaping="yes" />
          </td>
        </tr>
      </xsl:template>

    </xsl:stylesheet>
  </PackageTransform>
</package>
