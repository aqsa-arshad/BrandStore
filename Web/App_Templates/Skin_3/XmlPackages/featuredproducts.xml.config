<?xml version="1.0" standalone="yes" ?>
<!-- ##################################################################################	-->
<!-- Copyright AspDotNetStorefront.com. All Rights Reserved.							-->
<!-- http://www.aspdotnetstorefront.com													-->
<!-- For details on this license please visit the product homepage at the URL above.	-->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.												-->
<!-- ##################################################################################	-->
<package version="2.1" displayname="Featured Products" debug="false" includeentityhelper="false">
	<query name="FeaturedProducts" rowElementName="Product" >
		<sql>
			<![CDATA[
			
				exec aspdnsf_GetFeaturedProducts @FeaturedCategoryID, @NumHomePageFeaturedProducts, @CustomerLevelID, @StoreID					
            ]]>
		</sql>
		<queryparam paramname="@NumHomePageFeaturedProducts"  paramtype="runtime"   requestparamname="NumHomePageFeaturedProducts"  sqlDataType="int" defvalue="5"    validationpattern="" />
		<queryparam paramname="@FeaturedCategoryID"           paramtype="appconfig" requestparamname="isFeaturedCategoryID"         sqlDataType="int" defvalue="0"    validationpattern="" />
		<queryparam paramname="@CustomerLevelID"              paramtype="system"    requestparamname="CustomerLevelID"              sqlDataType="int" defvalue="0"    validationpattern="" />
		<queryparam paramname="@StoreID"	                    paramtype="runtime"   requestparamname="StoreID"										  sqlDataType="int"	defvalue="1"    validationpattern="" />
	</query>


	<PackageTransform>
		<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
			<xsl:output method="html" omit-xml-declaration="yes" />

			<xsl:variable name="FeaturedProductsGridColWidth" select="aspdnsf:AppConfig('RelatedProductsGridColWidth')"></xsl:variable>

			<xsl:variable name="ProductIdsOnPage">
				<xsl:for-each select="/root/FeaturedProducts/Product/ProductID">
					<xsl:value-of select="." />
					<xsl:if test="position() != last()">
						<xsl:text>,</xsl:text>
					</xsl:if>
				</xsl:for-each>
			</xsl:variable>
			<xsl:variable name="AvailablePromotions" select="aspdnsf:XmlPackageAsXml('availablePromotions.xml.config', concat('productIdList=', $ProductIdsOnPage))/root/Promotions" />
			<xsl:variable name="Teaser" select="/root/Runtime/teaser" />

			<xsl:template match="/">
				<xsl:if test="count(/root/FeaturedProducts/Product) &gt; 0">
					<div class="featured-products other-products-wrap">
						<div class="group-header featured-items-header">
						</div>
						<xsl:if test="string-length('$Teaser') &gt; 0">
							<p class="featured-teaser">
								<xsl:value-of select="$Teaser" />
							</p>
						</xsl:if>
						<div class="row featured-item-row">
							<xsl:apply-templates select="/root/FeaturedProducts/Product" />
						</div>
					</div>
				</xsl:if>
			</xsl:template>

			<xsl:template match="Product">
				<xsl:variable name="Name" select="aspdnsf:GetMLValue(Name)"></xsl:variable>
				<xsl:variable name="SalesPromptName" select="aspdnsf:GetMLValue(SalesPromptName)"></xsl:variable>
				<xsl:variable name="SEAltText" select="aspdnsf:GetMLValue(SEAltText)"></xsl:variable>
				<xsl:variable name="AltText">
					<xsl:choose>
						<xsl:when test="$SEAltText=''">
							<xsl:value-of select="$Name" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$SEAltText" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="ProductID" select="ProductID" />
				<xsl:variable name="IsRecurring" select="HasRecurring" />
				<xsl:variable name="ProductLink" select="aspdnsf:ProductLink(ProductID, SEName, 0)" />
				<xsl:variable name="ImageUrl" select="aspdnsf:ImageUrl(ProductID, 'product', 'icon', 0)" />

				<xsl:if test="position() mod 4 = 1 and position() &gt; 1">
					<xsl:variable name="NewRowHtml">
						<xsl:text>&lt;/div&gt;&lt;div class="row  featured-item-row"&gt;</xsl:text>
					</xsl:variable>
					<xsl:value-of select="$NewRowHtml" disable-output-escaping="yes" />
				</xsl:if>
				<div class="featured-item grid-item col-xs-6 col-sm-3">
					<div class="featured-item-image-wrap grid-item-image-wrap">
						<a href="{$ProductLink}">
							<img src="{$ImageUrl}" alt="{$AltText}" class="img-thumbnail img-responsive featured-item-image grid-item-image" />
						</a>
					</div>
					<div class="featured-item-name-wrap grid-item-name-wrap">
						<a href="{$ProductLink}">
							<xsl:value-of select="$Name" disable-output-escaping="yes" />
						</a>
					</div>
					<xsl:if test="aspdnsf:AppConfigBool('DisplayOutOfStockProducts') = 'true'">
						<div class="featured-item-stock-wrap">
							<xsl:value-of select="aspdnsf:DisplayProductStockHint(ProductID,'Entity')" disable-output-escaping="yes" />
						</div>
					</xsl:if>
					<xsl:if test="$IsRecurring = 'True'">
						<div class="productCallToActionIsRecurring">
							<xsl:value-of select="aspdnsf:StringResource('product.CallToAction.IsRecurring')" disable-output-escaping="yes" />
						</div>
					</xsl:if>
					<xsl:apply-templates select="$AvailablePromotions/Promotion[ProductId=$ProductID]" />
				</div>
				<xsl:if test="position() mod 2 = 0">
					<div class="clearfix visible-xs featured-item-extra-small-clear"></div>
				</xsl:if>
			</xsl:template>

			<xsl:template match="Promotion">
				<div class="promotion-call-to-action">
					<xsl:value-of select="CallToAction" disable-output-escaping="yes" />
				</div>
			</xsl:template>

		</xsl:stylesheet>
	</PackageTransform>
</package>

