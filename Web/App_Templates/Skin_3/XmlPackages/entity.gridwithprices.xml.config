<?xml version="1.0" standalone="yes" ?>
<!-- ##################################################################################	-->
<!-- Copyright AspDotNetStorefront.com. All Rights Reserved.							-->
<!-- http://www.aspdotnetstorefront.com													-->
<!-- For details on this license please visit the product homepage at the URL above.	-->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.												-->
<!-- ##################################################################################	-->
<!-- This XML package displays products in a grid with the price for each, with the number of columns determined by the 'Column Width' attribute of the entity.  -->
<!-- Sub-entities are also displayed at the top in a list or grid, depending on the 'ShowSubcatsInGrid' AppConfig. -->
<!-- This package is designed for responsive skins using the Bootstrap framework. -->
<package version="2.1" displayname="Entity Responsive" debug="false" includeentityhelper="true">
  <query name="Products" rowElementName="Product">
    <sql>
      <![CDATA[
				exec dbo.aspdnsf_GetProducts 
					@categoryID = @CatID,
					@sectionID = @SecID,
					@manufacturerID = @ManID,
					@distributorID = @DistID,
					@genreID = @GenreID,
					@vectorID = @VectorID,
					@localeName = @locale,
					@CustomerLevelID = @CustLevelID,
					@affiliateID = @AffID,
					@ProductTypeID = @ProdTypeID, 
					@ViewType = 1,
					@pagenum = @pgnum,
					@pagesize = null,
					@StatsFirst = 0,
					@publishedonly = 1,
					@ExcludePacks = 0,
					@ExcludeKits = 0,
					@ExcludeSysProds = 0,
					@InventoryFilter = @InvFilter,
					@sortEntityName = @entityname,
					@storeID = @StoreID,
					@filterProduct = @FilterProduct
            ]]>
    </sql>
    <queryparam paramname="@CatID"          paramtype="runtime"   requestparamname="CatID"                                          sqlDataType="int"     defvalue="0"      validationpattern="" />
    <queryparam paramname="@SecID"          paramtype="runtime"   requestparamname="SecID"                                          sqlDataType="int"     defvalue="0"      validationpattern="" />
    <queryparam paramname="@ManID"          paramtype="runtime"   requestparamname="ManID"                                          sqlDataType="int"     defvalue="0"      validationpattern="" />
    <queryparam paramname="@DistID"         paramtype="runtime"   requestparamname="DistID"                                         sqlDataType="int"     defvalue="0"      validationpattern="" />
    <queryparam paramname="@GenreID"        paramtype="runtime"   requestparamname="GenreID"                                        sqlDataType="int"     defvalue="0"      validationpattern="" />
    <queryparam paramname="@VectorID"       paramtype="runtime"   requestparamname="VectorID"                                       sqlDataType="int"     defvalue="0"      validationpattern="" />
    <queryparam paramname="@locale"         paramtype="runtime"   requestparamname="LocaleSetting"                                  sqlDataType="varchar" defvalue="en-US"  validationpattern="" />
    <queryparam paramname="@CustLevelID"    paramtype="runtime"   requestparamname="CustomerLevelID"                                sqlDataType="int"     defvalue="0"      validationpattern="" />
    <queryparam paramname="@AffID"          paramtype="runtime"   requestparamname="AffiliateID"                                    sqlDataType="int"     defvalue="0"      validationpattern="" />
    <queryparam paramname="@ProdTypeID"     paramtype="runtime"   requestparamname="ProductTypeFilterID"                            sqlDataType="int"     defvalue="1"      validationpattern="" />
    <queryparam paramname="@pgnum"          paramtype="request"   requestparamname="pagenum"                                        sqlDataType="int"     defvalue="1"      validationpattern="" />
    <queryparam paramname="@InvFilter"      paramtype="appconfig" requestparamname="HideProductsWithLessThanThisInventoryLevel"     sqlDataType="int"     defvalue="0"      validationpattern="" />
    <queryparam paramname="@entityname"     paramtype="runtime"   requestparamname="EntityName"                                     sqlDataType="varchar" defvalue=""       validationpattern="" />
    <queryparam paramname="@StoreID"	    paramtype="runtime"   requestparamname="StoreID"										sqlDataType="int"	  defvalue="1"      validationpattern="" />
    <queryparam paramname="@FilterProduct"  paramtype="runtime"   requestparamname="FilterProduct"									sqlDataType="bit"	  defvalue="0"      validationpattern="" />
  </query>


  <PackageTransform>

    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
      <xsl:output method="html" omit-xml-declaration="yes" />

      <xsl:variable name="LocaleSetting" select="/root/Runtime/LocaleSetting" />
      <xsl:variable name="ShowSubcatsInGrid">
        <xsl:value-of select="aspdnsf:AppConfig('ShowSubcatsInGrid')" />
      </xsl:variable>
      <xsl:variable name="EntityName">
        <xsl:value-of select="/root/Runtime/EntityName" />
      </xsl:variable>
      <xsl:variable name="EntityID">
        <xsl:value-of select="/root/Runtime/EntityID" />
      </xsl:variable>
      <xsl:variable name="CurrentEntity" select="/root/EntityHelpers/*[name()=$EntityName]//Entity[EntityID=$EntityID]" />

      <xsl:variable name="BaseURL">
        <xsl:value-of select="aspdnsf:EntityLink(/root/Runtime/EntityID, $CurrentEntity/SEName, /root/Runtime/EntityName, 0)" />
      </xsl:variable>

      <xsl:variable name="CurrentPage">
        <xsl:choose>
          <xsl:when test="/root/QueryString/pagenum">
            <xsl:value-of select="/root/QueryString/pagenum" />
          </xsl:when>
          <xsl:otherwise>1</xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:variable name="AltText">
        <xsl:choose>
          <xsl:when test="CurrentEntity/SEAltText">
            <xsl:value-of select="aspdnsf:GetMLValue($CurrentEntity/SEAltText)" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="aspdnsf:GetMLValue($CurrentEntity/Name)" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:variable name="EntityImage" select="aspdnsf:ImageUrl($EntityID, $EntityName, 'icon', 0)" />
      <xsl:variable name="EntityImageExists" select="not(contains($EntityImage, 'nopicture'))" />
      <xsl:variable name="EntityDescription" select="aspdnsf:GetMLValue($CurrentEntity/Description)" />
      <xsl:variable name="ProductIdsOnPage">
        <xsl:for-each select="/root/Products/Product/ProductID">
          <xsl:value-of select="." />
          <xsl:if test="position() != last()">
            <xsl:text>,</xsl:text>
          </xsl:if>
        </xsl:for-each>
      </xsl:variable>

      <xsl:variable name="AvailablePromotions" select="aspdnsf:XmlPackageAsXml('availablePromotions.xml.config', concat('productIdList=', $ProductIdsOnPage))/root/Promotions" />

      <xsl:variable name="ShowHeaders" select="count(/root/Products/Product) &gt; 0 and count($CurrentEntity/Entity) &gt; 0" />

      <!-- This is the main template for this package.  It runs regardless of whether or not this entity contains any sub-entities or products. -->
      <xsl:template match="/">
        <div class="page-wrap entity-page">
          <h1 class="entity-page-header">
            <xsl:value-of select="aspdnsf:GetMLValue($CurrentEntity/Name)" disable-output-escaping="yes" />
          </h1>
          <xsl:if test="string-length($EntityDescription) &gt; 0 or $EntityImageExists">
            <div class="entity-page-description-wrap clearfix">
              <xsl:if test="$EntityImageExists">
                <div class="pull-left entity-page-image ">
                  <img src="{$EntityImage}" alt="{$AltText}" class="responsive-image img-thumbnail entity-image" />
                </div>
              </xsl:if>
              <xsl:if test="string-length($EntityDescription) &gt; 0">
                <div class="entity-page-description">
                  <xsl:value-of select="$EntityDescription" disable-output-escaping="yes" />
                </div>
              </xsl:if>
            </div>
          </xsl:if>
          <xsl:if test="count($CurrentEntity/Entity) &gt; 0">
            <xsl:if test="$ShowHeaders">
              <h2>
                <xsl:value-of select="aspdnsf:StringResource(concat('AppConfig.',$EntityName, 'PromptPlural'))" disable-output-escaping="yes" />
              </h2>
            </xsl:if>
            <xsl:choose>
              <xsl:when test="aspdnsf:AppConfigBool('ShowSubCatsInGrid') = 'true'">
                <div class="sub-entity-grid">
                  <div class="row sub-entity-row">
                    <xsl:apply-templates select="$CurrentEntity/Entity" mode="grid" />
                  </div>
                </div>
              </xsl:when>
              <xsl:otherwise>
                <ul class="sub-entity-list">
                  <xsl:apply-templates select="$CurrentEntity/Entity" mode="list" />
                </ul>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:if>
          <xsl:choose>
            <xsl:when test="count(/root/Products/Product) = 0 and count($CurrentEntity/Entity) = 0">
              <xsl:value-of select="aspdnsf:Topic(concat('empty', /root/Runtime/EntityName, 'text'))" disable-output-escaping="yes" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:if test="$ShowHeaders">
                <h2>
                  <xsl:value-of select="aspdnsf:StringResource('Global.Products')" disable-output-escaping="yes" />
                </h2>
              </xsl:if>
              <div class="entity-paging-wrap paging-wrap-top">
                <xsl:value-of select="aspdnsf:PagingControl($BaseURL, $CurrentPage, /root/Products2/Product/pages)" disable-output-escaping="yes" />
              </div>
              <div class="entity-page-products">
                <div class="row entity-page-product-row">
                  <xsl:apply-templates select="/root/Products/Product" />
                </div>
              </div>
              <div class="entity-paging-wrap paging-wrap-bottom">
                <xsl:value-of select="aspdnsf:PagingControl($BaseURL, $CurrentPage, /root/Products2/Product/pages)" disable-output-escaping="yes" />
              </div>
            </xsl:otherwise>
          </xsl:choose>
        </div>
      </xsl:template>

      <!-- Runs once for each sub-entity if ShowSubCatsInGrid AppConfig = true -->
      <xsl:template match="Entity" mode="grid">
        <xsl:variable name="Name" select="aspdnsf:GetMLValue(Name)" />
        <xsl:variable name="AltText">
          <xsl:choose>
            <xsl:when test="aspdnsf:GetMLValue(SEAltText)=''">
              <xsl:value-of select="$Name" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="aspdnsf:GetMLValue(SEAltText)" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="URL">
          <xsl:value-of select="aspdnsf:EntityLink(EntityID, SEName, $EntityName, 0, '')" />
        </xsl:variable>

        <!-- Start a new row if this one is full -->
        <xsl:if test="position() mod 4 = 1 and position() &gt; 1">
          <xsl:variable name="NewRowHtml">
            <xsl:text>&lt;/div&gt;&lt;div class="row  sub-entity-row"&gt;</xsl:text>
          </xsl:variable>
          <xsl:value-of select="$NewRowHtml" disable-output-escaping="yes" />
        </xsl:if>
        <div class="col-xs-6 col-sm-3 sub-entity-grid-item grid-item">
          <div class="sub-entity-image-wrap grid-item-image-wrap">
            <a href="{$URL}" class="sub-entity-image-link">
              <img src="{aspdnsf:ImageUrl(EntityID, $EntityName, 'icon', 0)}" alt="{$AltText}" class="img-responsive img-thumbnail sub-entity-grid-image grid-item-image" />
            </a>
          </div>
          <div class="sub-entity-name-wrap grid-item-name-wrap">
            <a href="{$URL}" class="sub-entity-name-link">
              <xsl:value-of select="$Name" disable-output-escaping="yes"/>
            </a>
          </div>
        </div>
        <xsl:if test="position() mod 2 = 0">
          <div class="clearfix visible-xs sub-entity-extra-small-clear"></div>
        </xsl:if>
      </xsl:template>

      <!-- Runs once for each sub-entity if ShowSubCatsInGrid AppConfig = false -->
      <xsl:template match="Entity" mode="list">
        <xsl:variable name="Name" select="aspdnsf:GetMLValue(Name)" />
        <xsl:variable name="URL">
          <xsl:value-of select="aspdnsf:EntityLink(EntityID, SEName, $EntityName, 0, '')" />
        </xsl:variable>
        <li class="sub-entity-list-item">
          <a href="{$URL}" class="sub-entity-name-link">
            <xsl:value-of select="$Name" disable-output-escaping="yes"/>
          </a>
        </li>
      </xsl:template>

      <!-- Runs once for each product mapped to this entity -->
      <xsl:template match="Product">
        <xsl:variable name="Name" select="aspdnsf:GetMLValue(Name)"></xsl:variable>
        <xsl:variable name="SalesPromptName" select="aspdnsf:GetMLValue(SalesPromptName)"></xsl:variable>
        <xsl:variable name="SEAltText" select="aspdnsf:GetMLValue(SEAltText)"></xsl:variable>
        <xsl:variable name="AltText">
          <xsl:choose>
            <xsl:when test="$SEAltText=''">
              <xsl:value-of select="$Name" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$SEAltText" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="ProductID" select="ProductID" />
        <xsl:variable name="IsRecurring" select="HasRecurring" />
        <xsl:variable name="ProductLink" select="aspdnsf:ProductandEntityLink(ProductID, SEName, $EntityID, $EntityName, 0)" />
        <xsl:variable name="ImageUrl" select="aspdnsf:ImageUrl(ProductID, 'product', 'icon', 0)" />

        <!-- Start a new row if this one is full -->
        <xsl:if test="position() mod 4 = 1 and position() &gt; 1">
          <xsl:variable name="NewRowHtml">
            <xsl:text>&lt;/div&gt;&lt;div class="row  entity-page-product-row"&gt;</xsl:text>
          </xsl:variable>
          <xsl:value-of select="$NewRowHtml" disable-output-escaping="yes" />
        </xsl:if>
        <div class="entity-page-product grid-item col-xs-6 col-sm-3">
          <div class="entity-product-image-wrap grid-item-image-wrap">
            <a href="{$ProductLink}">
              <img src="{$ImageUrl}" alt="{$AltText}" class="img-thumbnail img-responsive entity-product-image grid-item-image" />
            </a>
          </div>
          <div class="entity-product-name-wrap grid-item-name-wrap">
            <a href="{$ProductLink}">
              <xsl:value-of select="$Name" disable-output-escaping="yes" />
            </a>
          </div>
          <div class="entity-product-price-wrap grid-item-price-wrap">
            <xsl:value-of select="aspdnsf:GetVariantPrice(VariantID, HidePriceUntilCart, Price, SalePrice, ExtendedPrice, Points, $SalesPromptName, TaxClassID)" disable-output-escaping="yes"/>
          </div>
          <xsl:if test="aspdnsf:AppConfigBool('DisplayOutOfStockProducts') = 'true'">
            <div class="entity-product-stock-wrap">
              <xsl:value-of select="aspdnsf:DisplayProductStockHint(ProductID, VariantID,'Entity')" disable-output-escaping="yes" />
            </div>
          </xsl:if>
          <xsl:if test="$IsRecurring = 'True'">
            <div class="productCallToActionIsRecurring">
              <xsl:value-of select="aspdnsf:StringResource('product.CallToAction.IsRecurring', $LocaleSetting)" disable-output-escaping="yes" />
            </div>
          </xsl:if>
          <!-- Run the Promotion template to display the call to action text for any auto-assigned promos that apply to this product -->
          <xsl:apply-templates select="$AvailablePromotions/Promotion[ProductId=$ProductID]" />
        </div>
        <xsl:if test="position() mod 2 = 0">
          <div class="clearfix visible-xs entity-product-extra-small-clear"></div>
        </xsl:if>
      </xsl:template>

      <xsl:template match="Promotion">
        <div class="promotion-call-to-action">
          <xsl:value-of select="CallToAction" disable-output-escaping="yes" />
        </div>
      </xsl:template>

    </xsl:stylesheet>
  </PackageTransform>
</package>
