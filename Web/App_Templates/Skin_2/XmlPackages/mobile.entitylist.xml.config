<?xml version="1.0" standalone="yes" ?>
<!-- ##################################################################################	-->
<!-- Copyright AspDotNetStorefront.com. All Rights Reserved.							-->
<!-- http://www.aspdotnetstorefront.com													-->
<!-- For details on this license please visit the product homepage at the URL above.	-->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.												-->
<!-- ##################################################################################	-->
<package version="2.1" displayname="Categories" debug="false" includeentityhelper="true" allowengine="true">
  <query name="Store" rowElementName="Entities">
    <sql>
      <![CDATA[
          declare @entityname nvarchar(50)
          declare @rootentityid int
          
          set @entityname = 
          case 
			      when len(@runtimeentityname) > 0 then @runtimeentityname 
			      when len(@requestentityname) > 0 then @requestentityname 
			      else 'category' 
		      end
          
          set @rootentityid = 
          case 
			      when @runtimerootentityid > 0 then @runtimerootentityid 
			      when @requestrootentityid > 0 then @requestrootentityid 
	          else 0 
	        end
      
	        select * from EntityStore es
          join EntityMaster em on (es.EntityID = em.EntityID and es.EntityType = em.EntityType)
          where es.StoreID = @StoreID and es.EntityType = @entityname and em.parententityid = @rootentityid
        ]]>
    </sql>
    <queryparam paramname="@runtimeentityname" paramtype="runtime" requestparamname="entityname" sqlDataType="varchar" defvalue=""  validationpattern="" />
    <queryparam paramname="@requestentityname" paramtype="request" requestparamname="entityname" sqlDataType="varchar" defvalue=""  validationpattern="" />
    <queryparam paramname="@runtimerootentityid" paramtype="runtime" requestparamname="rootentityid" sqlDataType="int" defvalue="0"  validationpattern="" />
    <queryparam paramname="@requestrootentityid" paramtype="request" requestparamname="rootentityid" sqlDataType="int" defvalue="0"  validationpattern="" />
    <queryparam paramname="@StoreID" paramtype="runtime" requestparamname="StoreID" sqlDataType="int" defvalue="1" validationpattern="" />
  </query>
  <PackageTransform>
    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" xmlns:mobile="urn:mobile" exclude-result-prefixes="aspdnsf mobile">
      <xsl:output method="html" omit-xml-declaration="yes"/>
      <xsl:param name="EntityName">
        <xsl:choose>
          <xsl:when test="/root/QueryString/entityname">
            <xsl:value-of select="/root/QueryString/entityname" />
          </xsl:when>
          <xsl:when test="/root/Runtime/entityname">
            <xsl:value-of select="/root/Runtime/entityname" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>Category</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>
      <xsl:param name="RootEntityID">
        <xsl:choose>
          <xsl:when test="/root/QueryString/rootentityid">
            <xsl:value-of select="/root/QueryString/rootentityid" />
          </xsl:when>
          <xsl:when test="/root/Runtime/rootentityid">
            <xsl:value-of select="/root/Runtime/rootentityid" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>0</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:param>
      <xsl:param name="CurrentHelper" select="/root/EntityHelpers/*[aspdnsf:ToLower(name())=aspdnsf:ToLower($EntityName)]" />
      <xsl:param name="RequireStoreMappings" select="aspdnsf:ToLower(mobile:GlobalConfigBool('AllowEntityFiltering')) = 'true'" />
      

      <xsl:template match="/">
        <xsl:choose>
          <xsl:when test="$RootEntityID > 0">
            <xsl:if test="count($CurrentHelper//Entity[EntityID = $RootEntityID]/Entity[not($RequireStoreMappings) or EntityID = /root/Store/Entities/EntityID]) > 0">
              <ul data-role="listview">
                <xsl:apply-templates select="$CurrentHelper//Entity[EntityID = $RootEntityID]/Entity[not($RequireStoreMappings) or EntityID = /root/Store/Entities/EntityID]" />
              </ul>
            </xsl:if>
          </xsl:when>
          <xsl:otherwise>
            <xsl:if test="count($CurrentHelper/Entity[not($RequireStoreMappings) or EntityID = /root/Store/Entities/EntityID]) > 0">
              <ul data-role="listview">
                <xsl:apply-templates select="$CurrentHelper/Entity[not($RequireStoreMappings) or EntityID = /root/Store/Entities/EntityID]" />
              </ul>
            </xsl:if>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:template>

      <xsl:template match="Entity">
        <xsl:param name="prefix"></xsl:param>
        <xsl:param name="eName" select="aspdnsf:GetMLValue(Name)" />

        <li>
          <a href="{concat(substring($EntityName, 0, 2), '-',EntityID,'-',SEName,'.aspx')}">
            <xsl:value-of select="$eName"/>
          </a>
        </li>
      </xsl:template>

    </xsl:stylesheet>
  </PackageTransform>
</package>
