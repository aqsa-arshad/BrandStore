<?xml version="1.0" standalone="yes" ?>
<!-- ##################################################################################	-->
<!-- Copyright AspDotNetStorefront.com. All Rights Reserved.							-->
<!-- http://www.aspdotnetstorefront.com													-->
<!-- For details on this license please visit the product homepage at the URL above.	-->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.												-->
<!-- ##################################################################################	-->
<!-- This XML package is designed for multi-variant products.  Variant options are listed in a dropdown, with a single add to cart form. -->
<!-- This package is not designed for truly responsive skins, however it uses a basic grid system that will make pages somewhat resizeable. -->
<package version="2.1" displayname="Product Responsive" debug="false" includeentityhelper="true">
	<query name="Products" rowElementName="Product" runif="showproduct">
		<sql>
			<![CDATA[--run stored procedure
                exec dbo.aspdnsf_ProductInfo @ProductID, @CustomerLevelID, 0, 0, @affiliateID
            ]]>
		</sql>
		<queryparam paramname="@ProductID"       paramtype="request" requestparamname="ProductID"       sqlDataType="int" defvalue="0"  validationpattern="^\d{1,10}$" />
		<queryparam paramname="@CustomerLevelID" paramtype="runtime" requestparamname="CustomerLevelID" sqlDataType="int" defvalue="0"  validationpattern="" />
		<queryparam paramname="@affiliateID"     paramtype="system"  requestparamname="AffiliateID"     sqlDataType="int" defvalue="0"  validationpattern="" />
	</query>

	<PackageTransform>
		<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
			<xsl:output method="html" omit-xml-declaration="yes" />

			<xsl:variable name="DefaultVariantID">
				<xsl:choose>
					<xsl:when test="count(/root/Products/Product[isdefault = 1]) = 0">
						<xsl:value-of select="/root/Products/Product[1]/VariantID" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="/root/Products/Product[isdefault=1]/VariantID" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
			<xsl:param name="XmlPackageName" select="/root/System/XmlPackageName" />

			<xsl:param name="CatID">
				<xsl:choose>
					<xsl:when test="count(/root/QueryString/categoryid) &gt; 0">
						<xsl:value-of select="/root/QueryString/categoryid" />
					</xsl:when>
					<xsl:otherwise>0</xsl:otherwise>
				</xsl:choose>
			</xsl:param>

			<xsl:variable name="ProductIdsOnPage">
				<xsl:for-each select="/root/Products/Product/ProductID">
					<xsl:value-of select="." />
					<xsl:if test="position() != last()">
						<xsl:text>,</xsl:text>
					</xsl:if>
				</xsl:for-each>
			</xsl:variable>
			<xsl:variable name="AvailablePromotions" select="aspdnsf:XmlPackageAsXml('availablePromotions.xml.config', concat('productIdList=', $ProductIdsOnPage))/root/Promotions" />

			<!-- This is the main template for this package.  It runs once regardless of how this product is configured. -->
			<xsl:template match="/">

				<div class="page-wrap product-page dropdown-product-page">
					<xsl:apply-templates select="/root/Products/Product[isdefault = 1]" />
				</div>
				<xsl:if test="count(/root/Products/Product) &gt; 1">
					<!--Ensure that jQuery is available-->
					<script type="text/javascript">
						if(typeof jQuery !== 'function') {
						document.write(unescape("%3Cscript src='//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js' type='text/javascript'%3E%3C/script%3E"));
						}
					</script>
					<!-- Logic to keep the variant information on page updated with the chosen variant -->
					<script type="text/javascript">
						function updateVariantInfo(variantId){
							if(!variantId > 0){
								variantId = <xsl:value-of select="$DefaultVariantID" />;
							}
							var currentVariantInfoID = 'variant-info-' + variantId;
							$('#variant-info-wrap').find('.variant-info').each(function(index, element){
								if($(element).attr('id') == currentVariantInfoID){
									$(element).show();
								}
								else{
									$(element).hide();
								}
							});
						}

						//fix an issue with firefox hanging onto the selection
						if ($('#variantSelector').val()){
							updateVariantInfo($('#variantSelector').val());
						}
					</script>
				</xsl:if>
			</xsl:template>

			<!-- Runs once for the parent product (default variant) -->
			<xsl:template match="Product">
				<xsl:variable name="Name" select="aspdnsf:GetMLValue(Name)"></xsl:variable>
				<xsl:variable name="Description" select="aspdnsf:GetMLValue(Description)"></xsl:variable>
				<xsl:variable name="SEAltText" select="aspdnsf:GetMLValue(SEAltText)"></xsl:variable>
				<xsl:variable name="AltText">
					<xsl:choose>
						<xsl:when test="$SEAltText=''">
							<xsl:value-of select="$Name" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$SEAltText" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="ProductSpecsLink" select="aspdnsf:ProductSpecsLink(ProductID, SpecsInline, SpecTitle, SKU, SpecCall)" />
				<xsl:variable name="productId" select="ProductID" />
				<xsl:variable name="ProductImage" select="aspdnsf:XmlPackage('vortxmultiimage.xml.config', concat('productid=', ProductID))"/>

				<xsl:choose>
					<xsl:when test="IsAKit=1">
						<div class="page-row">
							Display of Kit Products is not supported by this XmlPackage. XmlPackage=<xsl:value-of select="$XmlPackageName" />
						</div>
					</xsl:when>
					<xsl:otherwise>
						<div class="product-page-top page-row">
							<div class="one-third product-image-column">
								<xsl:value-of select="$ProductImage" disable-output-escaping="yes"/>
							</div>
							<div class="two-thirds product-info-column">
								<div class="product-info-wrap">
									<h1 class="product-page-header">
										<xsl:value-of select="$Name" disable-output-escaping="yes" />
									</h1>
									<xsl:value-of select="aspdnsf:ProductNavLinks(ProductID, /root/Runtime/EntityID, /root/Runtime/EntityName, /root/EntityHelpers/*[name()=/root/Runtime/EntityName]/descendant::Entity[EntityID=/root/Runtime/EntityID]/SEName, 0, 1, 1)" disable-output-escaping="yes" />
									<xsl:choose>
										<!--Showing of inventory table also goes through the rules of DisplayOutOfStock appconfig if enabled..-->
										<xsl:when test="aspdnsf:AppConfigBool('ShowInventoryTable')='true'">
											<div class="inventory-table">
												<xsl:value-of select="aspdnsf:ShowInventoryTable(ProductID, VariantID)" disable-output-escaping="yes" />
											</div>
										</xsl:when>
										<xsl:otherwise>
											<xsl:if test="aspdnsf:AppConfigBool('DisplayOutOfStockProducts') = 'true'">
												<div class="stock-indicator">
													<xsl:value-of select="aspdnsf:DisplayProductStockHint(ProductID, VariantID, 'Product')" disable-output-escaping="yes" />
												</div>
											</xsl:if>
										</xsl:otherwise>
									</xsl:choose>
									<xsl:if test="count(/root/Products/Product) &gt; 1">
										<div id="product-options-wrap" class="product-options form-group">
											<label id="variant-options-label" class="variant-options-label" for="variantSelector">
												<xsl:value-of select="aspdnsf:StringResource('Common.VariantLabel')" disable-output-escaping="yes" />
											</label>
											<xsl:text>&#32;</xsl:text>
											<select id="variantSelector" name="variants" onchange="updateVariantInfo(this.value);" class="form-control">
												<xsl:apply-templates select="/root/Products/Product" mode="Variant"/>
											</select>
										</div>
									</xsl:if>
									<xsl:value-of select="aspdnsf:XmlPackage('vortxmultiimage.xml.config', concat('productid=', ProductID, '&#38;widgettodisplay=coloricons' ))" disable-output-escaping="yes" />
								<div id="variant-info-wrap" class="variant-info-wrap">
									<xsl:for-each select="/root/Products/Product">
										<xsl:call-template name="VariantInfo" />
									</xsl:for-each>
								</div>
								<xsl:value-of select="aspdnsf:EmailProductToFriend(ProductID, $CatID)" disable-output-escaping="yes" />
								<xsl:if test="string-length($ProductSpecsLink) &gt; 0">
									<div class="product-spec-wrap">
										<xsl:value-of select="$ProductSpecsLink" disable-output-escaping="yes" />
									</div>
								</xsl:if>
								<xsl:if test="string-length($Description) &gt; 0">
									<div class="product-description-wrap">
										<xsl:value-of select="$Description" disable-output-escaping="yes"/>
									</div>
								</xsl:if>
								<xsl:apply-templates select="$AvailablePromotions/Promotion[ProductId=$productId]" />
								<xsl:value-of select="aspdnsf:GetMultiVariantPayPalAd(ProductID)" disable-output-escaping="yes" />
							</div>
							</div>
						</div>
						<xsl:if test="boolean(/root/Runtime/showproduct)">
							<div class="product-page-footer">
								<xsl:value-of select="aspdnsf:RelatedProducts(ProductID)" disable-output-escaping="yes"/>
								<xsl:value-of select="aspdnsf:RecentlyViewed(ProductID)" disable-output-escaping="yes"/>
								<xsl:value-of select="aspdnsf:ShowUpsellProducts(ProductID)" disable-output-escaping="yes"/>
								<xsl:value-of select="aspdnsf:AlsoBought(ProductID, VariantID)" disable-output-escaping="yes"/>
								<xsl:value-of select="aspdnsf:ProductSpecs(ProductID, 1, SpecsInline, SpecCall, 400)" disable-output-escaping="yes"/>
								<xsl:value-of select="aspdnsf:ProductRatings(ProductID, 0, 0, 0, 0)" disable-output-escaping="yes"/>
							</div>
						</xsl:if>
					</xsl:otherwise>
				</xsl:choose>

			</xsl:template>

			<!-- Runs once for each variant, to build the dropdown list -->
			<xsl:template match="Product" mode="Variant">
				<xsl:variable name="vName" select="aspdnsf:GetMLValue(VariantName)"></xsl:variable>

				<option value="{VariantID}">
					<xsl:if test="isdefault=1">
						<xsl:attribute name="selected">selected</xsl:attribute>
					</xsl:if>
					<xsl:value-of select="$vName" disable-output-escaping="yes"/>
				</option>
			</xsl:template>

			<xsl:template name="VariantInfo" >
				<xsl:variable name="SalesPromptName" select="aspdnsf:GetMLValue(SalesPromptName)"></xsl:variable>
				<xsl:variable name="QuantityDiscountTable" select="aspdnsf:ShowQuantityDiscountTable(ProductID)" />
				<div id="variant-info-{VariantID}" class="variant-info">
					<xsl:attribute name="style">
						<xsl:choose>
							<xsl:when test="isdefault = 1">display: block;</xsl:when>
							<xsl:otherwise>display: none;</xsl:otherwise>
						</xsl:choose>
					</xsl:attribute>
					<xsl:if test="number(CustomerEntersPrice)=0">
						<div class="variant-price">
							<xsl:value-of select="aspdnsf:StrReplace(aspdnsf:GetVariantPrice(VariantID, HidePriceUntilCart, Price, SalePrice, ExtendedPrice, Points, $SalesPromptName), '&gt;&amp;nbsp;', '&gt;')" disable-output-escaping="yes"/>
						</div>
					</xsl:if>
					<xsl:if test="string-length($QuantityDiscountTable)">
						<div class="product-discounttable-wrap">
							<xsl:value-of select="$QuantityDiscountTable" disable-output-escaping="yes"/>
						</div>
					</xsl:if>
					<div class="add-to-cart-wrap">
						<xsl:value-of select="aspdnsf:AddtoCartForm(ProductID, VariantID, 1)" disable-output-escaping="yes"/>
					</div>
				</div>
			</xsl:template>

			<xsl:template match="Promotion">
				<div class="promotion-call-to-action">
					<xsl:value-of select="CallToAction" disable-output-escaping="yes" />
				</div>
			</xsl:template>

		</xsl:stylesheet>
	</PackageTransform>
</package>
