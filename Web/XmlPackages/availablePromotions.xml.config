<?xml version="1.0" standalone="yes" ?>
<!-- ##################################################################################	-->
<!-- Copyright AspDotNetStorefront.com. All Rights Reserved.							-->
<!-- http://www.aspdotnetstorefront.com													-->
<!-- For details on this license please visit the product homepage at the URL above.	-->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.												-->
<!-- ##################################################################################	-->
<package version="2.1" displayname="Available Promotions" debug="false" includeentityhelper="false" allowengine="true">
	<query name="Promotions" rowElementName="Promotion" retType="xml">
		<sql>
			<![CDATA[
			
				declare @productIds table (ProductId int not null)
				insert into @productIds select distinct * from dbo.Split(@productIdList, ',')

				declare @FilterPromotions tinyint
				SET @FilterPromotions = (SELECT case ConfigValue WHEN 'true' THEN 1 ELSE 0 END FROM GlobalConfig WHERE Name='AllowCouponFiltering')

				DECLARE @CustomerEmail varchar(max)
				SELECT @CustomerEmail = Email FROM Customer WHERE CustomerID = @CustomerID
				
				select
					DISTINCT ids.ProductId,
					p.CallToAction
				from
					Promotions p
						left join (SELECT PromotionRuleData.value('(/ArrayOfPromotionRuleBase/PromotionRuleBase/ExpirationDate/node())[1]', 'nvarchar(40)') AS ExpDate, Id 
							FROM Promotions) d on d.Id = p.Id
						left join PromotionStore pt
						  on p.Id = pt.PromotionID,
					@productIds ids
						left join ProductCategory pc
							on pc.ProductId = ids.ProductId
						left join ProductSection ps
							on ps.ProductId = ids.ProductId
						left join ProductManufacturer pm
							on pm.ProductId = ids.ProductId
				where
					p.Active = 1
					and p.AutoAssigned = 1
					and (d.ExpDate IS NULL OR CONVERT(date, d.ExpDate) > getDate())
					and isnull(p.CallToAction, '') != ''
          and (pt.StoreID = @StoreID OR @FilterPromotions = 0)
					and (
						-- ProductIdPromotionRule
						p.PromotionRuleData.exist('/ArrayOfPromotionRuleBase/PromotionRuleBase/ProductIds[int = sql:column("ids.ProductId")]') = 1

						-- CategoryPromotionRule
						or p.PromotionRuleData.exist('/ArrayOfPromotionRuleBase/PromotionRuleBase/CategoryIds[int = sql:column("pc.CategoryId")]') = 1

						-- SectionPromotionRule
						or p.PromotionRuleData.exist('/ArrayOfPromotionRuleBase/PromotionRuleBase/SectionIds[int = sql:column("ps.SectionId")]') = 1

						-- ManufacturerPromotionRule
						or p.PromotionRuleData.exist('/ArrayOfPromotionRuleBase/PromotionRuleBase/ManufacturerIds[int = sql:column("pm.ManufacturerId")]') = 1

						-- GiftProductPromotionDiscount
						or p.PromotionDiscountData.exist('/ArrayOfPromotionDiscountBase/PromotionDiscountBase/GiftProductIds[int = sql:column("ids.ProductId")]') = 1
					)
					-- Email Address rule
					and (
						p.PromotionRuleData.exist('/ArrayOfPromotionRuleBase/PromotionRuleBase/EmailAddresses[string = sql:variable("@CustomerEmail")]') = 1
						or p.PromotionRuleData.exist('/ArrayOfPromotionRuleBase/PromotionRuleBase/EmailAddresses') = 0
						)
          -- Customer Level rule
					and (
						p.PromotionRuleData.exist('/ArrayOfPromotionRuleBase/PromotionRuleBase/CustomerLevels[int = sql:variable("@CustomerLevel")]') = 1
						or p.PromotionRuleData.exist('/ArrayOfPromotionRuleBase/PromotionRuleBase/CustomerLevels') = 0
						)
				for xml path('Promotion')
				
			]]>
		</sql>
		<queryparam paramname="@productIdList" paramtype="runtime" requestparamname="productIdList" sqlDataType="nvarchar" defvalue="" validationpattern="^((\d+)(,\d+)*)?$" />
		<queryparam paramname="@StoreID"  paramtype="runtime"	requestparamname="StoreID"  sqlDataType="int"	defvalue="1"	validationpattern="" />
		<queryparam paramname="@CustomerID" paramtype="system" requestparamname="CustomerID" sqlDataType="int" defvalue="0" validationpattern="" />
    <queryparam paramname="@CustomerLevel" paramtype="system" requestparamname="CustomerLevelID" sqlDataType="int" defvalue="0" validationpattern="" />
	</query>

	<PackageTransform>
		<xsl:stylesheet version="1.0"
		xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
		xmlns:msxsl="urn:schemas-microsoft-com:xslt"
		xmlns:aspdnsf="urn:aspdnsf"
		xmlns:vortxproductextensions="urn:vortxproductextensions"
		exclude-result-prefixes="aspdnsf vortxproductextensions msxsl">
			
			<xsl:output method="html" omit-xml-declaration="yes" />
			
			<xsl:template match="@*|node()">
				<xsl:copy>
					<xsl:apply-templates select="@*|node()"/>
				</xsl:copy>
			</xsl:template>

		</xsl:stylesheet>
	</PackageTransform>
</package>
