<?xml version="1.0" standalone="yes" ?>
<package version="2.1" displayname="Guided Navigation" debug="false" includeentityhelper="true">

	<query name="EntityCounts" rowElementName="EntityCount">
		<sql>
			<![CDATA[
                exec [vortx_GetNumEntityProducts]
                    @categoryID = @CatID,
                    @sectionID = @SecID,
                    @manufacturerID = @ManID,
                    @distributorID = @DistID,
                    @genreID = @GenreID,
                    @vectorID = @VectorID,
                    @localeName = @locale,
                    @CustomerLevelID = @CustLevelID,
                    @affiliateID = @AffID,
                    @ViewType = 1,
                    @pagenum = @pgnum,
                    @pagesize = null,
					          @searchstr = @SearchTerm,
                    @StatsFirst = 0,
                    @publishedonly = 1,
                    @ExcludePacks = 0,
                    @ExcludeKits = 0,
                    @ExcludeSysProds = 0,
                    @InventoryFilter = @InvFilter,
                    @sortEntityName = @entityname,
					          @CategoryIDs = @CategoryIDs,
					          @SectionIDs = @SectionIDs,
					          @ManufacturerIDs = @ManufacturerIDs,
					          @DistributorIDs = @DistributorIDs,
					          @GenreIDs = @GenreIDs,
					          @VectorIDs = @VectorIDs,
					          @StoreID = @StoreID
            ]]>
		</sql>
		<queryparam paramname="@CatID" paramtype="runtime" requestparamname="catid" sqlDataType="int" defvalue="0"  validationpattern="" />
		<queryparam paramname="@SecID" paramtype="runtime" requestparamname="secid" sqlDataType="int" defvalue="0"  validationpattern="" />
		<queryparam paramname="@ManID" paramtype="runtime" requestparamname="manid" sqlDataType="int" defvalue="0"  validationpattern="" />
		<queryparam paramname="@DistID" paramtype="runtime" requestparamname="distid" sqlDataType="int" defvalue="0"  validationpattern="" />
		<queryparam paramname="@GenreID" paramtype="runtime" requestparamname="genreid" sqlDataType="int" defvalue="0"  validationpattern="" />
		<queryparam paramname="@VectorID" paramtype="runtime" requestparamname="vectorid" sqlDataType="int" defvalue="0"  validationpattern="" />
		<queryparam paramname="@locale" paramtype="runtime" requestparamname="LocaleSetting" sqlDataType="varchar" defvalue="en-US"  validationpattern="" />
		<queryparam paramname="@CustLevelID" paramtype="runtime" requestparamname="CustomerLevelID" sqlDataType="int" defvalue="0"  validationpattern="" />
		<queryparam paramname="@AffID" paramtype="runtime" requestparamname="AffiliateID" sqlDataType="int" defvalue="0"  validationpattern="" />
		<queryparam paramname="@pgnum" paramtype="request" requestparamname="pagenum" sqlDataType="int" defvalue="1"  validationpattern="" />
		<queryparam paramname="@InvFilter" paramtype="appconfig" requestparamname="HideProductsWithLessThanThisInventoryLevel" sqlDataType="int" defvalue="0"  validationpattern="" />
		<queryparam paramname="@entityname" paramtype="runtime" requestparamname="EntityName" sqlDataType="varchar" defvalue="Search"  validationpattern="" />
		<queryparam paramname="@SectionIDs" paramtype="request" requestparamname="section" sqlDataType="varchar" defvalue=""  validationpattern="^[0-9\-]*$" />
		<queryparam paramname="@CategoryIDs" paramtype="request" requestparamname="category" sqlDataType="varchar" defvalue=""  validationpattern="^[0-9\-]*$" />
		<queryparam paramname="@ManufacturerIDs" paramtype="request" requestparamname="manufacturer" sqlDataType="varchar" defvalue=""  validationpattern="^[0-9\-]*$" />
		<queryparam paramname="@DistributorIDs" paramtype="request" requestparamname="distributor" sqlDataType="varchar" defvalue=""  validationpattern="^[0-9\-]*$" />
		<queryparam paramname="@GenreIDs" paramtype="request" requestparamname="genre" sqlDataType="varchar" defvalue=""  validationpattern="^[0-9\-]*$" />
		<queryparam paramname="@VectorIDs" paramtype="request" requestparamname="vector" sqlDataType="varchar" defvalue=""  validationpattern="^[0-9\-]*$" />
		<queryparam paramname="@SearchTerm" paramtype="request" requestparamname="SearchTerm" sqlDataType="varchar" defvalue=""  validationpattern="" />
		<queryparam paramname="@StoreID" paramtype="runtime" requestparamname="StoreID" sqlDataType="varchar" defvalue=""  validationpattern="" />
	</query>
	<query name="Entity" rowElementName="Data">
		<sql>
			<![CDATA[
                select sectionid as EntityID, extensiondata, 'section' as EntityType from section where parentsectionid = 0
                UNION ALL
                select categoryid as EntityID, extensiondata, 'category' as EntityType from category where parentcategoryid = 0
                UNION ALL
                select manufacturerid as EntityID, extensiondata, 'manufacturer' as EntityType from manufacturer where parentmanufacturerid = 0
                UNION ALL
                select distributorid as EntityID, extensiondata, 'distributor' as EntityType from distributor where parentdistributorid = 0
                UNION ALL
                select genreid as EntityID, extensiondata, 'genre' as EntityType from genre where parentgenreid = 0
                UNION ALL
                select vectorid as EntityID, extensiondata, 'vector' as EntityType from vector where parentvectorid = 0
            ]]>
		</sql>

	</query>
	<query name="Narrow" rowElementName="Entities">
		<sql>
			<![CDATA[
				select e.EntityID, e.Name, e.ParentEntityID as ParentID, e.EntityType
				from split(@SectionIDs, '-') qe inner join EntityMaster e on (qe.items = e.entityid and e.EntityType = 'section')
				UNION ALL
				select e.EntityID, e.Name, e.ParentEntityID as ParentID, e.EntityType
				from split(@CategoryIDs, '-') qe inner join EntityMaster e on (qe.items = e.entityid and e.EntityType = 'category')
				UNION ALL
				select e.EntityID, e.Name, e.ParentEntityID as ParentID, e.EntityType
				from split(@ManufacturerIDs, '-') qe inner join EntityMaster e on (qe.items = e.entityid and e.EntityType = 'manufacturer')
				UNION ALL
				select e.EntityID, e.Name, e.ParentEntityID as ParentID, e.EntityType
				from split(@DistributorIDs, '-') qe inner join EntityMaster e on (qe.items = e.entityid and e.EntityType = 'distributor')
				UNION ALL
				select e.EntityID, e.Name, e.ParentEntityID as ParentID, e.EntityType
				from split(@GenreIDs, '-') qe inner join EntityMaster e on (qe.items = e.entityid and e.EntityType = 'genre')
				UNION ALL
				select e.EntityID, e.Name, e.ParentEntityID as ParentID, e.EntityType
				from split(@VectorIDs, '-') qe inner join EntityMaster e on (qe.items = e.entityid and e.EntityType = 'vector')

            ]]>
		</sql>
		<queryparam paramname="@SectionIDs" paramtype="request" requestparamname="section" sqlDataType="varchar" defvalue=""  validationpattern="^[0-9\-]*$" />
		<queryparam paramname="@CategoryIDs" paramtype="request" requestparamname="category" sqlDataType="varchar" defvalue=""  validationpattern="^[0-9\-]*$" />
		<queryparam paramname="@ManufacturerIDs" paramtype="request" requestparamname="manufacturer" sqlDataType="varchar" defvalue=""  validationpattern="^[0-9\-]*$" />
		<queryparam paramname="@DistributorIDs" paramtype="request" requestparamname="distributor" sqlDataType="varchar" defvalue=""  validationpattern="^[0-9\-]*$" />
		<queryparam paramname="@GenreIDs" paramtype="request" requestparamname="genre" sqlDataType="varchar" defvalue=""  validationpattern="^[0-9\-]*$" />
		<queryparam paramname="@VectorIDs" paramtype="request" requestparamname="vector" sqlDataType="varchar" defvalue=""  validationpattern="^[0-9\-]*$" />
	</query>

	<PackageTransform>
		<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
			<xsl:output method="html" omit-xml-declaration="yes" />
			<xsl:param name="CurrentEntityName" select="/root/Runtime/EntityName" />
			<xsl:param name="CurrentEntityID" select="/root/Runtime/EntityID" />
			<xsl:param name="CurrentEntity" select="/root/EntityHelpers/*[name()=$CurrentEntityName]//Entity[EntityID = $CurrentEntityID]" />

			<xsl:param name="ShowSelectedCookie">
				<xsl:choose>
					<xsl:when test="/root/Cookies/rnshowselected">
						<xsl:value-of select="/root/Cookies/rnshowselected" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="aspdnsf:AppConfig('GuidedNavigation.showselected')" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:param>
			<xsl:param name="LinkCountCookie">
				<xsl:choose>
					<xsl:when test="/root/Cookies/guidednavigationlinkcount">
						<xsl:value-of select="/root/Cookies/guidednavigationlinkcount" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="aspdnsf:AppConfig('GuidedNavigation.LinkCount')" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:param>
			<xsl:param name="ShowEmptiesCookie">
				<xsl:choose>
					<xsl:when test="/root/Cookies/guidednavigationshowempties">
						<xsl:value-of select="/root/Cookies/guidednavigationshowempties" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="aspdnsf:AppConfig('GuidedNavigation.ShowEmpties')" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:param>
			<xsl:param name="UseDropdownsCookie">
				<xsl:choose>
					<xsl:when test="/root/Cookies/guidednavigationusedropdowns">
						<xsl:value-of select="/root/Cookies/guidednavigationusedropdowns" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="aspdnsf:AppConfig('GuidedNavigation.UseDropdowns')" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:param>
			<xsl:param name="UseHierarchyCookie">
				<xsl:choose>
					<xsl:when test="/root/Cookies/guidednavigationusehierarchy">
						<xsl:value-of select="/root/Cookies/guidednavigationusehierarchy" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="aspdnsf:AppConfig('GuidedNavigation.UseHierarchy')" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:param>
			<xsl:param name="ShowCountsCookie">
				<xsl:choose>
					<xsl:when test="/root/Cookies/guidednavigationshowcounts">
						<xsl:value-of select="/root/Cookies/guidednavigationshowcounts" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="aspdnsf:AppConfig('GuidedNavigation.ShowCounts')" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:param>

			<xsl:param name="linkcount" >
				<xsl:choose>
					<xsl:when test="$LinkCountCookie != ''">
						<xsl:value-of select="$LinkCountCookie + 1" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="6" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:param>
			<xsl:param name="ShowSelected" select="boolean(aspdnsf:ToLower($ShowSelectedCookie) = 'true')" />
			<xsl:param name="UseHierarchy" select="boolean(aspdnsf:ToLower($UseHierarchyCookie) = 'true')" />
			<xsl:param name="ShowEmpties" select="boolean(aspdnsf:ToLower($ShowEmptiesCookie) = 'true')" />
			<xsl:param name="ShowCounts" select="boolean(aspdnsf:ToLower($ShowCountsCookie) = 'true')" />
			<xsl:param name="GlobalUseDropdowns" select="boolean(aspdnsf:ToLower($UseDropdownsCookie) = 'true')" />
			<xsl:param name="IsProductListingPage" select="aspdnsf:ToLower($CurrentEntity/XmlPackage) = 'entity.guidednavigationgrid.xml.config' or /root/System/PageName = 'search.aspx'" />
			<xsl:param name="SkinID" select="/root/System/SkinID" />
			<xsl:param name="GuidedNavigationRoot" select="/root/EntityHelpers/Section" />

			<xsl:template match="/">
				<div id="guidedNavigation" class="guidedNavigation">
					<div class="guidedNavHeader">
						<xsl:value-of select="aspdnsf:StringResource('GuidedNavigation.NavigationHeader')" disable-output-escaping="yes" />
					</div>
					<div class="guidedNavigationBody">
						<xsl:if test="$ShowSelected">
							<xsl:call-template name="Selections" />
						</xsl:if>
						<xsl:call-template name="Search" />
						<div class="filterOptions">
							<xsl:apply-templates select="$GuidedNavigationRoot/Entity" mode="GuidedNavigationGroups" />
							<!--<xsl:apply-templates select="/root/EntityHelpers/Manufacturer" mode="GuidedNavigationGroups" />-->
						</div>
						<div class="clearable"></div>
					</div>
				</div>
			</xsl:template>

			<xsl:template match="Entity|Manufacturer" mode="GuidedNavigationGroups">
				<xsl:param name="EntityName" select="aspdnsf:GetMLValue(Name)" />
				<xsl:param name="pEntityID" select="./EntityID" />
				<xsl:param name="parentID" select="./parent::Entity/EntityID" />
				<xsl:param name="EntityType" select="aspdnsf:ToLower(name(ancestor-or-self::*[parent::*[name() = 'EntityHelpers']]))" />
				<xsl:param name="ChildIsCurrentPage" select="boolean(aspdnsf:ToLower($CurrentEntityName) = $EntityType and $CurrentEntityID = Entity/EntityID)" />
				<xsl:param name="EntityTypeNarrows" select="/root/Narrow/Entities[aspdnsf:ToLower(EntityType) = $EntityType] | Entity[$CurrentEntityID = EntityID and $ChildIsCurrentPage]" />
				<xsl:param name="ChildSelected" select="boolean(Entity[EntityID = $EntityTypeNarrows/EntityID]) or $ChildIsCurrentPage" />
				<xsl:param name="SelectedChild" select="Entity[EntityID = $EntityTypeNarrows/EntityID]/EntityID" />
				<xsl:param name="EntityTypeCounts" select="/root/EntityCounts/EntityCount[aspdnsf:ToLower(EntityType) = $EntityType]" />
				<xsl:param name="EntityTypeData" select="/root/Entity/Data[aspdnsf:ToLower(EntityType) = $EntityType]" />
				<xsl:param name="UseDropdowns" select="$EntityTypeData[EntityID=$pEntityID]/extensiondata = 'dropdown' or $GlobalUseDropdowns" />
				<xsl:param name="ContainsProducts" select="boolean(.//Entity/EntityID = $EntityTypeCounts/EntityID)" />
				<xsl:param name="ParentIsSelected" select="boolean($EntityTypeNarrows[EntityID = $parentID])" />
				<xsl:param name="EntityUniqueID" select="concat($EntityType, aspdnsf:StrReplace($EntityName, ' ', ''))" />
				<xsl:variable name="removelink">
					<xsl:choose>
						<xsl:when test="$EntityType = aspdnsf:ToLower($CurrentEntityName) and $SelectedChild = $CurrentEntityID">
							<xsl:text>javascript:replaceBasePage('search.aspx');</xsl:text>
						</xsl:when>
						<xsl:otherwise>
							<xsl:text>javascript:removeEntity(</xsl:text>
							<xsl:value-of select="$SelectedChild" />
							<xsl:text>, '</xsl:text>
							<xsl:value-of select="$EntityType" />
							<xsl:text>');</xsl:text>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>

				<xsl:if test="$UseHierarchy">
					<xsl:apply-templates select="Entity/Entity" mode="GuidedNavigationGroups" />
				</xsl:if>


				<xsl:if test="($ShowEmpties or ($ContainsProducts and not($ChildSelected))) and ($ParentIsSelected or $ChildSelected or ParentEntityID = 0)">
					<div class="guidedNavBlock"  id="{$EntityName}Unselected" >
						<div id="{$EntityName}Header" class="sectionHeader">
							<xsl:choose>
								<xsl:when test="not(Name)">
									<xsl:value-of select="aspdnsf:StringResource(concat('AppConfig.',name(),'PromptPlural'))" />
									<xsl:text>:</xsl:text>
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="aspdnsf:GetMLValue(Name)" />
									<xsl:text>:</xsl:text>
								</xsl:otherwise>
							</xsl:choose>
						</div>

						<div class="guidedNavGroup">
							<xsl:choose>
								<xsl:when test ="$UseDropdowns">
									<xsl:call-template name="EntityGuidedNavigationDropdown">
										<xsl:with-param name="EntityName" select="$EntityName" />
										<xsl:with-param name="EntityType" select="$EntityType" />
										<xsl:with-param name="EntityUniqueID" select="$EntityUniqueID" />
										<xsl:with-param name="ChildSelected" select="$ChildSelected" />
										<xsl:with-param name="SelectedChild" select="$SelectedChild" />
										<xsl:with-param name="EntityTypeCounts" select="$EntityTypeCounts" />
										<xsl:with-param name="EntityTypeNarrows" select="$EntityTypeNarrows" />
										<xsl:with-param name="removelink" select="$removelink" />
									</xsl:call-template>
								</xsl:when>
								<xsl:otherwise>
									<xsl:call-template name="EntityGuidedNavigationList">
										<xsl:with-param name="EntityName" select="$EntityName" />
										<xsl:with-param name="EntityType" select="$EntityType" />
										<xsl:with-param name="EntityUniqueID" select="$EntityUniqueID" />
										<xsl:with-param name="ChildSelected" select="$ChildSelected" />
										<xsl:with-param name="SelectedChild" select="$SelectedChild" />
										<xsl:with-param name="EntityTypeCounts" select="$EntityTypeCounts" />
										<xsl:with-param name="EntityTypeNarrows" select="$EntityTypeNarrows" />
										<xsl:with-param name="removelink" select="$removelink" />
									</xsl:call-template>
								</xsl:otherwise>
							</xsl:choose>
							<xsl:if test="$ShowEmpties and $ChildSelected">
								<a class="guidedNavViewAllLink" href="{$removelink}">View All</a>
							</xsl:if>
						</div>
					</div>
				</xsl:if>
			</xsl:template>

			<xsl:template name="EntityGuidedNavigationList">
				<xsl:param name="EntityName" />
				<xsl:param name="EntityType" />
				<xsl:param name="EntityUniqueID" />
				<xsl:param name="ChildSelected" />
				<xsl:param name="SelectedChild" />
				<xsl:param name="EntityTypeCounts" />
				<xsl:param name="EntityTypeNarrows" />
				<xsl:param name="removelink" />
				<div class="visible guidedNavigationAttributes" id="visible{$EntityUniqueID}">
					<xsl:for-each select="Entity[EntityID = $EntityTypeCounts/EntityID or $ShowEmpties]" >
						<xsl:variable name="name" select="Name" />
						<xsl:variable name="sid" select="EntityID" />
						<xsl:variable name="count" select="$EntityTypeCounts[EntityID = $sid]/productcount" />
						<xsl:variable name="link">
							<xsl:choose>
								<xsl:when test="$IsProductListingPage">
									<xsl:text>javascript:entityLink(</xsl:text>
									<xsl:value-of select="$sid" />
									<xsl:text>, '</xsl:text>
									<xsl:value-of select="$EntityType" />
									<xsl:text>');</xsl:text>
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="aspdnsf:EntityLink(EntityID, SEName, $EntityType, 0)" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>

						<xsl:choose>
							<xsl:when test="not($ChildSelected) and $count > 0 ">
								<div class="navSection">
									<a href="{$link}" class="fullwidth">
										<xsl:value-of select="aspdnsf:GetMLValue($name)" />
										<xsl:if test="$ShowCounts and EntityID = $EntityTypeCounts/EntityID ">
											<xsl:value-of select="concat(' (',$count,')')" />
										</xsl:if>
									</a>
								</div>
							</xsl:when>
							<xsl:otherwise>
								<div class="navNoLink navSection">
									<xsl:choose>
										<xsl:when test="EntityID = $SelectedChild">
											<span class="selectedSection">
												<xsl:value-of select="aspdnsf:GetMLValue($name)" />
												<xsl:text>&#160;</xsl:text>
												<a class="fullwidth" href="{$removelink}">
													<xsl:value-of select="aspdnsf:StringResource('GuidedNavigation.RemoveLink')" disable-output-escaping="yes" />
												</a>
											</span>
										</xsl:when>
										<xsl:otherwise>
											<span class="nonSelectedSection">
												<xsl:value-of select="aspdnsf:GetMLValue($name)" />
												<xsl:if test="not($ChildSelected)">
													<xsl:text>&#32;(0)</xsl:text>
												</xsl:if>
											</span>
										</xsl:otherwise>
									</xsl:choose>

								</div>
							</xsl:otherwise>
						</xsl:choose>
						<xsl:if test="position() = $linkcount - 1">
							<xsl:text disable-output-escaping="yes">&lt;/div&gt;&lt;div class="hidden GuidedNavigationAttributes" style="display:none" id="hidden</xsl:text>
							<xsl:value-of select="$EntityUniqueID" />
							<xsl:text disable-output-escaping="yes">"&gt;</xsl:text>
						</xsl:if>
					</xsl:for-each>
				</div>
				<xsl:if test="count(Entity[EntityID = $EntityTypeCounts/EntityID or $ShowEmpties]) &gt;= $linkcount">
					<a class="navSection" id="More{$EntityUniqueID}Link"  onclick="javascript:document.getElementById('hidden{$EntityUniqueID}').style.display = 'block';document.getElementById('More{$EntityUniqueID}Link').style.display = 'none';" href="javascript:void(0);">More...</a>
				</xsl:if>
			</xsl:template>

			<xsl:template name="EntityGuidedNavigationDropdown">
				<xsl:param name="EntityName" />
				<xsl:param name="EntityType" />
				<xsl:param name="EntityUniqueID" />
				<xsl:param name="ChildSelected" />
				<xsl:param name="SelectedChild" />
				<xsl:param name="EntityTypeCounts" />
				<xsl:param name="EntityTypeNarrows" />
				<xsl:param name="removelink" />
				<span class="guidedNavigationAttributes">
					<select name="{$EntityUniqueID}SelectURL">
						<xsl:attribute name="onChange">
							<xsl:choose>
								<xsl:when test="not($IsProductListingPage)">
									document.location.href = this.options[this.selectedIndex].value;
								</xsl:when>
								<xsl:when test="$ChildSelected">
									entityReplaceLink(this.options[this.selectedIndex].value, <xsl:value-of select="$SelectedChild" />, "<xsl:value-of select="$EntityType" />");
								</xsl:when>
								<xsl:otherwise>
									entityLink(this.options[this.selectedIndex].value, "<xsl:value-of select="$EntityType" />");
								</xsl:otherwise>
							</xsl:choose>
						</xsl:attribute>
						<option value="">
							Select a <xsl:value-of select="aspdnsf:GetMLValue(Name)" />
						</option>
						<xsl:for-each select="Entity" >
							<xsl:variable name="name" select="aspdnsf:GetMLValue(Name)" />
							<xsl:variable name="sid" select="EntityID" />
							<xsl:variable name="Count" select="$EntityTypeCounts[EntityID = $sid]/productcount" />
							<xsl:if test="$EntityTypeCounts[EntityID = $sid]/productcount > 0 or $ShowEmpties" >
								<OPTION>
									<xsl:attribute name="value">
										<xsl:choose>
											<xsl:when test="not($IsProductListingPage)">
												<xsl:value-of select="aspdnsf:EntityLink(EntityID, SEName, $EntityType, 0)" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="$sid" />
											</xsl:otherwise>
										</xsl:choose>
									</xsl:attribute>
									<xsl:if test="$EntityTypeNarrows[EntityID = $sid]" >
										<xsl:attribute name="selected" />
									</xsl:if>
									<xsl:if test="not($EntityTypeCounts[EntityID = $sid]/productcount &gt; 0)">
										<xsl:attribute name="disabled" >disabled</xsl:attribute>
									</xsl:if>
									<xsl:value-of select="aspdnsf:GetMLValue(Name)" />
									<xsl:if test="$ShowCounts or $Count = 0">
										<xsl:value-of select="concat(' (',$Count,')')" />
									</xsl:if>
								</OPTION>
							</xsl:if>
						</xsl:for-each>
					</select>
				</span>
			</xsl:template>

			<xsl:template name="Selections">
				<xsl:param name="SelectionsContent">
					<xsl:apply-templates select="$GuidedNavigationRoot/Entity" mode="SelectedAttributes" />
				</xsl:param>
				<xsl:if test="string-length($SelectionsContent) &gt; 0 or /root/QueryString/searchterm">
					<div class="allSelections guidedNavBlock">
						<div class="sectionHeader">
							<xsl:value-of select="aspdnsf:StringResource('GuidedNavigation.SelectedLabel')" disable-output-escaping="yes" />
						</div>
						<div class="youveSelected guidedNavGroup">
							<xsl:if test="/root/QueryString/searchterm">
								<div class="navSection">
									<span class="guidedSelectionTitle">
										<xsl:value-of select="aspdnsf:StringResource('GuidedNavigation.SearchTermLabel')" disable-output-escaping="yes" />
										<xsl:text>&#32;</xsl:text>
									</span>
									<span class="guidedSelectionValue">
										<xsl:value-of select="/root/QueryString/searchterm" />
									</span>
									<xsl:text>&#32;</xsl:text>
									<a href="javascript:removeParam('SearchTerm');" class="removeLink" title="{aspdnsf:StringResource('GuidedNavigation.RemoveLinkDescription')}" >
										<xsl:value-of select="aspdnsf:StringResource('GuidedNavigation.RemoveLink')" disable-output-escaping="yes" />
									</a>
								</div>
							</xsl:if>
							<xsl:copy-of select="$SelectionsContent" />
							<div class="removeAllWrap navSection">
								<a class="removeAllSelections" href="javascript:guidedNavigationStartOver()">Start Over</a>
							</div>
						</div>
					</div>
				</xsl:if>
			</xsl:template>

			<xsl:template match="Entity" mode="SelectedAttributes">
				<xsl:param name="EntityType" select="aspdnsf:ToLower(name(ancestor-or-self::*[parent::*[name() = 'EntityHelpers']]))" />
				<xsl:param name="ChildIsCurrentPage" select="boolean(aspdnsf:ToLower($CurrentEntityName) = $EntityType and $CurrentEntityID = Entity/EntityID)" />
				<xsl:param name="EntityTypeNarrows" select="/root/Narrow/Entities[aspdnsf:ToLower(EntityType) = $EntityType] | Entity[$CurrentEntityID = EntityID and $ChildIsCurrentPage]" />
				<xsl:param name="ChildSelected" select="boolean(Entity[EntityID = $EntityTypeNarrows/EntityID]) or $ChildIsCurrentPage" />
				<xsl:if test="$ChildSelected">
					<xsl:for-each select="Entity[EntityID = $EntityTypeNarrows/EntityID]">
						<xsl:variable name="RemoveLink">
							<xsl:choose>
								<xsl:when test="aspdnsf:ToLower($CurrentEntityName) = $EntityType and $CurrentEntityID = EntityID">
									<xsl:text>replaceBasePage('search.aspx')</xsl:text>
								</xsl:when>
								<xsl:otherwise>
									<xsl:text>removeEntity(</xsl:text>
									<xsl:value-of select="EntityID" />
									<xsl:text>, '</xsl:text>
									<xsl:value-of select="$EntityType" />
									<xsl:text>')</xsl:text>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="ParentEntityID" select="ParentEntityID" />
						<div class="navSection" id="{Name}Selected">
							<span class="guidedSelectionTitle">
								<xsl:value-of select="aspdnsf:GetMLValue($GuidedNavigationRoot//Entity[EntityID = $ParentEntityID]/Name)" />:&#32;
							</span>
							<span class="guidedSelectionValue">
								<xsl:value-of select="aspdnsf:GetMLValue(Name)" />
							</span>
							<xsl:if test="not(.//Entity[EntityID = $EntityTypeNarrows/EntityID])">
								<xsl:text>&#32;</xsl:text>
								<a href="javascript:{$RemoveLink};" class="removeLink" title="{aspdnsf:StringResource('GuidedNavigation.RemoveLinkDescription')}" >
									<xsl:value-of select="aspdnsf:StringResource('GuidedNavigation.RemoveLink')" disable-output-escaping="yes" />
								</a>
							</xsl:if>
							<xsl:apply-templates select='./Entity' mode='SelectedAttributes' />
						</div>
					</xsl:for-each>
				</xsl:if>
			</xsl:template>

			<xsl:template name="Search">
				<xsl:if test="not(/root/QueryString/searchterm)">
					<div class="guidedNavBlock guidedSearchBlock" id="searchUnselected" >
						<div id="searchHeader" class="searchHeader sectionHeader">
							<xsl:value-of select="aspdnsf:StringResource('GuidedNavigation.SearchLabel')" disable-output-escaping="yes" />
						</div>
						<xsl:variable name="onsubmit">
							<xsl:choose>
								<xsl:when test="$IsProductListingPage">
									<xsl:text>setParam('SearchTerm', document.getElementById('GuidedNavigationSearchBox').value);</xsl:text>
								</xsl:when>
								<xsl:otherwise>
									<xsl:text>document.location.href = 'search.aspx?SearchTerm=' + document.getElementById('GuidedNavigationSearchBox').value;</xsl:text>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<div class="guidedNavGroup">
							<input type="text" size="15" name="SearchTerm" id="GuidedNavigationSearchBox" onkeydown="if (event.keyCode == 13) {{document.getElementById('guidedNavigationSearchGo').click(); return false;}} return true;" />
							<input type="button" id="guidedNavigationSearchGo" class="guidedNavigationSearchGo" value="{aspdnsf:StringResource('GuidedNavigation.SearchButtonText')}" onclick="{$onsubmit}return false;" />
						</div>
					</div>
				</xsl:if>
			</xsl:template>
		</xsl:stylesheet>
	</PackageTransform>
</package>
