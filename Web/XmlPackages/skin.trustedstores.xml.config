<?xml version="1.0" standalone="yes" ?>
<!-- ##################################################################################	-->
<!-- Copyright AspDotNetStorefront.com. All Rights Reserved.							-->
<!-- http://www.aspdotnetstorefront.com													-->
<!-- For details on this license please visit the product homepage at the URL above.	-->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.												-->
<!-- ##################################################################################	-->
<package version="2.1" displayname="Google Trusted Stores" debug="false" includeentityhelper="false">
	<query name="Products" rowElementName="Product">
		<sql>
			<![CDATA[
				if @CurrentPageType = 'product'
				begin
					select top 1 pv.ProductID, pv.VariantID, (p.SKU + pv.SKUSuffix) as FullSKU 
					from ProductVariant pv with (nolock)
					left join Product p on pv.productid = p.productid
					where pv.ProductID = @ProductID
					and pv.isdefault = 1
				end
			]]>
		</sql>
		<queryparam paramname="@ProductID" paramtype="runtime" requestparamname="PageID" sqlDataType="int" defvalue="0" validationpattern="^\d{1,10}$" />
		<queryparam paramname="@CurrentPageType" paramtype="runtime" requestparamname="PageType" sqlDataType="varchar" defvalue="0" validationpattern="" />
	</query>
	<PackageTransform>

		<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
			<xsl:output method="html" omit-xml-declaration="yes" />
			
			<xsl:template match="/">
				<xsl:variable name="GoogleTrustedStoreID" select="aspdnsf:AppConfig('GoogleTrustedStoreID')" />
				<xsl:variable name="GoogleTrustedStoreProductSearchID" select="aspdnsf:AppConfig('GoogleTrustedStoreProductSearchID')" />
				<xsl:variable name="GoogleTrustedStoreCountry" select="aspdnsf:AppConfig('GoogleTrustedStoreCountry')" />
				<xsl:variable name="GoogleTrustedStoreLanguage" select="aspdnsf:AppConfig('GoogleTrustedStoreLanguage')" />
				<xsl:variable name="GoogleTrustedStoreEnabled" select="aspdnsf:AppConfig('GoogleTrustedStoreEnabled')" />
				<xsl:variable name="GoogleTrustedEnableProductData" select="aspdnsf:AppConfig('GoogleTrustedStoreEnabled')" />
				<xsl:variable name="GoogleTrustedStoreProductIdentifierEnabled" select="aspdnsf:AppConfigBool('GoogleTrustedStoreProductIdentifierEnabled') = 'true'" />
				<xsl:variable name="IdentifierString">
					<xsl:for-each select="/root/Products/Product">
						<xsl:call-template name="ParseItemTokens">
							<xsl:with-param name="StringFormat" select="aspdnsf:AppConfig('GoogleTrustedStoreProductIdentifierFormat')" />
						</xsl:call-template>
					</xsl:for-each>
				</xsl:variable>
				<xsl:if test="$GoogleTrustedStoreEnabled='true'">
					<script type="text/javascript">
						var gts = gts || [];

						gts.push(['id', '<xsl:value-of select="$GoogleTrustedStoreID"/>']);
						gts.push(['google_base_subaccount_id', '<xsl:value-of select="$GoogleTrustedStoreProductSearchID"/>']);
						gts.push(['google_base_country', '<xsl:value-of select="$GoogleTrustedStoreCountry"/>']);
						gts.push(['google_base_language', '<xsl:value-of select="$GoogleTrustedStoreLanguage"/>']);
						<xsl:if test="/root/Products/Product and $GoogleTrustedStoreProductIdentifierEnabled">
						gts.push(['google_base_offer_id', '<xsl:value-of select="$IdentifierString" />']);
						</xsl:if>
						
						(function () {
							var scheme = (("https:" == document.location.protocol) ? "https://" : "http://");
							var gts = document.createElement("script");
							gts.type = "text/javascript";
							gts.async = true;
							gts.src = scheme + "www.googlecommerce.com/trustedstores/gtmp_compiled.js";
							var s = document.getElementsByTagName("script")[0];
							s.parentNode.insertBefore(gts, s);
						})();
					</script>
				</xsl:if>
			</xsl:template>

			<xsl:template name="ParseItemTokens">
				<xsl:param name="StringFormat" />
				<xsl:variable name="ProductIDParsedString" select="aspdnsf:StrReplace($StringFormat, '{ProductID}', ProductID)" />
				<xsl:variable name="VariantIDParsedString" select="aspdnsf:StrReplace($ProductIDParsedString, '{VariantID}', VariantID)" />
				<xsl:variable name="FullSKUParsedString" select="aspdnsf:StrReplace($VariantIDParsedString, '{FullSKU}', FullSKU)" />
				<xsl:value-of select="$FullSKUParsedString" />
			</xsl:template>

		</xsl:stylesheet>
	</PackageTransform>
</package>
