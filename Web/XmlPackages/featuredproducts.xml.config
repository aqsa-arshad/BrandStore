<?xml version="1.0" standalone="yes" ?>
<!-- ##################################################################################	-->
<!-- Copyright AspDotNetStorefront.com. All Rights Reserved.							-->
<!-- http://www.aspdotnetstorefront.com													-->
<!-- For details on this license please visit the product homepage at the URL above.	-->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.												-->
<!-- ##################################################################################	-->
<package version="2.1" displayname="Featured Products" debug="false" includeentityhelper="false">
	<query name="FeaturedProducts" rowElementName="Product" >
		<sql>
			<![CDATA[
			
				exec aspdnsf_GetFeaturedProducts @FeaturedCategoryID, @NumHomePageFeaturedProducts, @CustomerLevelID, @StoreID					
            ]]>
		</sql>
		<!--<queryparam paramname="@NumHomePageFeaturedProducts"  paramtype="runtime"   requestparamname="NumHomePageFeaturedProducts"  sqlDataType="int" defvalue="0"    validationpattern="" />
		<queryparam paramname="@FeaturedCategoryID"           paramtype="appconfig" requestparamname="isFeaturedCategoryID"         sqlDataType="int" defvalue="0"    validationpattern="" />
		<queryparam paramname="@CustomerLevelID"              paramtype="system"    requestparamname="CustomerLevelID"              sqlDataType="int" defvalue="0"    validationpattern="" />
		<queryparam paramname="@StoreID"	                    paramtype="runtime"   requestparamname="StoreID"										  sqlDataType="int"	defvalue="1"    validationpattern="" />-->

    <queryparam paramname="@FeaturedCategoryID"           paramtype="appconfig" requestparamname="isFeaturedCategoryID"         sqlDataType="int" defvalue="11"    validationpattern="" />
    <queryparam paramname="@NumHomePageFeaturedProducts"  paramtype="runtime"   requestparamname="NumHomePageFeaturedProducts"  sqlDataType="int" defvalue="5"    validationpattern="" />
    
    <queryparam paramname="@CustomerLevelID"              paramtype="system"    requestparamname="CustomerLevelID"              sqlDataType="int" defvalue="0"    validationpattern="" />
    <queryparam paramname="@StoreID"	                    paramtype="runtime"   requestparamname="StoreID"										  sqlDataType="int"	defvalue="1"    validationpattern="" />
	</query>

	<PackageTransform>
		<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
						xmlns:aspdnsf="urn:aspdnsf"
						exclude-result-prefixes="aspdnsf" >
			<xsl:output method="html" omit-xml-declaration="yes" />
			<xsl:param name="CustomerID" select="/root/Runtime/CustomerID" />
			<xsl:variable name="SpecialsCount" select="count(/root/FeaturedProducts/Product)" />
			<xsl:param name="FeaturedCategoryID" select="aspdnsf:AppConfig('IsFeaturedCategoryID')" />
			<xsl:param name="AltText">
				<xsl:choose>
					<xsl:when test="aspdnsf:GetMLValue(SEAltText)=''">
						<xsl:value-of select="aspdnsf:GetMLValue(Name)" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="aspdnsf:GetMLValue(SEAltText)" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:param>

			<xsl:variable name="ProductsGridColWidth" select="aspdnsf:AppConfig('FeaturedProductsNumberOfColumns')" />
			<xsl:variable name="GridItemCSSClassName">
				<xsl:choose>
					<xsl:when test="$ProductsGridColWidth = 1">full-width</xsl:when>
					<xsl:when test="$ProductsGridColWidth = 2">one-half</xsl:when>
					<xsl:when test="$ProductsGridColWidth = 3">one-third</xsl:when>
					<xsl:when test="$ProductsGridColWidth = 4">one-fourth</xsl:when>
					<xsl:when test="$ProductsGridColWidth = 5">one-fifth</xsl:when>
					<xsl:when test="$ProductsGridColWidth = 6">one-sixth</xsl:when>
					<xsl:otherwise>one-fourth</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>

			<xsl:variable name="ProductIdsOnPage">
				<xsl:for-each select="/root/FeaturedProducts/Product/ProductID">
					<xsl:value-of select="." />
					<xsl:if test="position() != last()">
						<xsl:text>,</xsl:text>
					</xsl:if>
				</xsl:for-each>
			</xsl:variable>
			<xsl:variable name="AvailablePromotions" select="aspdnsf:XmlPackageAsXml('availablePromotions.xml.config', concat('productIdList=', $ProductIdsOnPage))/root/Promotions" />

			<xsl:template match="/" >

				<xsl:if test="count(/root/FeaturedProducts/Product) &gt; 0">
					<div class="home-featured-products">
						<div class="group-header home-news-header">
							<a href="{concat('showcategory.aspx?categoryid=', $FeaturedCategoryID, '&#38;resetfilter=true')}">
								<xsl:value-of select="aspdnsf:StringResource('Header.FeaturedItemsHeader')" disable-output-escaping="yes"/>
							</a>
						</div>
						<p class="featured-teaser">
							<xsl:value-of select="aspdnsf:StringResource('default.aspx.2')"/>
							<xsl:text>&#32;</xsl:text>
							<xsl:if test="$SpecialsCount > 0">
								<a href="{concat('showcategory.aspx?categoryid=', $FeaturedCategoryID, '&#38;resetfilter=true')}">
									<xsl:value-of select="aspdnsf:StringResource('common.cs.62')" disable-output-escaping="yes" />
								</a>
							</xsl:if>
						</p>
						<div class="home-featured-products">
							<div class="page-row feaured-item-row">
								<xsl:apply-templates select="/root/FeaturedProducts/Product" />
							</div>
						</div>
					</div>
				</xsl:if>

			</xsl:template>


			<xsl:template match="Product">
				<xsl:variable name="Name" select="aspdnsf:GetMLValue(Name)"></xsl:variable>
				<xsl:variable name="SalesPromptName" select="aspdnsf:GetMLValue(SalesPromptName)"></xsl:variable>
				<xsl:variable name="SEAltText" select="aspdnsf:GetMLValue(SEAltText)"></xsl:variable>
				<xsl:variable name="AltText">
					<xsl:choose>
						<xsl:when test="$SEAltText=''">
							<xsl:value-of select="$Name" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$SEAltText" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="ProductID" select="ProductID" />
				<xsl:variable name="IsRecurring" select="HasRecurring" />
				<xsl:variable name="ProductLink" select="aspdnsf:ProductLink(ProductID, SEName, 0)" />
				<xsl:variable name="ImageUrl" select="aspdnsf:ImageUrl(ProductID, 'product', 'icon', 0)" />
				
				<xsl:if test="position() mod $ProductsGridColWidth = 1 and position() &gt; 1">
					<xsl:variable name="NewRowHtml">
						<xsl:text>&lt;/div&gt;&lt;div class="page-row feaured-item-row"&gt;</xsl:text>
					</xsl:variable>
					<xsl:value-of select="$NewRowHtml" disable-output-escaping="yes" />
				</xsl:if>
				<div class="{$GridItemCSSClassName} product-grid-item feaured-item">
					<div class="grid-item-inner">
						<div class="feaured-item-image-wrap grid-item-image-wrap">
							<a href="{$ProductLink}">
								<img src="{$ImageUrl}" alt="{$AltText}" class="grid-item-image product-image feaured-item-image" />
							</a>
						</div>
						<div class="feaured-item-name-wrap grid-item-name-wrap">
							<a href="{$ProductLink}">
								<xsl:value-of select="$Name" disable-output-escaping="yes" />
							</a>
						</div>
						<div class="grid-item-price-wrap">
							<xsl:value-of select="aspdnsf:GetVariantPrice(VariantID, HidePriceUntilCart, Price, SalePrice, ExtendedPrice, Points, SalesPromptName)" disable-output-escaping="yes"/>
						</div>
						<xsl:if test="aspdnsf:AppConfigBool('DisplayOutOfStockProducts') = 'true'">
							<div class="feaured-item-stock-wrap">
								<xsl:value-of select="aspdnsf:DisplayProductStockHint(ProductID,'Entity')" disable-output-escaping="yes" />
							</div>
						</xsl:if>
						<xsl:if test="$IsRecurring = 'True'">
							<div class="productCallToActionIsRecurring">
								<xsl:value-of select="aspdnsf:StringResource('product.CallToAction.IsRecurring')" disable-output-escaping="yes" />
							</div>
						</xsl:if>
						
						<xsl:apply-templates select="$AvailablePromotions/Promotion[ProductId=$ProductID]" />
					</div>
				</div>
			</xsl:template>

			<xsl:template match="Promotion">
				<div class="promotion-call-to-action">
					<xsl:value-of select="CallToAction" disable-output-escaping="yes" />
				</div>
			</xsl:template>

		</xsl:stylesheet>
	</PackageTransform>
</package>

