<?xml version="1.0" standalone="yes" ?>
<!-- ##################################################################################	-->
<!-- Copyright AspDotNetStorefront.com. All Rights Reserved.							-->
<!-- http://www.aspdotnetstorefront.com													-->
<!-- For details on this license please visit the product homepage at the URL above.	-->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.												-->
<!-- ##################################################################################	-->
<package displayname="Dynamic Head Section Javascript" version="2.1" debug="false">

	<!-- ###################################################################################################### -->
	<!-- Copyright AspDotNetStorefront.com, 1995-2011.  All Rights Reserved.					                -->
	<!-- http://www.aspdotnetstorefront.com														                -->
	<!-- For details on this license please visit  the product homepage at the URL above.		                -->
	<!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
	<!--                                                                                                        -->
	<!-- Notes: expects runtime param of OrderNumber to be passed in by storefront code                         -->
	<!-- ###################################################################################################### -->

	<query name="Orders" rowElementName="Order" runif="ordernumber">
		<sql>
			<![CDATA[
				select * from Orders o with (NOLOCK) where OrderNumber = @OrderNumber
			]]>
		</sql>
		<queryparam paramname="@OrderNumber" paramtype="request" requestparamname="ordernumber" sqlDataType="int" defvalue="0"  validationpattern="" />
	</query>

	<query name="OrderItems" rowElementName="Item" runif="ordernumber">
		<sql>
			<![CDATA[
				select * from orders_shoppingcart os WITH (nolock) 
				where os.ordernumber = @ordernum
			]]>
		</sql>
		<queryparam paramname="@ordernum" paramtype="request" requestparamname="ordernumber" defvalue="0" sqlDataType="int" validationpattern="^\d{1,9}$"/>
	</query>

	<PackageTransform>
		<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
			<xsl:output method="html" omit-xml-declaration="yes" indent="no"  encoding="utf-8"/>

			<xsl:variable name="UseLiveTransactions" select="aspdnsf:AppConfigBool('UseLiveTransactions') = 'true'" />
			<xsl:variable name="PageType" select="/root/Runtime/PageType" />
			
			<xsl:template match="/">
				<xsl:call-template name="GoogleAnalytics" />
			</xsl:template>

			<xsl:template name="GoogleAnalytics">
				<xsl:variable name="GoogleAnalyticsNumber" select="aspdnsf:AppConfig('Google.AnalyticsAccount')" />
				<xsl:if test="string-length($GoogleAnalyticsNumber) &gt; 0 and $UseLiveTransactions ">
					<!--Google Analytics-->
					<script>
						(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
						(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
						m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
						})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

						ga('create', '<xsl:value-of select="$GoogleAnalyticsNumber" />', '<xsl:value-of select="/root/ServerVariables/HTTP_HOST" />');
						<xsl:if test="aspdnsf:AppConfigBool('Google.AnalyticsDisplayAdvertising.Enabled') = 'true'">
							ga('require', 'displayfeatures');
						</xsl:if>
						ga('send', 'pageview');
					</script>
					<!--Google Analytics Ecommerce -->
					<xsl:apply-templates select="/root/Orders/Order" mode="GoogleAnalyticsEcommerce" />
				</xsl:if>
			</xsl:template>

			<xsl:template match="Order" mode="GoogleAnalyticsEcommerce">
				<xsl:if test="aspdnsf:AppConfigBool('Google.EcomOrderTrackingEnabled') = 'true' and aspdnsf:AppConfigBool('Google.DeprecatedEcomTokens.Enabled') = 'false' and $PageType = 'orderconfirmation'">
					<script type="text/javascript">
						//load ecommerce plugin
						ga('require', 'ecommerce', 'ecommerce.js');

						//add transaction
						ga('ecommerce:addTransaction', {
						'id': '<xsl:value-of select="OrderNumber" disable-output-escaping="yes" />',	// Transaction ID. Required.
						'affiliation': '<xsl:value-of select="aspdnsf:AppConfig('StoreName')" disable-output-escaping="yes" />',	// Affiliation or store name.
						'revenue': '<xsl:value-of select="OrderTotal" disable-output-escaping="yes" />',	// Grand Total.
						'shipping': '<xsl:value-of select="OrderShippingCosts" disable-output-escaping="yes" />',	// Shipping.
						'tax': '<xsl:value-of select="OrderTax" disable-output-escaping="yes" />'	// Tax.
						});

						//add item(s)
						<xsl:apply-templates select="/root/OrderItems/Item" mode="GoogleAnalyticsEcommerce" />
						
						//send data
						ga('ecommerce:send');

					</script>
				</xsl:if>
			</xsl:template>

			<xsl:template match="Item" mode="GoogleAnalyticsEcommerce">
				<xsl:variable name="CategoryOrVariation">
					<xsl:if test="string-length(OrderedProductVariantName) &gt; 0">
						<xsl:value-of select="OrderedProductVariantName" disable-output-escaping="yes" />
					</xsl:if>
					<xsl:if test="string-length(ChosenColor) &gt; 0">
						<xsl:text>&#32;</xsl:text>
						<xsl:value-of select="ChosenColor" disable-output-escaping="yes" />
					</xsl:if>
					<xsl:if test="string-length(ChosenSize) &gt; 0">
						<xsl:text>&#32;</xsl:text>
						<xsl:value-of select="ChosenSize" disable-output-escaping="yes" />
					</xsl:if>
				</xsl:variable>
				<xsl:variable name="Apostrophe">
					<xsl:text>'</xsl:text>
				</xsl:variable>
				<xsl:variable name="ApostropheReplacement">
					<xsl:text>\'</xsl:text>
				</xsl:variable>
				ga('ecommerce:addItem', {
				'id': '<xsl:value-of select="OrderNumber" disable-output-escaping="yes" />',	// Transaction ID. Required.
				'name': '<xsl:call-template name="CleanData"><xsl:with-param name="Data" select="OrderedProductName"/></xsl:call-template>',	// Product name. Required.
				'sku': '<xsl:call-template name="CleanData"><xsl:with-param name="Data" select="OrderedProductSKU"/></xsl:call-template>',	// SKU/code.
				'category': '<xsl:call-template name="CleanData"><xsl:with-param name="Data" select="$CategoryOrVariation"/></xsl:call-template>',	// Category or variation.
				'price': '<xsl:value-of select="OrderedProductPrice" disable-output-escaping="yes" />',	// Unit price.
				'quantity': '<xsl:value-of select="Quantity" disable-output-escaping="yes" />'	// Quantity.
				});
			</xsl:template>

			<xsl:template name="CleanData">
				<xsl:param name="Data" />
				<xsl:variable name="Apostrophe">
					<xsl:text>'</xsl:text>
				</xsl:variable>
				<xsl:variable name="ApostropheReplacement">
					<xsl:text>\'</xsl:text>
				</xsl:variable>
				<xsl:value-of select="aspdnsf:StrReplace($Data, $Apostrophe, $ApostropheReplacement)" disable-output-escaping="yes" />
			</xsl:template>

		</xsl:stylesheet>
	</PackageTransform>
</package>
