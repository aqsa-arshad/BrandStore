<?xml version="1.0" standalone="yes" ?>
<!-- ##################################################################################	-->
<!-- Copyright AspDotNetStorefront.com. All Rights Reserved.							-->
<!-- http://www.aspdotnetstorefront.com													-->
<!-- For details on this license please visit the product homepage at the URL above.	-->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.												-->
<!-- ##################################################################################	-->
<!-- ###################################################################################################### -->
<!-- Copyright AspDotNetStorefront.com, 1995-2009.  All Rights Reserved.					                -->
<!-- http://www.aspdotnetstorefront.com														                -->
<!-- For details on this license please visit  the product homepage at the URL above.		                -->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.                                                                   -->
<!-- ###################################################################################################### -->
<package version="2.1" displayname="Close Body Tag Scripts" debug="false" includeentityhelper="false">
	<query name="GoogleDynamicRemarketing" rowElementName="Product" runif="PageType">
		<sql>
			<![CDATA[
				if @CurrentPageType = 'shoppingcart'
				begin
					select sc.ProductID, sc.VariantID, sc.ProductSKU as FullSKU, sc.ProductPrice as Value
					from ShoppingCart sc with (nolock) 
					where sc.CustomerID = @CustomerID
					and (sc.StoreID = @StoreID or @FilterProduct = 0)
					and sc.CartType = 0
				end  
				else if @CurrentPageType = 'orderconfirmation'
				begin
					select os.ProductID, os.VariantID, os.OrderedProductSKU as FullSKU, os.OrderedProductPrice as Value
					from Orders_ShoppingCart os with (nolock) 
					where os.CustomerID = @CustomerID
					and os.OrderNumber = @OrderNumber
				end
				else if @CurrentPageType = 'product'
				begin
					select pv.ProductID, pv.VariantID, (p.SKU + pv.SKUSuffix) as FullSKU, isnull(pv.SalePrice, pv.Price) as Value 
					from ProductVariant pv with (nolock)
					left join Product p on pv.productid = p.productid
					where pv.ProductID = @ProductID
				end
			]]>
		</sql>
		<queryparam paramname="@CustomerID" paramtype="system" requestparamname="CustomerID" sqlDataType="int" defvalue="0" validationpattern="^\d{1,10}$" />
		<queryparam paramname="@ProductID" paramtype="runtime" requestparamname="PageID" sqlDataType="int" defvalue="0" validationpattern="^\d{1,10}$" />
		<queryparam paramname="@FilterProduct" paramtype="runtime" requestparamname="FilterProduct" sqlDataType="bit" defvalue="0" validationpattern="" />
		<queryparam paramname="@StoreID" paramtype="runtime" requestparamname="StoreID" sqlDataType="int" defvalue="1" validationpattern="^\d{1,10}$" />
		<queryparam paramname="@CurrentPageType" paramtype="runtime" requestparamname="PageType" sqlDataType="varchar" defvalue="0" validationpattern="" />
		<queryparam paramname="@OrderNumber" paramtype="request" requestparamname="OrderNumber" sqlDataType="varchar" defvalue="0" validationpattern="" />
	</query>
	<PackageTransform>
		<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="urn:aspdnsf" exclude-result-prefixes="aspdnsf">
			<xsl:output method="html" omit-xml-declaration="yes"/>
			
			<xsl:template match="/">
				<xsl:call-template name="GoogleRemarketing" />
			</xsl:template>
			
			<xsl:template name="GoogleRemarketing">
				<xsl:variable name="Enabled" select="aspdnsf:AppConfigBool('Google.Remarketing.Enabled') = 'true'" />
				<xsl:if test="$Enabled">
					<xsl:call-template name="GoogleDynamicRemarketing" />
					<xsl:variable name="RemarketingTopic" select="aspdnsf:Topic('Script.Google.Remarketing')" />
					<xsl:if test="string-length($RemarketingTopic) &gt; 0">
						<xsl:value-of select="$RemarketingTopic" disable-output-escaping="yes" />
					</xsl:if>
				</xsl:if>
			</xsl:template>

			<xsl:template name="GoogleDynamicRemarketing">
				<xsl:variable name="Enabled" select="aspdnsf:AppConfigBool('Google.DynamicRemarketing.Enabled') = 'true'" />
				<xsl:if test="$Enabled">
					<xsl:variable name="CurrentPageType" select="/root/Runtime/PageType" />
					<xsl:variable name="CurrentPageID" select="/root/Runtime/PageID" />
					<xsl:variable name="GooglePageType">
						<xsl:choose>
							<xsl:when test="$CurrentPageType = 'home'">
								<xsl:text>home</xsl:text>
							</xsl:when>
							<xsl:when test="$CurrentPageType = 'search'">
								<xsl:text>searchresults</xsl:text>
							</xsl:when>
							<xsl:when test="$CurrentPageType = 'category' or $CurrentPageType = 'section' or $CurrentPageType = 'manufacturer'">
								<xsl:text>category</xsl:text>
							</xsl:when>
							<xsl:when test="$CurrentPageType = 'product'">
								<xsl:text>product</xsl:text>
							</xsl:when>
							<xsl:when test="$CurrentPageType = 'shoppingcart'">
								<xsl:text>cart</xsl:text>
							</xsl:when>
							<xsl:when test="$CurrentPageType = 'orderconfirmation'">
								<xsl:text>purchase</xsl:text>
							</xsl:when>
							<xsl:otherwise>
								<xsl:text>other</xsl:text>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="ProductCount" select="count(/root/GoogleDynamicRemarketing/Product)" />
					<xsl:variable name="GoogleProductID">
						<xsl:choose>
							<xsl:when test="$ProductCount &gt; 0">
								<xsl:if test="$ProductCount &gt; 1">
									<xsl:text>[</xsl:text>
								</xsl:if>
								<xsl:for-each select="/root/GoogleDynamicRemarketing/Product">
									<xsl:variable name="IdentifierString">
										<xsl:call-template name="ParseItemTokens">
											<xsl:with-param name="StringFormat" select="aspdnsf:AppConfig('Google.DynamicRemarketing.ProductIdentifierFormat')" />
										</xsl:call-template>
									</xsl:variable>
									<xsl:call-template name="CommaDelimiter">
										<xsl:with-param name="Value" select="$IdentifierString" />
										<xsl:with-param name="ValueType" select="'string'" />
									</xsl:call-template>
								</xsl:for-each>
								<xsl:if test="$ProductCount &gt; 1">
									<xsl:text>]</xsl:text>
								</xsl:if>
							</xsl:when>
							<xsl:otherwise>
								<xsl:text>''</xsl:text>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="GoogleTotalValue">
						<xsl:choose>
							<xsl:when test="count(/root/GoogleDynamicRemarketing/Product) &gt; 0">
								<xsl:if test="$ProductCount &gt; 1">
									<xsl:text>[</xsl:text>
								</xsl:if>
								<xsl:for-each select="/root/GoogleDynamicRemarketing/Product/Value">
									<xsl:call-template name="CommaDelimiter">
										<xsl:with-param name="Value" select="aspdnsf:FormatDecimal(., 2)" />
									</xsl:call-template>
								</xsl:for-each>
								<xsl:if test="$ProductCount &gt; 1">
									<xsl:text>]</xsl:text>
								</xsl:if>
							</xsl:when>
							<xsl:otherwise>
								<xsl:text>''</xsl:text>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<script type="text/javascript">
						var google_tag_params = {
						ecomm_prodid: <xsl:value-of select="$GoogleProductID" />,
						ecomm_pagetype: '<xsl:value-of select="$GooglePageType" />',
						ecomm_totalvalue: <xsl:value-of select="$GoogleTotalValue" />
						};
					</script>
				</xsl:if>
			</xsl:template>

			<xsl:template name="CommaDelimiter">
				<xsl:param name="Value" />
				<xsl:param name="ValueType" />
				<xsl:if test="position() != 1">
					<xsl:text>,</xsl:text>
				</xsl:if>
				<xsl:if test="$ValueType = 'string'">
					<xsl:text>'</xsl:text>
				</xsl:if>
				<xsl:value-of select="$Value" disable-output-escaping="yes" />
				<xsl:if test="$ValueType = 'string'">
					<xsl:text>'</xsl:text>
				</xsl:if>
			</xsl:template>

			<xsl:template name="ParseItemTokens">
				<xsl:param name="StringFormat" />
				<xsl:variable name="ProductIDParsedString" select="aspdnsf:StrReplace($StringFormat, '{ProductID}', ProductID)" />
				<xsl:variable name="VariantIDParsedString" select="aspdnsf:StrReplace($ProductIDParsedString, '{VariantID}', VariantID)" />
				<xsl:variable name="FullSKUParsedString" select="aspdnsf:StrReplace($VariantIDParsedString, '{FullSKU}', FullSKU)" />
				<xsl:value-of select="$FullSKUParsedString" />
			</xsl:template>
				
			

		</xsl:stylesheet>
	</PackageTransform>
</package>
