<?xml version="1.0" encoding="utf-8" ?>
<!-- ##################################################################################	-->
<!-- Copyright AspDotNetStorefront.com. All Rights Reserved.							-->
<!-- http://www.aspdotnetstorefront.com													-->
<!-- For details on this license please visit the product homepage at the URL above.	-->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.												-->
<!-- ##################################################################################	-->
<package displayname="Order Receipt" version="2.1" debug="false" >
  <query name="Order" rowElementName="OrderInfo">
    <sql>
      <![CDATA[

select a.FreeShipping,
			a.AddressIDs,
			a.ItemCount,
      o.StoreId,
      case when gr.GiftRegistryCount = a.ItemCount then 1 else 0 end allGiftRegistryItems,
			case when a.Downloads = a.ItemCount then 1 else 0 end allDownloads,
			case when a.FreeShipping = a.ItemCount then 1 else 0 end allFreeShipping,
			case when a.SystemProducts = a.ItemCount then 1 else 0 end allSystemproducts,
			case b.multiship when 1 then 0 else 1 end multiship,
			case b.GiftRegistryItems when 0 then 0 else 1 end hasgiftregistryitems,
			o.* ,
			CASE WHEN cp.CouponCode IS NULL THEN '' ELSE cp.ValidForProducts END AS ValidProductsForCoupon
			From dbo.orders o with (NOLOCK)
     left join (
        select 
				count(osc.GiftRegistryForCustomerID) as GiftRegistryCount, 
				osc.OrderNumber
				from dbo.Orders_ShoppingCart osc with(NOLOCK)
				inner join dbo.Customer c on osc.GiftRegistryForCustomerID = c.CustomerID
				where osc.OrderNumber = @ordernum
				and osc.GiftRegistryForCustomerID IS NOT NULL
				and osc.GiftRegistryForCustomerID > 0
				and osc.ShippingAddressID not in (select AddressId from Address where
				CustomerID = osc.CustomerID) and c.GiftRegistryHideShippingAddresses = 1
				group by OrderNumber
        ) gr on o.ordernumber = gr.OrderNumber
			join (
				select sc.ordernumber, 
						count(distinct sc.ShippingAddressID) AddressIDs, 
						sum(sc.IsDownload) Downloads, 
						case when sum(scf.FreeShipping) is null then 0 else sum(scf.FreeShipping) end as FreeShipping, 
						sum(sc.isSystem) SystemProducts, 
						count(*) ItemCount 
				From dbo.Orders_ShoppingCart sc with (NOLOCK) 	
				left outer join dbo.Orders_ShoppingCart scf on scf.OrderNumber = sc.OrderNumber and sc.ShoppingCartRecID = scf.ShoppingCartRecID and scf.FreeShipping = 1
				where sc.ordernumber = @ordernum
				group by sc.ordernumber 
			) a on o.ordernumber = a.ordernumber 
			join (
				select OrderNumber, 
				count(distinct ShippingAddressID) multiship, 
				sum(case GiftRegistryForCustomerID when 0 then 0 else 1 end) GiftRegistryItems  
				FROM dbo.Orders_ShoppingCart with (nolock) 
				where ordernumber = @ordernum 
				group by OrderNumber
			) b on o.OrderNumber = b.OrderNumber 
			join dbo.customer c on o.customerid = c.customerid 
			LEFT OUTER JOIN Coupon cp ON cp.CouponCode = o.CouponCode
			where o.ordernumber = @ordernum

            ]]>
    </sql>
    <queryparam paramname="@ordernum" paramtype="runtime" requestparamname="ordernumber" defvalue="0" sqlDataType="int" validationpattern="^\d{1,9}$"/>
    <queryparam paramname="@customerid" paramtype="runtime" requestparamname="CustomerID" defvalue="0" sqlDataType="int" validationpattern="^\d{1,9}$"/>
  </query>

  <query name="OrderItems" rowElementName="Item">
    <sql>
      <![CDATA[
        SELECT  s.ShoppingCartRecID, 
                s.OrderNumber, 
                s.ProductID, 
                s.VariantID, 
                s.Quantity, 
                s.ChosenColor, 
                s.ChosenSize, 
                s.OrderedProductName, 
                s.OrderedProductVariantName, 
                s.OrderedProductSKU, 
                s.OrderedProductPrice,
                s.OrderedProductPrice - (isNULL(s.BluBucksUsed,0) + isNULL(s.CategoryFundUsed,0)) as CreditPrice, 
                s.OrderedProductRegularPrice, 
                s.OrderedProductSalePrice, 
                s.OrderedProductExtendedPrice, 
                s.OrderedProductQuantityDiscountName, 
                s.OrderedProductQuantityDiscountID, 
                s.OrderedProductQuantityDiscountPercent, 
                s.IsShipSeparately, 
                s.IsDownload, 
                s.FreeShipping, 
                s.TextOption, 
                s.ShippingMethod, 
                s.Notes, 
                s.ExtensionData, 
                s.CustomerEntersPrice, 
                s.GiftRegistryForCustomerID, 
                s.ShippingAddressID, 
                s.ShippingDetail, 
                s.SizeOptionPrompt, 
                s.ColorOptionPrompt, 
                s.TextOptionPrompt, 
                s.IsTaxable, 
                s.TaxClassID, 
                s.TaxRate,
                s.CategoryFundType,
                s.CategoryFundUsed as CategoryFundUsed,
				        s.BluBucksUsed  as BluBucksUsed,
                ISNULL(s.IsAKit, 0) AS IsAKit, 
                ISNULL(s.IsSystem, 0) AS IsSystem,
                ISNULL(p.UsageText, '') AS UsageText
        FROM dbo.Orders_ShoppingCart s WITH (NOLOCK)
        Left Join dbo.PromotionLineItem pli On pli.ShoppingCartRecordId = s.ShoppingCartRecId
        Left Join dbo.PromotionUsage pu On pu.Id = pli.PromotionUsageId
        Left Join dbo.Promotions p On p.Id = pu.PromotionId
        WHERE s.ordernumber = @ordernum
        ORDER by s.ShippingAddressID
      ]]>
    </sql>
    <queryparam paramname="@ordernum" paramtype="runtime" requestparamname="ordernumber" defvalue="0" sqlDataType="int" validationpattern="^\d{1,9}$"/>
    <queryparam paramname="@VatEnabled" paramtype="runtime" requestparamname="VAT.Enabled" defvalue="false" sqlDataType="bit" validationpattern=""/>
  </query>

  <query name="OrderKitDetail" rowElementName="KitItem">
    <sql>
      <![CDATA[
        select * From dbo.Orders_KitCart with (NOLOCK) where ordernumber = @ordernum
        ]]>
    </sql>
    <queryparam paramname="@ordernum" paramtype="runtime" requestparamname="ordernumber" defvalue="0" sqlDataType="int" validationpattern="^\d{1,9}$"/>
  </query>

  <query name="OrderGiftCards" rowElementName="GiftCard">
    <sql>
      <![CDATA[
            select ShoppingCartRecID, SerialNumber from dbo.GiftCard where ordernumber = @ordernum
            ]]>
    </sql>
    <queryparam paramname="@ordernum" paramtype="runtime" requestparamname="ordernumber" defvalue="0" sqlDataType="int" validationpattern="^\d{1,9}$"/>
  </query>

  <query name="ShippingAddresses" rowElementName="ShippingAddress">
    <sql>
      <![CDATA[
            SELECT DISTINCT ShippingAddressID FROM Orders_ShoppingCart WHERE OrderNumber = @ordernum
            ]]>
    </sql>
    <queryparam paramname="@ordernum" paramtype="runtime" requestparamname="ordernumber" defvalue="0" sqlDataType="int" validationpattern="^\d{1,9}$"/>
  </query>

  <query name="Promotions" rowElementName="Promotion">
    <sql>
      <![CDATA[ 
      select p.Code, p.Description, pu.DiscountAmount, p.UsageText, pu.LineItemDiscountAmount, pu.ShippingDiscountAmount, pu.OrderDiscountAmount 
        from PromotionUsage pu
				  inner join Promotions p ON pu.PromotionID = p.Id
				where pu.OrderId = @OrderNumber
      ]]>
    </sql>
    <queryparam paramname="@OrderNumber" paramtype="runtime" requestparamname="OrderNumber" sqlDataType="int" defvalue="0"  validationpattern="" />
  </query>

  <PackageTransform>
    <xsl:stylesheet version="1.0"
				xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
				xmlns:aspdnsf="urn:aspdnsf"
				xmlns:receipt="urn:receipt"
				xmlns:msxsl="urn:schemas-microsoft-com:xslt"
				exclude-result-prefixes="receipt" >
      <xsl:output method="html" omit-xml-declaration="yes" encoding="utf-8"/>

      <xsl:variable name="root" select="receipt:AttachAndPreComputeIntrinsics(/root)" />
      <xsl:variable name="OrderNumber" select="/root/Runtime/ordernumber" />
      <xsl:variable name="Params" select="concat('ordernumber=', $OrderNumber)" />
      <xsl:variable name="LocaleSetting" select="/root/Runtime/LocaleSetting" />
      <xsl:variable name="ShowOnlineLink" select="$root/Runtime/ShowOnlineLink = 'True'" />
      <xsl:variable name="isVatEnabled" select="$root/System/VAT.Enabled = 'true'" />
      <xsl:variable name="isVatInclusive" select="$root/System/UseVATSetting = 1" />

      <xsl:variable name="isMultiShipping" select="$root/Order/OrderInfo/multiship=1" />
      <xsl:variable name="allAreDownloadProducts" select="$root/Order/OrderInfo/allDownloads=1" />
      <xsl:variable name="allAreProductsAreFreeShipping" select="$root/Order/OrderInfo/allFreeShipping=1" />
      <xsl:variable name="StoreId" select="$root/Order/OrderInfo/StoreID" />

      <xsl:variable name="allAreSystemProducts" select="$root/Order/OrderInfo/allSystemproducts=1" />

      <xsl:variable name="weDontRequireShipping" select="aspdnsf:EvalBool($root/Order/OrderInfo/ShippingNotRequired)" />

      <xsl:variable name="totalLineItemDiscount" select="sum(/root/Promotions/Promotion[LineItemDiscountAmount &lt; 0]/LineItemDiscountAmount)" />
      <xsl:variable name="totalOrderDiscount" select="sum(/root/Promotions/Promotion[OrderDiscountAmount &lt; 0]/OrderDiscountAmount)" />

      <xsl:variable name="skinID">
        <xsl:choose>
          <xsl:when test="number(/root/Cookies/skinid) > 0">
            <xsl:value-of select="/root/Cookies/skinid" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="aspdnsf:SkinID()" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:template match="/">
        <html>
          <head>
            <title>
              <xsl:value-of select="aspdnsf:AppConfig($StoreId, 'StoreName')" disable-output-escaping="yes" />&#32;<xsl:value-of select="aspdnsf:StringResource('common.cs.7', $LocaleSetting)" disable-output-escaping="yes" /><xsl:if test="/root/Order/OrderInfo/PaymentMethod = 'REQUESTQUOTE'"> (REQUEST FOR QUOTE)</xsl:if>
            </title>
          </head>
          <body>
            <xsl:choose>
              <xsl:when test="count(/root/Order/OrderInfo) = 0">
                <xsl:value-of select="aspdnsf:ReceiptTopic('ReceiptFooter', $OrderNumber)" disable-output-escaping="yes" />
              </xsl:when>
              <xsl:otherwise>
                <!--Need to include this is for the email sending format-->
                <xsl:value-of select="receipt:GetReceiptCss($skinID)" disable-output-escaping="yes" />

                <div style="width:750px">

                  <xsl:value-of select="aspdnsf:ReceiptTopic('ReceiptHeader', $OrderNumber)" disable-output-escaping="yes" />


                  <p align="center">
                    <b>
                      <font size="3">
                        <xsl:value-of select="aspdnsf:AppConfig($StoreId, 'StoreName')" disable-output-escaping="yes" />&#160;<xsl:value-of select="aspdnsf:StringResource('common.cs.7', $LocaleSetting)" disable-output-escaping="yes" /><xsl:if test="/root/Order/OrderInfo/PaymentMethod = 'REQUESTQUOTE'"> (REQUEST FOR QUOTE)</xsl:if>
                      </font>
                    </b>
                  </p>
                  <p align="center">
                    <font size="1">
                      <xsl:value-of select="aspdnsf:StringResource('order.cs.71', $LocaleSetting)" disable-output-escaping="yes" />
                    </font>
                  </p>
                  <!--header goes here-->
                  <xsl:call-template name="GenerateHeader">
                    <xsl:with-param name="OrderInfo" select="/root/Order/OrderInfo"/>
                  </xsl:call-template>



                  <!--Billing and Shipping Information Section-->
                  <xsl:call-template name="GenerateAddressDisplay">
                    <xsl:with-param name="OrderInfo"  select="/root/Order/OrderInfo" />
                  </xsl:call-template>



                  <!--Order Info Section-->
                  <xsl:call-template name="GenerateOrderInfo">
                    <xsl:with-param name="OrderInfo" select="/root/Order/OrderInfo" />
                  </xsl:call-template>


                  <!--Line Item Section-->
                  <table style="text-align:left; width:100%;padding-top:10px;padding-bottom:10px;" cellspacing="0" cellpadding="0">
                    <xsl:call-template name="GenerateLineItemHeaders" />

                    <xsl:call-template name="DisplaySpacerRow">
                      <xsl:with-param name="displayBorder" select="false()" />
                      <xsl:with-param name="colSpan" select="6" />
                    </xsl:call-template>

                    <xsl:choose>
                      <xsl:when test="$weDontRequireShipping = false() and $isMultiShipping = true()">
                        <!-- Group the line items here by shipping address -->
                        <xsl:for-each select="/root/ShippingAddresses/ShippingAddress">

                          <xsl:variable name="addressID" select="./ShippingAddressID" />
                          <xsl:variable name="firstLineItem" select="/root/OrderItems/Item[ShippingAddressID = $addressID]" />
                          <xsl:variable name="addressDetail" select="receipt:XmlStringAsXml($firstLineItem/ShippingDetail, 'Detail/Address')" />

                          <xsl:if test="position() != 1">
                            <xsl:call-template name="DisplaySpacerRow">
                              <xsl:with-param name="displayBorder" select="true()" />
                              <xsl:with-param name="colSpan" select="6" />
                            </xsl:call-template>
                          </xsl:if>

                          <!-- Shipping Address header  -->
                          <tr>
                            <td colspan="6">
                              <table style="width:100%;">
                                <tr>
                                  <td style="width:7%;">
                                    <span style="font-weight:bold">
                                      <!--Ship to:-->
                                      <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.1')" disable-output-escaping="yes" />
                                    </span>
                                  </td>
                                  <td style="width:93%;">
                                    <span>
                                      <xsl:call-template name="DisplayAddress">
                                        <xsl:with-param name="firstName" select="$addressDetail/FirstName" />
                                        <xsl:with-param name="lastName" select="$addressDetail/LastName" />
                                        <xsl:with-param name="company" select="$addressDetail/Company" />
                                        <xsl:with-param name="address" select="$addressDetail/Address1" />
                                        <xsl:with-param name="address2" select="$addressDetail/Address2" />
                                        <xsl:with-param name="suite" select="$addressDetail/Suite" />
                                        <xsl:with-param name="city" select="$addressDetail/City" />
                                        <xsl:with-param name="state" select="$addressDetail/State" />
                                        <xsl:with-param name="zip" select="$addressDetail/Zip" />
                                        <xsl:with-param name="country" select="$addressDetail/Country" />
                                      </xsl:call-template>
                                    </span>
                                  </td>
                                </tr>
                                <tr>
                                  <td colspan="2" >
                                    <span style="font-weight:bold">
                                      <!--Shipping Method:-->
                                      <xsl:value-of select="aspdnsf:StringResource('order.cs.68', $LocaleSetting)" disable-output-escaping="yes" />
                                    </span>
                                    <span>
                                      <xsl:text>&#xa0;</xsl:text>
                                      <xsl:value-of select="$firstLineItem/ShippingMethod" />
                                    </span>


                                  </td>
                                </tr>
                              </table>
                            </td>
                          </tr>

                          <!-- Individual line items with only the shippable components -->
                          <!-- First process the shippable components -->
                          <xsl:variable name="shippableLineItems" select="/root/OrderItems/Item[ShippingAddressID = $addressID and IsShipSeparately=0 and IsDownload=0 and FreeShipping!=2]" />
                          <xsl:apply-templates select="$shippableLineItems" />
                        </xsl:for-each>

                        <!-- now let's display the non-shippable components -->
                        <xsl:variable name="nonShippableLineItems" select="/root/OrderItems/Item[IsShipSeparately=1 or IsDownload=1 or FreeShipping=2]" />
                        <xsl:if test="count($nonShippableLineItems) > 0">
                          <xsl:call-template name="DisplaySpacerRow">
                            <xsl:with-param name="displayBorder" select="true()" />
                            <xsl:with-param name="colSpan" select="6" />
                          </xsl:call-template>
                          <xsl:apply-templates select="$nonShippableLineItems" />
                        </xsl:if>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:apply-templates select="/root/OrderItems/Item" />
                      </xsl:otherwise>
                    </xsl:choose>

                    <xsl:if test="count(/root/Order/OrderInfo/OrderOptionsXml/OrderOption) > 0">
                      <xsl:call-template name="DisplaySpacerRow">
                        <xsl:with-param name="displayBorder" select="true()" />
                        <xsl:with-param name="colSpan" select="6" />
                      </xsl:call-template>

                      <xsl:for-each select="/root/Order/OrderInfo/OrderOptionsXml/OrderOption">

                        <xsl:if test="position() != 1">
                          <!-- Blank spacer row -->
                          <xsl:call-template name="DisplaySpacerRow">
                            <xsl:with-param name="displayBorder" select="false()" />
                            <xsl:with-param name="colSpan" select="6" />
                          </xsl:call-template>
                        </xsl:if>

                        <tr>
                          <td width="12%" style="font-weight:bold; padding-left:1em; text-align:left">
                            <xsl:if test="position() = 1" >
                              <!--Order Options-->
                              <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.2')" disable-output-escaping="yes" />
                            </xsl:if>
                          </td>
                          <td width="30%" style="padding-left:1em">
                            <xsl:if test="contains(ImageUrl, 'nopicture') = false()">
                              <img border="0" align="absmiddle" >
                                <xsl:attribute name="src">
                                  <xsl:value-of select="ImageUrl" />
                                </xsl:attribute>
                              </img>&#0160;
                            </xsl:if>
                            <span style="font-weight:bold">
                              <xsl:value-of select="aspdnsf:GetMLValue(ProductName)" />
                            </span>
                          </td>
                          <td width="10%" style="font-weight:bold; text-align:center">1</td>
                          <td width="10%" style="font-weight:bold; text-align:right; padding-right:1em">
                            <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode(Price)" disable-output-escaping="yes" />
                            <xsl:if test="$isVatEnabled = true()">
                              <div style="font-weight:normal">
                                <xsl:choose>
                                  <xsl:when test="$isVatInclusive">
                                    (<xsl:value-of select="aspdnsf:StringResource('setvatsetting.aspx.6', $LocaleSetting)" disable-output-escaping="yes" />)
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode(VAT)" disable-output-escaping="yes" />
                                  </xsl:otherwise>
                                </xsl:choose>
                              </div>
                            </xsl:if>
                          </td>

                          <xsl:if test="aspdnsf:EvalBool($root/Order/OrderInfo/HasLineItemDiscounts) = true()">
                            <td width="10%" style="font-weight:bold; text-align:right; padding-right:1em">

                            </td>
                          </xsl:if>

                          <td width="20%" style="font-weight:bold; text-align:right; padding-right:1em">
                            <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode(Price)" disable-output-escaping="yes" />

                            <xsl:if test="$isVatEnabled = true()">
                              <div style="font-weight:normal">
                                <xsl:choose>
                                  <xsl:when test="$isVatInclusive">
                                    (<xsl:value-of select="aspdnsf:StringResource('setvatsetting.aspx.6', $LocaleSetting)" disable-output-escaping="yes" />)
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode(VAT)" disable-output-escaping="yes" />
                                  </xsl:otherwise>
                                </xsl:choose>
                              </div>
                            </xsl:if>
                          </td>
                        </tr>
                      </xsl:for-each>
                    </xsl:if>

                  </table>




                  <!-- Summary Section -->
                  <xsl:call-template name="GenerateOrderSummary" >
                    <xsl:with-param name="OrderInfo" select="/root/Order/OrderInfo" />
                  </xsl:call-template>




                  <xsl:value-of select="aspdnsf:ReceiptTopic('ReceiptFooter', $OrderNumber)" disable-output-escaping="yes" />
                </div>
              </xsl:otherwise>
            </xsl:choose>

            <!-- Debug Mode -->
            <xsl:value-of select="receipt:Debug($root)" disable-output-escaping="yes" />
          </body>
        </html>
      </xsl:template>

      <xsl:param name="CleanPaymentMethod">
        <xsl:value-of select="aspdnsf:CleanPaymentMethod(/root/Order/OrderInfo/PaymentMethod)" disable-output-escaping="yes" />
      </xsl:param>

      <xsl:template name="DisplaySpacerRow">
        <xsl:param name="displayBorder" />
        <xsl:param name="colSpan" />

        <tr>
          <td>
            <xsl:if test="$displayBorder = true()">
              <xsl:attribute name="class">spacerBorder</xsl:attribute>
            </xsl:if>
            <xsl:attribute name="colspan">
              <xsl:value-of select="$colSpan" />
            </xsl:attribute>

          </td>
        </tr>
      </xsl:template>

      <xsl:template name="GenerateLineItemHeaders">
        <tr>
          <td width="10%" style="text-align:left;font-weight: bold;">
            <xsl:if test="$isVatEnabled = true()">
              <xsl:attribute name="rowspan" >2</xsl:attribute>
            </xsl:if>
            <!--SKU-->
            <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.27', $LocaleSetting)" disable-output-escaping="yes" />
          </td>
          <td width="20%" style="text-align:left;padding-left:1em;font-weight: bold;">
            <xsl:if test="$isVatEnabled = true()">
              <xsl:attribute name="rowspan" >2</xsl:attribute>
            </xsl:if>
            <!--Product-->
            <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.3')" disable-output-escaping="yes" />

          </td>
          <td width="10%" style="font-weight: bold; text-align:center" >
            <xsl:if test="$isVatEnabled = true()">
              <xsl:attribute name="rowspan" >2</xsl:attribute>
            </xsl:if>
            <!--Quantity-->
            <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.4')" disable-output-escaping="yes" />
          </td>
          <!-- Don't show the vat fields when Vat.Enabled = false -->
          <td width="10%" style="font-weight: bold;text-align:center">
            <!--Price-->
            <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.5')" disable-output-escaping="yes" />
          </td>
          <xsl:if test="aspdnsf:EvalBool($root/Order/OrderInfo/HasLineItemDiscounts) = true()">
            <td width="10%" style="font-weight: bold; text-align:center">
              <xsl:if test="$isVatEnabled = true()">
                <xsl:attribute name="rowspan" >2</xsl:attribute>
              </xsl:if>
              <!--Discount-->
              <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.6')" disable-output-escaping="yes" />
            </td>
          </xsl:if>

          <!-- Don't show the vat fields when Vat.Enabled = false -->
          <td width="30%" style="font-weight: bold; text-align:right">
            <!--Ext. Price-->
            Payment
            <!--<xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.7')" disable-output-escaping="yes" />-->
          </td>
        </tr>

        <xsl:if test="$isVatEnabled = true()">
          <tr>
            <td width="10%" style="font-weight: bold; text-align:center;">
              <!--VAT-->
              <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.42')" disable-output-escaping="yes" />
            </td>
            <td width="20%" style="font-weight: bold; text-align:center;">
              <!--Ext. VAT-->
              <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.43')" disable-output-escaping="yes" />
            </td>
          </tr>
        </xsl:if>
      </xsl:template>

      <xsl:template name="BuildKitDetail">
        <xsl:param name="LineItem" />

        <ul>
          <xsl:for-each select="$root/OrderKitDetail/KitItem[ShoppingCartRecID=$LineItem/ShoppingCartRecID]" >
            <li>
              <xsl:value-of select="aspdnsf:GetMLValue(KitItemName)" />
              <!-- TextBox or Text Area -->
              <xsl:if test="KitGroupTypeID=4 or KitGroupTypeID=5" >
                <xsl:text>&#0160;:&#0160;</xsl:text>
                <xsl:value-of select="TextOption" />
              </xsl:if>
              <!-- File Upload Option -->
              <xsl:if test="KitGroupTypeID=6 and receipt:IsStringEmpty(TextOption) = false()">
                <div style="padding-left:1em">
                  <img src="{/root/System/StoreUrl}{TextOption}"  border="0" />
                </div>
              </xsl:if>
            </li>
          </xsl:for-each>
        </ul>

      </xsl:template>

      <xsl:template match="Item" >

        <!-- Variables Start -->
        <xsl:variable name="cartRecID" select="ShoppingCartRecID" />
        <xsl:variable name="applyVat" select="$isVatEnabled and IsTaxable=1 and (($root/Order/OrderInfo/LevelID='' or number($root/Order/OrderInfo/LevelID)=0) or ($root/Order/OrderInfo/LevelID!='' and number($root/Order/OrderInfo/LevelID)!=0 and /root/Order/OrderInfo/LevelHasNoTax=0))" />
        <xsl:variable name="showPriceVatInclusive" select="number($root/System/CustomerVATSetting) = 1" />

        <tr>
          <!-- SKU Column -->
          <td width="10%" style="text-align:left;">
            <xsl:value-of select="aspdnsf:HtmlDecode(OrderedProductSKU)" />
          </td>

          <!-- Product Name Column -->
          <td width="30%" style="padding-left:1em">
            <span>
              <xsl:value-of select="aspdnsf:GetMLValue(OrderedProductName)" />
              <xsl:if test="OrderedProductVariantName != ''">
                <xsl:text>-</xsl:text>
                <xsl:value-of select="aspdnsf:GetMLValue(OrderedProductVariantName)" />
              </xsl:if>
            </span>

            <!-- Matrix Combinations -->
            <xsl:variable name="hasChosenColor" select="receipt:IsStringEmpty(ChosenColor) = false()" />
            <xsl:variable name="hasChosenSize" select="receipt:IsStringEmpty(ChosenSize) = false()" />

            <xsl:if test="$hasChosenColor = true() or $hasChosenSize = true()">

              <ul>
                <xsl:if test="$hasChosenColor = true()">
                  <li>
                    <!--ChosenColor:-->
                    <xsl:choose>
                      <xsl:when test="receipt:IsStringEmpty(ColorOptionPrompt) = false()">
                        <xsl:value-of select="aspdnsf:GetMLValue(ColorOptionPrompt)" disable-output-escaping="yes" />
                        <xsl:text>: </xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.8')" disable-output-escaping="yes" />
                      </xsl:otherwise>
                    </xsl:choose>

                    <xsl:text>&#xa0;</xsl:text>
                    <xsl:value-of select="aspdnsf:HtmlDecode(aspdnsf:GetColorPriceDelta(ChosenColor))" />
                  </li>
                </xsl:if>
                <xsl:if test="$hasChosenSize = true()">
                  <li>
                    <!--ChosenSize:-->
                    <xsl:choose>
                      <xsl:when test="receipt:IsStringEmpty(SizeOptionPrompt) = false()">
                        <xsl:value-of select="aspdnsf:GetMLValue(SizeOptionPrompt)" disable-output-escaping="yes" />
                        <xsl:text>: </xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.9')" disable-output-escaping="yes" />
                      </xsl:otherwise>
                    </xsl:choose>

                    <xsl:text>&#xa0;</xsl:text>
                    <xsl:value-of select="aspdnsf:HtmlDecode(aspdnsf:GetSizePriceDelta(ChosenSize))" />
                  </li>
                </xsl:if>
              </ul>

            </xsl:if>

            <xsl:if test="string-length(UsageText) > 0">
              <div class="giftLineItemHeading">
                <xsl:value-of select="UsageText" disable-output-escaping="yes" />
              </div>
            </xsl:if>

            <!-- Kit Items -->
            <xsl:if test="IsAKit = 1">
              <xsl:call-template name="BuildKitDetail">
                <xsl:with-param name="LineItem" select="." />
              </xsl:call-template>
            </xsl:if>

            <!-- Show Gift Card Serial Numbers if any -->
            <xsl:variable name="giftCards" select="/root/OrderGiftCards/GiftCard[ShoppingCartRecID=$cartRecID]" />
            <xsl:if test="count($giftCards) > 0">
              <div style="font-size:smaller">
                <xsl:for-each select="$giftCards">
                  <!--Serial Number:-->
                  <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.10')" disable-output-escaping="yes" />
                  <xsl:text>&#xa0;</xsl:text>
                  <xsl:value-of select="SerialNumber" />

                </xsl:for-each>
              </div>
            </xsl:if>

            <!-- Determine if Free Shipping  -->
            <xsl:if test="FreeShipping=2 or aspdnsf:IsEmailGiftCard(ProductID)='true'">

              <div style="font-size:smaller">
                <xsl:value-of select="aspdnsf:StringResource('common.cs.88')" disable-output-escaping="yes" />
              </div>
            </xsl:if>

            <xsl:variable name="hasTextOption" select="receipt:IsStringEmpty(TextOption) = false()" />
            <xsl:if test="$hasTextOption = true()">

              <div style="font-size:smaller">
                <span style="font-weight:bold">
                  <xsl:value-of select="aspdnsf:GetMLValue(TextOptionPrompt)" />
                  <xsl:text>:&#xa0;</xsl:text>
                </span>
                <xsl:value-of select="aspdnsf:GetMLValue(TextOption)" />
              </div>
            </xsl:if>

            <xsl:variable name="hasItemNotes" select="Notes!='' and aspdnsf:AppConfigBool('AllowShoppingCartItemNotes')='true' and IsSystem=0" />
            <xsl:if test="$hasItemNotes = true()">

              <div style="font-size:smaller">
                <span style="font-weight:bold">
                  <xsl:value-of select="aspdnsf:StringResource('shoppingcart.cs.86')" disable-output-escaping="yes" />
                  <xsl:text>&#xa0;</xsl:text>
                </span>
                <xsl:value-of select="Notes" disable-output-escaping="yes" />
              </div>
            </xsl:if>

            <xsl:if test="number(GiftRegistryForCustomerID) > 0 and boolean(/root/System/IsAdminUser) = false()">
              <xsl:variable name="addressDetail" select="receipt:XmlStringAsXml(ShippingDetail, 'Detail/Address')" />
              <xsl:variable name="shippingDetail" select="receipt:XmlStringAsXml(ShippingDetail, 'Detail/Shipping')" />

              <xsl:value-of select="aspdnsf:StringResource('shoppingcart.cs.93')" disable-output-escaping="yes" />

              <xsl:value-of select="$shippingDetail/EMail"/> (<xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.30')" disable-output-escaping="yes"/>: <xsl:value-of select="$shippingDetail/CustomerID"/>)
              <div>
                <xsl:call-template name="DisplayAddress">
                  <xsl:with-param name="firstName" select="$addressDetail/FirstName" />
                  <xsl:with-param name="lastName" select="$addressDetail/LastName" />
                  <xsl:with-param name="company" select="$addressDetail/Company" />
                  <xsl:with-param name="address" select="$addressDetail/Address1" />
                  <xsl:with-param name="address2" select="$addressDetail/Address2" />
                  <xsl:with-param name="suite" select="$addressDetail/Suite" />
                  <xsl:with-param name="city" select="$addressDetail/City" />
                  <xsl:with-param name="state" select="$addressDetail/State" />
                  <xsl:with-param name="zip" select="$addressDetail/Zip" />
                  <xsl:with-param name="country" select="$addressDetail/Country" />
                  <xsl:with-param name="phone" select="$addressDetail/Phone" />
                </xsl:call-template>
              </div>
            </xsl:if>

          </td>

          <!-- Quantity Column -->
          <td width="10%" style="text-align:center">
            <xsl:value-of select="Quantity" />
          </td>

          <!-- Price Column -->
          <td width="10%" style="text-align:right; padding-right:1em">
            <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode(DisplayPrice)"  disable-output-escaping="yes" />

            <xsl:if test="$applyVat = true()">
              <div style="font-weight:normal">
                <xsl:choose>
                  <xsl:when test="$isVatInclusive">
                    (<xsl:value-of select="aspdnsf:StringResource('setvatsetting.aspx.6', $LocaleSetting)" disable-output-escaping="yes" />)
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode(VatAmount)"  disable-output-escaping="yes" />
                  </xsl:otherwise>
                </xsl:choose>
              </div>
            </xsl:if>
          </td>

          <xsl:if test="aspdnsf:EvalBool($root/Order/OrderInfo/HasLineItemDiscounts) = true()">
            <!-- Discount Column -->
            <td width="10%" style="text-align:right; padding-right:1em">
              <xsl:choose>
                <xsl:when test="$applyVat = true()">
                  <xsl:choose>
                    <xsl:when test="$isVatInclusive">
                      (<xsl:value-of select="aspdnsf:StringResource('setvatsetting.aspx.6', $LocaleSetting)" disable-output-escaping="yes" />)
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode(DiscountWithVAT)" disable-output-escaping="yes" />
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode(DiscountAmount)" disable-output-escaping="yes" />
                </xsl:otherwise>
              </xsl:choose>
            </td>
          </xsl:if>

          <!-- Ext Price Column -->
          <xsl:variable name="IsCreditUsed" select="receipt:FormatCurrencyWithoutCurrencyCode(CreditFundUsed)" />
          <td width="30%" style="text-align:right;">
            <table>
              <tr>
                <td style="text-decoration:underline">Regular price:</td>
                <td>
                  <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode(DisplayExtPrice)" disable-output-escaping="yes" />
                </td>
              </tr>
              <xsl:if test="$IsCreditUsed != '$0.00'">
              <tr>
                <td style="text-decoration:underline">
                  <xsl:value-of select="aspdnsf:GetMLValue(CreditFundUsedName)" disable-output-escaping="yes" />
                </td>
                <td>
                  <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode(CreditFundUsed)" disable-output-escaping="yes" />
                </td>
              </tr>
              </xsl:if>
              <tr>
              <td style="text-decoration:underline">Your Price: </td>
                <td>
                  <xsl:value-of  select="receipt:FormatCurrencyWithoutCurrencyCode(CreditPrice)" disable-output-escaping="yes" />
                </td>
              </tr>
              
            </table>
            
            <xsl:if test="$applyVat = true()">
              <div style="font-weight:normal">
                <xsl:choose>
                  <xsl:when test="$isVatInclusive">
                    (<xsl:value-of select="aspdnsf:StringResource('setvatsetting.aspx.6', $LocaleSetting)" disable-output-escaping="yes" />)
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode(ExtVatAmount)" disable-output-escaping="yes" />
                  </xsl:otherwise>
                </xsl:choose>
              </div>
            </xsl:if>
          </td>
        </tr>

        <!-- Blank spacer row -->
        <xsl:call-template name="DisplaySpacerRow">
          <xsl:with-param name="displayBorder" select="false()" />
          <xsl:with-param name="colSpan" select="6" />
        </xsl:call-template>
        <!-- Misc... -->
      </xsl:template>

      <xsl:template name="DisplayAddress">
        <xsl:param name="style" />
        <xsl:param name="firstName" />
        <xsl:param name="lastName" />
        <xsl:param name="company" />
        <xsl:param name="address" />
        <xsl:param name="address2" />
        <xsl:param name="suite" />
        <xsl:param name="city" />
        <xsl:param name="state" />
        <xsl:param name="zip" />
        <xsl:param name="country" />
        <xsl:param name="phone" />
        <xsl:param name="email" />

        <xsl:choose>
          <xsl:when test="$style = 'inline'">
            <div>
              <xsl:value-of select="$firstName" />&#xa0;
              <xsl:value-of select="$lastName" /><xsl:text>,&#xa0;</xsl:text>
            </div>
            <div>
              <!-- show company if specified -->
              <xsl:if test="receipt:IsStringEmpty($company) = false()" >
                <xsl:value-of select="$company" />
                <xsl:text>,&#xa0;</xsl:text>
              </xsl:if>
            </div>
            <div>
              <xsl:value-of select="$address" />
              <xsl:text>,&#xa0;</xsl:text>
            </div>
            <!-- show address2 if specified -->
            <xsl:if test="receipt:IsStringEmpty($address2) = false()" >
              <div>
                <xsl:value-of select="$address2" />
                <xsl:text>,&#xa0;</xsl:text>
              </div>
            </xsl:if>
            <!-- show suite if specified -->
            <xsl:if test="receipt:IsStringEmpty($suite) = false()" >
              <div>
                <xsl:value-of select="$suite" />
                <xsl:text>,&#xa0;</xsl:text>
              </div>
            </xsl:if>
            <div>
              <xsl:value-of select="$city" /><xsl:text>,&#xa0;</xsl:text><xsl:value-of select="$state" />&#xa0;<xsl:value-of select="$zip" />
            </div>
          </xsl:when>
          <xsl:otherwise>
            <div>
              <xsl:value-of select="$firstName" />&#xa0;<xsl:value-of select="$lastName" />
            </div>
            <!-- show company if specified -->
            <xsl:if test="receipt:IsStringEmpty($company) = false()" >
              <div>
                <xsl:value-of select="$company" />
              </div>
            </xsl:if>
            <xsl:value-of select="$address" />

            <!-- show address2 if specified -->
            <xsl:if test="receipt:IsStringEmpty($address2) = false()" >
              <div>
                <xsl:value-of select="$address2" />
              </div>
            </xsl:if>
            <!-- show suite if specified -->
            <xsl:if test="receipt:IsStringEmpty($suite) = false()" >
              <div>
                <xsl:value-of select="$suite" />
              </div>
            </xsl:if>
            <div>
              <xsl:value-of select="$city" /><xsl:text>,&#xa0;</xsl:text><xsl:value-of select="$state" />&#xa0;<xsl:value-of select="$zip" />
            </div>
            <xsl:if test="receipt:IsStringEmpty($country) = false()" >
              <div>
                <xsl:value-of select="$country" />
              </div>
            </xsl:if>
            <xsl:if test="receipt:IsStringEmpty($phone) = false()" >
              <div>
                <xsl:value-of select="$phone" />
              </div>
            </xsl:if>
            <xsl:if test="receipt:IsStringEmpty($email) = false()" >
              <div>
                <xsl:value-of select="$email" />
              </div>
            </xsl:if>
            <!--<xsl:value-of select="$phone" />
						
						<xsl:value-of select="$email" />
						-->
          </xsl:otherwise>
        </xsl:choose>
      </xsl:template>

      <xsl:template name="GenerateAddressDisplay">
        <xsl:param name="OrderInfo" />

        <table width="100%">
          <tr>
            <td >
              <span style="font-weight:bold; width:50%; text-align:left; vertical-align:top">
                <!--Bill To:-->
                <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.11')" disable-output-escaping="yes" />
              </span>
              <div>
                <xsl:call-template name="DisplayAddress">
                  <xsl:with-param name="firstName" select="$OrderInfo/BillingFirstName" />
                  <xsl:with-param name="lastName" select="$OrderInfo/BillingLastName" />
                  <xsl:with-param name="company" select="$OrderInfo/BillingCompany" />
                  <xsl:with-param name="address" select="$OrderInfo/BillingAddress1" />
                  <xsl:with-param name="address2" select="$OrderInfo/BillingAddress2" />
                  <xsl:with-param name="suite" select="$OrderInfo/BillingSuite" />
                  <xsl:with-param name="city" select="$OrderInfo/BillingCity" />
                  <xsl:with-param name="state" select="$OrderInfo/BillingState" />
                  <xsl:with-param name="zip" select="$OrderInfo/BillingZip" />
                  <xsl:with-param name="country" select="$OrderInfo/BillingCountry" />
                  <xsl:with-param name="phone" select="$OrderInfo/BillingPhone" />
                  <xsl:with-param name="email" select="$OrderInfo/Email" />
                </xsl:call-template>
              </div>
            </td>
            <!-- hide if we are in multi shipping -->
            <xsl:if test="$weDontRequireShipping = false() and $isMultiShipping = false()">
              <td >
                <span style="font-weight:bold; width:50%; text-align:left; vertical-align:top">
                  <!--Ship To:-->
                  <xsl:choose>
                    <xsl:when test="$OrderInfo/allGiftRegistryItems = 1">
                      <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.53')" disable-output-escaping="yes"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.12')" disable-output-escaping="yes" />
                    </xsl:otherwise>
                  </xsl:choose>
                </span>
                <div>
                  <xsl:if test="$OrderInfo/allGiftRegistryItems = 0">
                    <xsl:call-template name="DisplayAddress">
                      <xsl:with-param name="firstName" select="$OrderInfo/ShippingFirstName" />
                      <xsl:with-param name="lastName" select="$OrderInfo/ShippingLastName" />
                      <xsl:with-param name="company" select="$OrderInfo/ShippingCompany" />
                      <xsl:with-param name="address" select="$OrderInfo/ShippingAddress1" />
                      <xsl:with-param name="address2" select="$OrderInfo/ShippingAddress2" />
                      <xsl:with-param name="suite" select="$OrderInfo/ShippingSuite" />
                      <xsl:with-param name="city" select="$OrderInfo/ShippingCity" />
                      <xsl:with-param name="state" select="$OrderInfo/ShippingState" />
                      <xsl:with-param name="zip" select="$OrderInfo/ShippingZip" />
                      <xsl:with-param name="country" select="$OrderInfo/ShippingCountry" />
                      <xsl:with-param name="phone" select="$OrderInfo/ShippingPhone" />
                    </xsl:call-template>
                  </xsl:if>
                </div>
              </td>
            </xsl:if>
          </tr>
        </table>
      </xsl:template>

      <xsl:template name="GetAvailableHeaders" >
        <xsl:param name="OrderInfo" />

        <!-- Order Date -->
        <header>
          <name>
            <!--Order Date:-->
            <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.13')" disable-output-escaping="yes" />
          </name>
          <value>
            <xsl:value-of select="$OrderInfo/OrderDate" />
          </value>
        </header>

        <!-- Locale/Currency Setting -->
        <header>
          <name>
            <!--Locale/Currency:-->
            <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.14')" disable-output-escaping="yes" />
          </name>
          <value>
            <xsl:value-of select="$OrderInfo/LocaleSetting" />
            <xsl:text>&#0160;/&#0160;</xsl:text>
            <xsl:value-of select="$root/Runtime/CurrencySetting" />
          </value>
        </header>

        <!-- Coupon -->
        <!-- Check if we have a coupon, otherwise don't display it -->
        <xsl:if test="$OrderInfo/CouponCode != '' and $OrderInfo/CouponType != 2">
          <!-- Coupon Code -->
          <header>
            <name>
              <!--Coupon Code:-->
              <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.15')" disable-output-escaping="yes" />
            </name>
            <value>
              <xsl:value-of select="$OrderInfo/CouponCode" disable-output-escaping="yes" />
              <!-- If coupon description is blank, don't display it -->
              <xsl:if test="receipt:IsStringEmpty($OrderInfo/CouponDescription) = false()">
                <xsl:text>&#xa0;(</xsl:text>
                <xsl:value-of select="$OrderInfo/CouponDescription" disable-output-escaping="yes" />
                <xsl:text>)</xsl:text>
              </xsl:if>
            </value>
          </header>

          <!-- Coupon Details -->
          <header>
            <name>
              <!--Coupon Details:-->
              <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.16')" disable-output-escaping="yes" />
            </name>
            <value>
              <xsl:call-template name="DetermineCouponDiscountDetails">
                <xsl:with-param name="OrderInfo" select="$OrderInfo" />
              </xsl:call-template>
            </value>
          </header>
        </xsl:if>

        <!-- Promotion -->
        <!-- Check if we have a promotion, otherwise don't display it -->
        <xsl:if test="count(/root/Promotions/Promotion) !=0 ">
          <header>
            <name>
              <!--Promo Code:-->
              <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.promolabel')" disable-output-escaping="yes" />
            </name>
            <value>
              <xsl:for-each select="/root/Promotions/Promotion">
                <xsl:variable name="code" select="./Code" />
                <xsl:value-of select="$code" disable-output-escaping="yes" />
                <xsl:if test="not(position()=last())">, </xsl:if>
              </xsl:for-each>
            </value>
          </header>
        </xsl:if>
        <!-- Customer Level -->


        <header>
          <name>
            <!--Payment Method:-->
            <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.19')" disable-output-escaping="yes" />
          </name>
          <value>
            <xsl:choose>
              <xsl:when test="(number(receipt:EvalDecimal($OrderInfo/OrderTotal)) = 0 or number(receipt:EvalDecimal($OrderInfo/NetTotal)) = 0) and aspdnsf:AppConfigBool('SkipPaymentEntryOnZeroDollarCheckout') = 'true'">
                <!--No Payment Required-->
                <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.20')" disable-output-escaping="yes" />
              </xsl:when>
              <!-- If Google checkout display only google checkout -->
              <xsl:when test="receipt:StringContains($OrderInfo/PaymentGateway, 'Google')" >
                <xsl:value-of select="aspdnsf:StringResource('gw.googlecheckout.display')" disable-output-escaping="yes" />
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="$CleanPaymentMethod" />
              </xsl:otherwise>
            </xsl:choose>
          </value>
        </header>

        <!-- Payment Details -->
        <xsl:choose>

          <!-- If our payment method is credit card, display the card details -->
          <xsl:when test="$CleanPaymentMethod='CREDITCARD' and receipt:StringContains($OrderInfo/PaymentGateway, 'Google') = false() and number(receipt:EvalDecimal($OrderInfo/OrderTotal)) > 0 and number(receipt:EvalDecimal($OrderInfo/NetTotal)) > 0">

            <!-- Card Name -->
            <header>
              <name>
                <!--Name On Card:-->
                <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.21')" disable-output-escaping="yes" />
              </name>
              <value>
                <xsl:value-of select="$OrderInfo/CardName" disable-output-escaping="yes" />
              </value>
            </header>

            <!-- Card Type -->
            <header>
              <name>
                <!--Card Type:-->
                <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.22')" disable-output-escaping="yes" />
              </name>
              <value>
                <xsl:value-of select="$OrderInfo/CardType" disable-output-escaping="yes" />
              </value>
            </header>

            <!-- Card Last 4 -->
            <header>
              <name>
                <!--Card Number:-->
                <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.23')" disable-output-escaping="yes" />
              </name>
              <value>
                <xsl:value-of select="concat('****', $OrderInfo/Last4)" disable-output-escaping="yes" />
              </value>
            </header>

          </xsl:when>
          <!-- If our payment method is purchase order, etc.. display only the PO Number -->
          <xsl:when test="$CleanPaymentMethod = 'PURCHASEORDER' or $CleanPaymentMethod = 'CODMONEYORDER' or $CleanPaymentMethod = 'CODCOMPANYCHECK' or $CleanPaymentMethod = 'CODNET30'">
            <!-- Card Type -->
            <header>
              <name>
                <!--PO Number:-->
                <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.24')" disable-output-escaping="yes" />
              </name>
              <value>
                <xsl:value-of select="$OrderInfo/PONumber" />
              </value>
            </header>
          </xsl:when>

          <!-- eCheck  -->
          <xsl:when test="$CleanPaymentMethod = 'ECHECK'">
            <header>
              <name>
                <!-- Bank Account Name -->
                <xsl:value-of select="aspdnsf:StringResource('order.cs.36')" disable-output-escaping="yes" />
              </name>
              <value>
                <xsl:value-of select="$OrderInfo/eCheckBankAccountName" />
              </value>
            </header>

            <header>
              <name>
                <!-- Bank Account Type -->
                <xsl:value-of select="aspdnsf:StringResource('order.cs.37')" disable-output-escaping="yes" />
              </name>
              <value>
                <xsl:value-of select="$OrderInfo/eCheckBankAccountType" />
              </value>
            </header>

            <header>
              <name>
                <!-- Bank Name -->
                <xsl:value-of select="aspdnsf:StringResource('order.cs.38')" disable-output-escaping="yes" />
              </name>
              <value>
                <xsl:value-of select="$OrderInfo/eCheckBankName" />
              </value>
            </header>
          </xsl:when>
        </xsl:choose>

        <!-- Affiliate ID -->
        <!-- If we have an affiliated mapped show it otherwise hide -->
        <xsl:if test="number($OrderInfo/AffiliateID) > 0" >
          <header>
            <name>
              <!--Affiliate ID:-->
              <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.25')" disable-output-escaping="yes" />
            </name>
            <value>
              <xsl:value-of select="$OrderInfo/AffiliateID" disable-output-escaping="yes" />
            </value>
          </header>
        </xsl:if>

        <!-- Vat Registration ID -->
        <!-- If Vat.Enabled=true and we have a vat registration, show it -->
        <xsl:if test="$isVatEnabled = true() and $OrderInfo/VATRegistrationID != ''">
          <header>
            <name>
              <!--Vat Registration ID:-->
              <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.26')" disable-output-escaping="yes" />
            </name>
            <value>
              <xsl:value-of select="$OrderInfo/VATRegistrationID" disable-output-escaping="yes" />
            </value>
          </header>
        </xsl:if>

      </xsl:template>

      <xsl:template name="GenerateOrderInfo">
        <xsl:param name="OrderInfo" />

        <xsl:variable name="headers" >
          <xsl:call-template name="GetAvailableHeaders">
            <xsl:with-param name="OrderInfo" select="$OrderInfo" />
          </xsl:call-template>
        </xsl:variable>

        <!-- 
					Because xslt is scrict on every element properly closed, we resort to this approach 
					so that we can inject xml element open or close tag only at a particular case
				-->
        <xsl:variable name="trOpen" select="receipt:Inject('&lt;tr&gt;')" />
        <xsl:variable name="trClose" select="receipt:Inject('&lt;/tr&gt;')" />

        <table style="border:solid 1px black; width:100%">
          <xsl:for-each select="msxsl:node-set($headers)/header" >

            <xsl:if test="position() mod 2 = 1">
              <xsl:value-of select="$trOpen" disable-output-escaping="yes" />
            </xsl:if>

            <td style="font-weight:bold; width:15%">
              <xsl:value-of select="name" />
            </td>
            <td style="width:35%">
              <xsl:value-of select="value" />
            </td>

            <xsl:if test="position() mod 2 = 0">
              <xsl:value-of select="$trClose" disable-output-escaping="yes" />
            </xsl:if>

          </xsl:for-each>
        </table>
      </xsl:template>

      <xsl:template name="EnumerateLevelDiscountDetails">
        <xsl:param name="OrderInfo" />

        <xsl:if test="$OrderInfo/LevelID != '' and number($OrderInfo/LevelID) != 0">
          <xsl:if test="$OrderInfo/LevelHasFreeShipping=1">
            <!--Free Shipping-->
            <detail name="LevelHasFreeShipping" >
              <xsl:attribute name="value">
                <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.44')" />
              </xsl:attribute>
            </detail>
          </xsl:if>
          <xsl:if test="$OrderInfo/LevelAllowsQuantityDiscounts=1">
            <!--Quantity Discounts Allowed-->
            <detail name="LevelAllowsQuantityDiscounts" >
              <xsl:attribute name="value">
                <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.45')" />
              </xsl:attribute>
            </detail>
          </xsl:if>
          <xsl:if test="$OrderInfo/LevelHasNoTax=1">
            <!--No Tax-->
            <detail name="LevelHasNoTax" >
              <xsl:attribute name="value">
                <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.46')" />
              </xsl:attribute>
            </detail>
          </xsl:if>
          <xsl:if test="$OrderInfo/LevelAllowsCoupons=1">
            <!--Coupons Allowed-->
            <detail name="LevelAllowsCoupons" >
              <xsl:attribute name="value">
                <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.47')" />
              </xsl:attribute>
            </detail>
          </xsl:if>
          <xsl:if test="$OrderInfo/LevelDiscountsApplyToExtendedPrices=1">
            <!--Apply to Extended Prices-->
            <detail name="LevelDiscountsApplyToExtendedPrices" >
              <xsl:attribute name="value">
                <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.48')" />
              </xsl:attribute>
            </detail>
          </xsl:if>
        </xsl:if>

      </xsl:template>

      <xsl:template name="DetermineLevelDiscountDetails">
        <xsl:param name="OrderInfo" />

        <xsl:choose>
          <xsl:when test="$OrderInfo/LevelID != '' and number($OrderInfo/LevelID) != 0">
            <xsl:variable name="levelHasFreeShipping" select="$OrderInfo/LevelHasFreeShipping = 1" />
            <xsl:variable name="discountPercent" select="number(receipt:EvalDecimal($OrderInfo/LevelDiscountPercent))" />
            <xsl:variable name="discountAmount" select="number(receipt:EvalDecimal($OrderInfo/LevelDiscountAmount))" />

            <xsl:if test="$discountPercent > 0">
              <xsl:value-of select="format-number($discountPercent, '#.00')" /> %
            </xsl:if>

            <xsl:if test="$discountAmount > 0">
              <xsl:if test="$discountPercent > 0">
                <xsl:text>,&#xa0;</xsl:text>
              </xsl:if>
              <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode($OrderInfo/LevelDiscountAmount)" />
            </xsl:if>

            <!-- MisC Level Info -->

            <xsl:variable name="details">
              <xsl:call-template name="EnumerateLevelDiscountDetails">
                <xsl:with-param name="OrderInfo" select="$OrderInfo" />
              </xsl:call-template>
            </xsl:variable>

            <xsl:variable name="levelDetails" select="msxsl:node-set($details)" />

            <xsl:variable name="hasPercentAmountApplied" select="$discountAmount > 0 or $discountPercent > 0" />

            <xsl:for-each select="$levelDetails/detail" >
              <xsl:if test="position() = 1 and $hasPercentAmountApplied = true()" >
                <xsl:text>,&#xa0;</xsl:text>
              </xsl:if>

              <xsl:value-of select="./@value" />
              <xsl:if test="position() != last()" >
                <xsl:text>,&#xa0;</xsl:text>
              </xsl:if>
            </xsl:for-each>

            <!-- if nothing is defined, show N/A -->
            <xsl:if test="$hasPercentAmountApplied = false() and count($levelDetails/detail) = 0">
              <xsl:value-of select="aspdnsf:StringResource('order.cs.16', $LocaleSetting)" disable-output-escaping="yes" />
            </xsl:if>

          </xsl:when>
          <xsl:otherwise>
            <!--N/A-->
            <xsl:value-of select="aspdnsf:StringResource('order.cs.16', $LocaleSetting)" disable-output-escaping="yes" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:template>

      <xsl:template name="DetermineCouponDiscountDetails">
        <xsl:param name="OrderInfo" />

        <xsl:choose>
          <xsl:when test="$OrderInfo/CouponCode != '' and $OrderInfo/CouponType != 2">
            <xsl:variable name="couponHasFreeShipping" select="boolean($OrderInfo/CouponIncludesFreeShipping = 1)" />
            <xsl:variable name="discountPercent" select="number(receipt:EvalDecimal($OrderInfo/CouponDiscountPercent))" />
            <xsl:variable name="discountAmount" select="number(receipt:EvalDecimal($OrderInfo/CouponDiscountAmount))" />

            <xsl:choose>
              <xsl:when test="$discountPercent > 0">
                <xsl:value-of select="format-number($discountPercent, '#.00')" /> %
              </xsl:when>
              <xsl:when test="$discountAmount > 0">
                <xsl:if test="$couponHasFreeShipping = 'true'">
                  <xsl:text>,&#xa0;</xsl:text>
                </xsl:if>
                <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode($OrderInfo/CouponDiscountAmount)" />
              </xsl:when>
            </xsl:choose>

            <!-- let's check if this is valid for products, then we'll list accordingly -->
            <xsl:if test="$OrderInfo/CouponType = 1 and $OrderInfo/ValidProductsForCoupon != ''">
              <xsl:variable name="validProducts" select="receipt:SelectElementsFromIDDelimitedString($OrderInfo/ValidProductsForCoupon, ',', $root/OrderItems/Item, 'ProductID')" />

              <xsl:for-each select="$validProducts/Item">
                <xsl:if test="position() = 1">
                  <xsl:text>(</xsl:text>
                  <!--SKU:-->
                  <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.27')" disable-output-escaping="yes" />
                  <xsl:text>&#xa0;</xsl:text>
                </xsl:if>
                <xsl:if test="position() != 1">
                  <xsl:text>,&#xa0;</xsl:text>
                </xsl:if>

                <!-- if no product SKU is defined, we'll use the product name instead -->
                <xsl:choose>
                  <xsl:when test="receipt:IsStringEmpty(OrderedProductSKU) = false()">
                    <xsl:value-of select="OrderedProductSKU" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="aspdnsf:GetMLValue(OrderedProductName)" />
                  </xsl:otherwise>
                </xsl:choose>

                <xsl:if test="position() = last()">)</xsl:if>
              </xsl:for-each>
            </xsl:if>

            <!-- Misc Coupon Info -->
            <xsl:if test="$OrderInfo/CouponIncludesFreeShipping=1">
              <xsl:if test="$discountPercent > 0 or $discountAmount > 0">
                <xsl:text>,&#xa0;</xsl:text>
              </xsl:if>
              <!--Free Shipping-->
              <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.28')" disable-output-escaping="yes" />
            </xsl:if>
          </xsl:when>
          <xsl:otherwise>
            <!--N/A-->
            <xsl:value-of select="aspdnsf:StringResource('order.cs.16', $LocaleSetting)" disable-output-escaping="yes" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:template>

      <xsl:template name="GenerateHeader">
        <xsl:param name="OrderInfo" />

        <table width="100%" >
          <tr>
            <td width="50%">
              &#160;
            </td>
            <td width="50%">
              <table width="100%" style="font-weight:bold; font-size:15px">
                <tr>
                  <td style="text-align:right; vertical-align:top">
                    <span style="font-weight:bolder">
                      <!--Order Number-->
                      <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.29')" disable-output-escaping="yes" />
                    </span>
                  </td>
                  <td style="padding-left:1em; text-align:left; vertical-align:top">
                    <span style="font-weight:bolder">
                      <xsl:value-of select="$OrderInfo/OrderNumber" />
                    </span>
                  </td>
                </tr>
                <tr>
                  <td style="text-align:right; vertical-align:top">
                    <!--Customer ID-->
                    <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.30')" disable-output-escaping="yes" />
                  </td>
                  <td style="padding-left:1em; text-align:left; vertical-align:top">
                    <xsl:value-of select="$OrderInfo/CustomerID" />
                  </td>
                </tr>
                <tr>
                  <td style="text-align:right; vertical-align:top">
                    <!--Order Date-->
                    <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.31')" disable-output-escaping="yes" />
                  </td>
                  <td style="padding-left:1em; text-align:left; vertical-align:top">
                    <xsl:value-of select="$OrderInfo/OrderDate" />
                  </td>
                </tr>
              </table>
            </td>
          </tr>
        </table>
      </xsl:template>

      <xsl:template name="GenerateOrderSummary">
        <xsl:param name="OrderInfo" />

        <table style="width:100%; border-top:solid 1px black">
          <tr>
            <td style="text-align:left; vertical-align:top; width:50%">
              <xsl:call-template name="GenerateOrderNotesSummary">
                <xsl:with-param name="OrderInfo" select="$OrderInfo" />
              </xsl:call-template>
            </td>
            <td style="text-align:left; vertical-align:top; width:50%">
              <xsl:call-template name="GenerateOrderInfoSummary">
                <xsl:with-param name="OrderInfo" select="$OrderInfo" />
              </xsl:call-template>
            </td>
          </tr>
        </table>
      </xsl:template>

      <xsl:template name="GenerateOrderNotesSummary">
        <xsl:param name="OrderInfo" />

        <div>
          <span style="font-weight:bold">
            <!--Notes-->
            <xsl:value-of select="aspdnsf:StringResource('order.cs.42', $LocaleSetting)" disable-output-escaping="yes" />
          </span>
        </div>
        <div>
          <xsl:choose>
            <!-- If there's no order notes, snow None -->
            <xsl:when test="receipt:IsStringEmpty($OrderInfo/OrderNotes)">
              <xsl:value-of select="aspdnsf:StringResource('order.cs.29', $LocaleSetting)" disable-output-escaping="yes" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$OrderInfo/OrderNotes" />
            </xsl:otherwise>
          </xsl:choose>
        </div>



        <xsl:if test="aspdnsf:AppConfigBool('ShowCustomerServiceNotesInReceipts') = 'true' and receipt:IsStringEmpty($OrderInfo/CustomerServiceNotes) = false()">
          <div>
            <span style="font-weight:bold">
              <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.52', $LocaleSetting)" disable-output-escaping="yes" />
            </span>
          </div>
          <div>
            <xsl:choose>
              <!-- If there's no order notes, snow None -->
              <xsl:when test="receipt:IsStringEmpty($OrderInfo/CustomerServiceNotes)">
                <xsl:value-of select="aspdnsf:StringResource('order.cs.29', $LocaleSetting)" disable-output-escaping="yes" />
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="$OrderInfo/CustomerServiceNotes" />
              </xsl:otherwise>
            </xsl:choose>
          </div>
        </xsl:if>
      </xsl:template>

      <xsl:template name="GenerateOrderInfoSummary">
        <xsl:param name="OrderInfo" />

        <!-- Variable Declarations Start -->
        <xsl:variable name="isRequestQuote" select="$OrderInfo/PaymentMethod = 'REQUESTQUOTE'" />

        <xsl:variable name="hasCouponApplied" select="$OrderInfo/CouponCode != ''" />
        <xsl:variable name="hasCustomerLevel" select="number($OrderInfo/LevelID) != 0" />

        <xsl:variable name="couponDiscount">
          <xsl:choose>
            <xsl:when test="$hasCouponApplied = 'true' and $OrderInfo/CouponType = 0 and ($OrderInfo/CouponDiscountAmount != 0 or $OrderInfo/CouponDiscountPercent != 0)" >
              <xsl:variable name="couponDiscountPercent" select="($OrderInfo/OrderSubtotal div (1-($OrderInfo/CouponDiscountPercent div 100)))-$OrderInfo//OrderSubtotal" />
              <xsl:value-of select="$OrderInfo/CouponDiscountAmount + $couponDiscountPercent" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="0" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>

        <xsl:variable name="levelDiscount" select="0">
        </xsl:variable>

        <xsl:variable name="isFreeShipping" select="aspdnsf:EvalBool($OrderInfo/IsFreeShipping)" />

        <xsl:variable name="isGiftCardApplied" select="$OrderInfo/CouponType = 2 and $OrderInfo/CouponDiscountAmount > 0" />
        <xsl:variable name="giftCardDiscount" >
          <xsl:choose>
            <xsl:when test="$isGiftCardApplied">
              <xsl:value-of select="$OrderInfo/CouponDiscountAmount" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="0" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>

        <xsl:variable name="netTotal" >
          <xsl:choose>
            <xsl:when test="$isGiftCardApplied = true()">
              <xsl:value-of select="$OrderInfo/OrderTotal - $giftCardDiscount" />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="0" />
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>

        <xsl:variable name="isMultiShip" select="number($OrderInfo/multiship) = 1" />

        <!--
					Request Quote: <xsl:value-of select="$isRequestQuote" />
					
					Free Shipping: <xsl:value-of select="$isFreeShipping" />
					
					Multi-Ship: <xsl:value-of select="$isMultiShip" />
					
				-->

        <xsl:variable name="weHaveDiscounts" select="count($OrderInfo/Discounts/Discount) > 0" />

        <!-- Rendering section -->
        <table width="100%">
          <!-- Raw SubTotal -->
          <xsl:if test="$weHaveDiscounts">
            <tr>
              <td style="text-align:right; vertical-align:top; width:40%; font-weight:bold">
                <!--SubTotal:-->
                <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.32')" disable-output-escaping="yes" />
              </td>
              <td style="padding-left:1em; text-align:left; vertical-align:top; width:30%"></td>
              <td style="text-align:right; vertical-align:top; width:40%">
                <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode($OrderInfo/RawSubTotal)" disable-output-escaping="yes" />
              </td>
            </tr>

          </xsl:if>

          <!-- Line Item Discounts -->
          <xsl:if test="$totalLineItemDiscount &lt; 0">
            <tr>
              <td class="tdOrderSummaryLabel">
                <xsl:value-of select="aspdnsf:StringResource('shoppingcart.cs.200')" disable-output-escaping="yes" />
              </td>
              <td class="tdOrderSummaryMisc">
              </td>
              <td class="tdOrderSummaryValue">
                <span id="red">
                  <span id="cDiscount">
                    <xsl:value-of select="aspdnsf:FormatCurrency($totalLineItemDiscount)" />
                  </span>
                </span>
              </td>
            </tr>
          </xsl:if>

          <!-- SubTotal -->
          <tr>
            <td style="text-align:right; vertical-align:top; width:40%; font-weight:bold;">
              <xsl:choose>
                <xsl:when test="$weHaveDiscounts">
                  <!--Net SubTotal:-->
                  <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.34')" disable-output-escaping="yes" />
                </xsl:when>
                <xsl:otherwise>
                  <!--SubTotal:-->
                  <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.35')" disable-output-escaping="yes" />
                  <xsl:if test="$isVatEnabled  and $isVatInclusive">
                    &#0160;(<xsl:value-of select="aspdnsf:StringResource('setvatsetting.aspx.6', $LocaleSetting)" disable-output-escaping="yes" />)
                  </xsl:if>
                </xsl:otherwise>
              </xsl:choose>
            </td>
            <td style="padding-left:1em; text-align:left; vertical-align:top; width:30%"></td>
            <td style="text-align:right; vertical-align:top; width:40%">
              <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode($OrderInfo/OrderSubtotal)" disable-output-escaping="yes" />
            </td>
          </tr>

          <!--funds Variables-->
          <xsl:variable name="SOF" select="/root/Runtime/SOFunds" />
          <xsl:variable name="DMF" select="/root/Runtime/DirectMailFunds" />
          <xsl:variable name="DF" select="/root/Runtime/DisplayFunds" />
          <xsl:variable name="LF" select="/root/Runtime/LiteratureFunds" />
          <xsl:variable name="POPF" select="/root/Runtime/POPFunds" />
          <xsl:variable name="BBC" select="/root/Runtime/BBCredit" />


          <!--Credit used-->
          <tr>
            <xsl:if test="$BBC!='' and $BBC!=0 and $BBC!='$0.00' ">
              <td style="text-align:right; vertical-align:top; width:40%; font-weight:bold;">BLU™ Bucks:</td>
              <td style="padding-left:1em; text-align:left; vertical-align:top; width:30%"></td>
              <td style="text-align:right; vertical-align:top; width:40%">
                <xsl:value-of select="/root/Runtime/BBCredit" disable-output-escaping="yes"/>
              </td>
            </xsl:if>
          </tr>
          <tr>
            <xsl:if test="$SOF!='' ">
              <td style="text-align:right; vertical-align:top; width:40%; font-weight:bold;">SOF Funds:</td>
              <td style="padding-left:1em; text-align:left; vertical-align:top; width:30%"></td>
              <td style="text-align:right; vertical-align:top; width:40%">
                <xsl:value-of select="/root/Runtime/SOFunds" disable-output-escaping="yes"/>
              </td>
            </xsl:if>
          </tr>
          <tr>
            <xsl:if test="$DMF!='' ">
              <td style="text-align:right; vertical-align:top; width:40%; font-weight:bold;">Direct Mail Funds:</td>
              <td style="padding-left:1em; text-align:left; vertical-align:top; width:30%"></td>
              <td style="text-align:right; vertical-align:top; width:40%">
                <xsl:value-of select="/root/Runtime/DirectMailFunds" disable-output-escaping="yes"/>
              </td>
            </xsl:if>
          </tr>
          <tr>
            <xsl:if test="$DF!='' ">
              <td style="text-align:right; vertical-align:top; width:40%; font-weight:bold;"> Display Funds:</td>
              <td style="padding-left:1em; text-align:left; vertical-align:top; width:30%"></td>
              <td style="text-align:right; vertical-align:top; width:40%">
                <xsl:value-of select="/root/Runtime/DisplayFunds" disable-output-escaping="yes"/>
              </td>
            </xsl:if>
          </tr>
          <tr>
            <xsl:if test="$LF!='' ">
              <td style="text-align:right; vertical-align:top; width:40%; font-weight:bold;">Literature Funds:</td>
              <td style="padding-left:1em; text-align:left; vertical-align:top; width:30%"></td>
              <td style="text-align:right; vertical-align:top; width:40%">
                <xsl:value-of select="/root/Runtime/LiteratureFunds" disable-output-escaping="yes"/>
              </td>
            </xsl:if>
          </tr>
          <tr>
            <xsl:if test="$POPF!='' ">
              <td style="text-align:right; vertical-align:top; width:40%; font-weight:bold;"> POP Funds:</td>
              <td style="padding-left:1em; text-align:left; vertical-align:top; width:30%"></td>
              <td style="text-align:right; vertical-align:top; width:40%">
                <xsl:value-of select="/root/Runtime/POPFunds" disable-output-escaping="yes"/>
              </td>
            </xsl:if>
          </tr>
          <!-- Shipping -->
          <xsl:if test="aspdnsf:AppConfigBool('SkipShippingOnCheckout') = 'false'">
            <tr>
              <td style="text-align:right; vertical-align:top; width:40%; font-weight:bold;">
                <!--Shipping:-->
                <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.36')" disable-output-escaping="yes" />
                <xsl:if test="$isVatEnabled  and $isVatInclusive">
                  &#0160;(<xsl:value-of select="aspdnsf:StringResource('setvatsetting.aspx.6', $LocaleSetting)" disable-output-escaping="yes" />)
                </xsl:if>
              </td>
              <td style="padding-left:1em; text-align:left; vertical-align:top; width:30%">
                <xsl:if test="$isRequestQuote = false() and $isFreeShipping = false() and $isMultiShip = false()">
                  <xsl:choose>
                    <xsl:when test="$OrderInfo/ShippingCalculationID = 4">
                      <xsl:value-of select="aspdnsf:StringResource('order.cs.2', $LocaleSetting)" disable-output-escaping="yes" />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="receipt:CleanShippingMethod($OrderInfo/ShippingMethod)" />
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:if>
              </td>
              <td style="text-align:right; vertical-align:top; width:40%">
                <xsl:choose>
                  <xsl:when test="$isRequestQuote">
                    <!-- "Will Quote" -->
                    <xsl:value-of select="aspdnsf:StringResource('order.cs.3', $LocaleSetting)" disable-output-escaping="yes" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:choose>
                      <xsl:when test="$isFreeShipping = true()">
                        <xsl:value-of select="aspdnsf:StringResource('order.cs.1', $LocaleSetting)" disable-output-escaping="yes" />
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode($OrderInfo/OrderShippingCosts)" disable-output-escaping="yes" />
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:otherwise>
                </xsl:choose>
              </td>
            </tr>
          </xsl:if>

          <!-- Tax/Vat -->
          <xsl:if test="$isVatEnabled = false() or ($isVatEnabled and not($isVatInclusive))">
            <tr>
              <td style="text-align:right; vertical-align:top; width:40%; font-weight:bold;">
                <xsl:choose>
                  <xsl:when test="$isVatEnabled">
                    <!--VAT:-->
                    <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.37')" disable-output-escaping="yes" />
                  </xsl:when>
                  <xsl:otherwise>
                    <!--Tax:-->
                    <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.38')" disable-output-escaping="yes" />
                  </xsl:otherwise>
                </xsl:choose>
              </td>
              <td style="padding-left:1em; text-align:left; vertical-align:top; width:30%"></td>
              <td style="text-align:right; vertical-align:top; width:40%">
                <xsl:choose>
                  <xsl:when test="$isRequestQuote">
                    <!-- "Will Quote" -->
                    <xsl:value-of select="aspdnsf:StringResource('order.cs.3', $LocaleSetting)" disable-output-escaping="yes" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode($OrderInfo/OrderTax)" disable-output-escaping="yes" />
                  </xsl:otherwise>
                </xsl:choose>
              </td>
            </tr>
          </xsl:if>


          <!--purchase order fee-->
          <xsl:if test="$CleanPaymentMethod = 'PURCHASEORDER'">
            <tr>
              <td style="text-align:right; vertical-align:top; width:40%; font-weight:bold;"> Purchase Order Fee: </td>
              <td style="padding-left:1em; text-align:left; vertical-align:top; width:30%"></td>
              <td style="text-align:right; vertical-align:top; width:40%">
                <xsl:value-of select="/root/Runtime/Invoicefee" disable-output-escaping="yes"/>
              </td>
            </tr>
          </xsl:if>

          <!-- Order Discounts -->
          <xsl:if test="$totalOrderDiscount &lt; 0">
            <tr>
              <td class="tdOrderSummaryLabel">
                <xsl:value-of select="aspdnsf:StringResource('shoppingcart.cs.201')" disable-output-escaping="yes" />
              </td>
              <td class="tdOrderSummaryMisc">
              </td>
              <td class="tdOrderSummaryValue">
                <span id="red">
                  <span id="cDiscount">
                    <xsl:value-of select="aspdnsf:FormatCurrency($totalOrderDiscount)" />
                  </span>
                </span>
              </td>
            </tr>
          </xsl:if>

          <!-- Order Total-->
          <tr>
            <td style="text-align:right; vertical-align:top; width:40%; font-weight:bold;">
              <!--Total:-->
              <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.39')" disable-output-escaping="yes" />
            </td>
            <td style="padding-left:1em; text-align:left; vertical-align:top; width:30%"></td>
            <td style="text-align:right; vertical-align:top; width:40%">
              <xsl:choose>
                <xsl:when test="$isRequestQuote = true()">
                  <xsl:value-of select="aspdnsf:StringResource('order.cs.3', $LocaleSetting)" disable-output-escaping="yes" />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode($OrderInfo/OrderTotal)" disable-output-escaping="yes" />
                </xsl:otherwise>
              </xsl:choose>
            </td>
          </tr>

          <!-- Gift Card(if any) -->
          <xsl:if test="$isRequestQuote = false() and aspdnsf:EvalBool($OrderInfo/HasGiftCardApplied) = true()">
            <!-- Spacer row -->
            <tr>
              <td colspan="3">&#0160;</td>
            </tr>

            <!-- Gift Card Applied  -->
            <tr>
              <td style="text-align:right; vertical-align:top; width:40%; font-weight:bold;">
                <!--Payments:-->
                <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.40')" disable-output-escaping="yes" />
              </td>
              <td style="padding-left:1em; text-align:left; vertical-align:top; width:30%">
                <!--Gift Card-->
                <xsl:value-of select="aspdnsf:StringResource('notification.betareceipt.xml.config.41')" disable-output-escaping="yes" />
              </td>
              <td style="text-align:right; vertical-align:top; width:40%">
                <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode($giftCardDiscount)" disable-output-escaping="yes" />
              </td>
            </tr>

            <!-- let's check if the gift card covered all of the payments, we won't be showing the net total instead -->
            <xsl:if test="aspdnsf:EvalBool($OrderInfo/HasGiftCardApplied) = true() and $netTotal > 0">
              <!-- Net Total -->
              <tr>
                <td style="text-align:right; vertical-align:top; width:40%; font-weight:bold;">
                </td>
                <td style="padding-left:1em; text-align:left; vertical-align:top; width:30%">
                  <xsl:value-of select="$OrderInfo/PaymentMethod"	 />
                </td>
                <td style="text-align:right; vertical-align:top; width:40%">
                  <xsl:value-of select="receipt:FormatCurrencyWithoutCurrencyCode($netTotal)" disable-output-escaping="yes" />
                </td>
              </tr>
            </xsl:if>
          </xsl:if>
        </table>
      </xsl:template>

    </xsl:stylesheet>

  </PackageTransform>
</package>
