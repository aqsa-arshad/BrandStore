<?xml version="1.0" standalone="yes" ?>
<!-- ##################################################################################	-->
<!-- Copyright AspDotNetStorefront.com. All Rights Reserved.							-->
<!-- http://www.aspdotnetstorefront.com													-->
<!-- For details on this license please visit the product homepage at the URL above.	-->
<!-- THE ABOVE NOTICE MUST REMAIN INTACT.												-->
<!-- ##################################################################################	-->

<package>
    <query name="Affiliates" rowElementName="Affiliate">
        <sql>
            <![CDATA[
                select 
                    a.AffiliateID, 
                    a.Name, 
                    a.DisplayOrder, 
                    a.SEName, 
                    a.ParentAffiliateID, 
                    isnull(pa.ProductID, 0) ProductID 
                from Affiliate a (NOLOCK) 
                    left join ProductAffiliate pa (nolock) on a.AffiliateID = pa.AffiliateID and pa.ProductID = @ProductID 
                where a.Deleted=0 
                order by a.DisplayOrder,a.Name
            ]]>
        </sql>
        <queryparam paramname="@ProductID" paramtype="runtime" requestparamname="ProductID" sqlDataType="int" like="no" defvalue="0"  validationpattern="^\d{1,9}$" />
    </query>

    <PackageTransform>
        <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:aspdnsf="http://www.aspdotnetstorefront.com">
            <xsl:output method="html" omit-xml-declaration="yes" standalone="yes"/>

            <xsl:key name="parentID" match="Affiliate" use="ParentAffiliateID"/>

            <xsl:template match="/">
                <xsl:call-template name="Affiliate">
                    <xsl:with-param name="paffiliateid" select="0"></xsl:with-param>
                    <xsl:with-param name="prefix"></xsl:with-param>
                </xsl:call-template>
            </xsl:template>


            <xsl:template name="Affiliate">
                <xsl:param name="paffiliateid"></xsl:param>
                <xsl:param name="prefix"></xsl:param>

                <xsl:for-each select="key('parentID', $paffiliateid)">
                    <xsl:variable name="Name">
                        <xsl:choose>
                            <xsl:when test="count(Name/ml/locale[@name=/root/Runtime/LocaleSetting])!=0">
                                <xsl:value-of select="Name/ml/locale[@name=/root/Runtime/LocaleSetting]"/>
                            </xsl:when>
                            <xsl:when test="count(Name/ml/locale[@name=/root/Runtime/WebConfigLocaleSetting])!=0">
                                <xsl:value-of select="Name/ml/locale[@name=/root/Runtime/WebConfigLocaleSetting]"/>
                            </xsl:when>
                            <xsl:when test="count(Name/ml)=0">
                                <xsl:value-of select="Name"/>
                            </xsl:when>
                        </xsl:choose>
                    </xsl:variable>

                    <nobr>
                        <input type="checkbox" name="AffiliateMap" >
                            <xsl:attribute name="value"><xsl:value-of select="AffiliateID"/></xsl:attribute>
                            <xsl:if test="ProductID!=0">
                                <xsl:attribute name="checked">checked</xsl:attribute>
                            </xsl:if>
                        </input>
                        <xsl:choose>
                            <xsl:when test="ParentAffiliateID=0">
                                <b>
                                    <xsl:value-of select="concat($prefix,$Name)"/>
                                </b>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="concat($prefix,$Name)"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </nobr><br/>
                    <xsl:call-template name="Affiliate">
                        <xsl:with-param name="paffiliateid" select="AffiliateID"></xsl:with-param>
                        <xsl:with-param name="prefix" select="concat($prefix, $Name, '&gt;&gt;')"></xsl:with-param>
                    </xsl:call-template>
                </xsl:for-each>
            </xsl:template>
        </xsl:stylesheet>
    </PackageTransform>
</package>
